{"version":3,"sources":["webpack:///webpack/bootstrap be35b932383e1607f4de","webpack:///./src/const.js","webpack:///./src/math/Vector.js","webpack:///./src/utils/math.js","webpack:///./src/settings.js","webpack:///./src/math/Rectangle.js","webpack:///./src/core/EventEmitter.js","webpack:///./src/support.js","webpack:///./src/utils/media.js","webpack:///./src/core/Color.js","webpack:///./src/math/Interval.js","webpack:///./src/graphics/Texture.js","webpack:///./src/math/Size.js","webpack:///./src/content/factories/ArrayBufferFactory.js","webpack:///./src/content/factories/MediaSourceFactory.js","webpack:///./src/math/Flags.js","webpack:///./src/math/Matrix.js","webpack:///./src/core/Collision.js","webpack:///./src/core/time/Time.js","webpack:///./src/particles/ParticleModifier.js","webpack:///./src/utils/array.js","webpack:///./src/content/ResourceFactory.js","webpack:///./src/graphics/sprite/Sprite.js","webpack:///./src/math/Polygon.js","webpack:///./src/content/factories/BlobFactory.js","webpack:///./src/utils/mime.js","webpack:///./src/content/factories/ImageFactory.js","webpack:///./src/media/Media.js","webpack:///./src/graphics/Container.js","webpack:///./src/graphics/Drawable.js","webpack:///./src/math/ObservableVector.js","webpack:///./src/math/Circle.js","webpack:///./src/core/Bounds.js","webpack:///./src/core/time/Clock.js","webpack:///./src/graphics/RenderTarget.js","webpack:///./src/graphics/Renderer.js","webpack:///./src/graphics/shader/Shader.js","webpack:///./src/graphics/VertexArray.js","webpack:///./src/content/Database.js","webpack:///./src/content/Loader.js","webpack:///./src/content/ResourceContainer.js","webpack:///./src/content/factories/FontFactory.js","webpack:///./src/content/factories/JSONFactory.js","webpack:///./src/content/factories/MusicFactory.js","webpack:///./src/media/MediaSource.js","webpack:///./src/media/Music.js","webpack:///./src/math/Random.js","webpack:///./src/input/GamepadMapping.js","webpack:///./src/input/GamepadControl.js","webpack:///./src/content/factories/SoundFactory.js","webpack:///./src/media/Sound.js","webpack:///./src/content/factories/TextFactory.js","webpack:///./src/content/factories/TextureFactory.js","webpack:///./src/content/factories/VideoFactory.js","webpack:///./src/media/Video.js","webpack:///./src/math/Transformable.js","webpack:///./src/core/SceneManager.js","webpack:///./src/graphics/RenderManager.js","webpack:///./src/graphics/View.js","webpack:///./src/math/ObservableSize.js","webpack:///./src/graphics/sprite/SpriteRenderer.js","webpack:///./src/graphics/sprite/SpriteShader.js","webpack:///./src/graphics/shader/ShaderAttribute.js","webpack:///./src/graphics/shader/ShaderUniform.js","webpack:///./src/graphics/shader/ShaderBlock.js","webpack:///(webpack)/node_modules/node-libs-browser/node_modules/path-browserify/index.js","webpack:///./src/graphics/Buffer.js","webpack:///./src/particles/ParticleRenderer.js","webpack:///./src/particles/ParticleShader.js","webpack:///./src/input/InputManager.js","webpack:///./src/utils/events.js","webpack:///./src/input/Pointer.js","webpack:///./src/input/Gamepad.js","webpack:///./src/graphics/text/TextStyle.js","webpack:///./src/particles/Particle.js","webpack:///./src/index.js","webpack:///./src/content/IDBDatabase.js","webpack:///./src/core/SceneNode.js","webpack:///./src/core/Application.js","webpack:///(webpack)/node_modules/node-libs-browser/node_modules/process/browser.js","webpack:///./src/core/Quadtree.js","webpack:///./src/core/Scene.js","webpack:///./src/core/time/Timer.js","webpack:///./src/graphics/RenderTexture.js","webpack:///./src/graphics/primitive/Drawing.js","webpack:///./src/graphics/text/Text.js","webpack:///./src/graphics/sprite/Spritesheet.js","webpack:///./src/particles/ParticleEmitter.js","webpack:///./src/particles/modifiers/ForceModifier.js","webpack:///./src/particles/modifiers/ScaleModifier.js","webpack:///./src/particles/modifiers/TorqueModifier.js","webpack:///./src/particles/modifiers/ColorModifier.js","webpack:///./src/input/Input.js","webpack:///./src/media/AudioAnalyser.js","webpack:///./src/utils/index.js"],"names":[],"mappings":"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R;AAED;;;;;;;;;4BAKI;mBAAO,KACV;;gDAGG;iBAAK,wBACR;AAED;;;;;;;;;4BAKI;mBAAO,KACV;;gCAGG;iBAAK,QACR;AAED;;;;;;;;;4BAKI;mBAAO,KACV;;oCAGG;iBAAK,YACR;;;;;;;;;;;;;ACvJL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA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;;mBACH;AAED;;;;;;;;;;+BAMI;gBAAI,KAAK,UACL;qCAAqB,KAErB;;qBAAK,cAAc,SACnB;qBAAK,OACL;qBAAK,WACR;AAED;;mBACH;AAED;;;;;;;;;;;;8CAQI;iBAAK,eAAe,OAAO,OAE3B;;iBAAK,QAAQ,UAAU,OAAO,QAE9B;;mBACH;AAED;;;;;;;;kCAII;wHAEA;;iBAEA;;gBAAI,KAAK,eACL;qBAAK,cAAc,YAAY,KAClC;AAED;;iBAAK,QACL;iBAAK,UAEL;;iBAAK,cACL;iBAAK,gBAEL;;iBAAK,eACL;iBAAK,iBAEL;;iBAAK,cACL;iBAAK,gBAEL;;iBAAK,OACL;iBAAK,SAEL;;iBAAK,UACL;iBAAK,UACL;iBAAK,gBACL;iBAAK,iBACL;iBAAK,YACL;iBAAK,WACR;;;;4BArKG;mBAAO,KACV;AAED;;;;;;;;;;4BAMI;mBAAO,KACV;AAED;;;;;;;;;;4BAMI;mBAAO,KACV;AAED;;;;;;;;;;4BAMI;mBAAO,KACV;AAED;;;;;;;;;;4BAMI;mBAAO,KACV;AAED;;;;;;;;;;4BAMI;mBAAO,KACV;AAED;;;;;;;;;;4BAMI;mBAAO,KACV;AAED;;;;;;;;;;4BAMI;mBAAQ,OAAO,KAAK,OAAO,YAC9B;;;;;;;;;;;;;AC9KL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA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","file":"exo.build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 74);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap be35b932383e1607f4de","export const\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @readonly\r\n     * @constant\r\n     * @type {String}\r\n     */\r\n    VERSION = __VERSION__,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @readonly\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    TAU = Math.PI * 2,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @readonly\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    RAD_PER_DEG = Math.PI / 180,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @readonly\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    DEG_PER_RAD = 180 / Math.PI,\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name VORONOI_REGION\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} LEFT\r\n     * @property {Number} MIDDLE\r\n     * @property {Number} RIGHT\r\n     */\r\n    VORONOI_REGION = {\r\n        LEFT: -1,\r\n        MIDDLE: 0,\r\n        RIGHT: 1,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name TIME\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} MILLISECONDS\r\n     * @property {Number} SECONDS\r\n     * @property {Number} MINUTES\r\n     * @property {Number} HOURS\r\n     */\r\n    TIME = {\r\n        MILLISECONDS: 1,\r\n        SECONDS: 1000,\r\n        MINUTES: 60000,\r\n        HOURS: 3600000,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name TEXTURE_FLAGS\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} NONE\r\n     * @property {Number} SCALE_MODE\r\n     * @property {Number} WRAP_MODE\r\n     * @property {Number} PREMULTIPLY_ALPHA\r\n     * @property {Number} SOURCE\r\n     * @property {Number} SIZE\r\n     * @property {Number} FLIP_Y\r\n     */\r\n    TEXTURE_FLAGS = {\r\n        NONE: 0,\r\n        SCALE_MODE: 1 << 0,\r\n        WRAP_MODE: 1 << 1,\r\n        PREMULTIPLY_ALPHA: 1 << 2,\r\n        SOURCE: 1 << 3,\r\n        SIZE: 1 << 4,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name SCALE_MODES\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} LINEAR\r\n     * @property {Number} NEAREST\r\n     */\r\n    SCALE_MODES = {\r\n        LINEAR: 0,\r\n        NEAREST: 1,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name WRAP_MODES\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} CLAMP_TO_EDGE\r\n     * @property {Number} REPEAT\r\n     * @property {Number} MIRRORED_REPEAT\r\n     */\r\n    WRAP_MODES = {\r\n        CLAMP_TO_EDGE: 0,\r\n        REPEAT: 1,\r\n        MIRRORED_REPEAT: 2,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name ATTRIBUTE_TYPE\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} BYTE\r\n     * @property {Number} UNSIGNED_BYTE\r\n     * @property {Number} SHORT\r\n     * @property {Number} UNSIGNED_SHORT\r\n     * @property {Number} INT\r\n     * @property {Number} UNSIGNED_INT\r\n     * @property {Number} FLOAT\r\n     */\r\n    ATTRIBUTE_TYPE = {\r\n        BYTE: 0x1400,\r\n        SHORT: 0x1402,\r\n        INT: 0x1404,\r\n        FLOAT: 0x1406,\r\n        UNSIGNED_BYTE: 0x1401,\r\n        UNSIGNED_SHORT: 0x1403,\r\n        UNSIGNED_INT: 0x1405,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name CHANNEL_OFFSET\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} KEYBOARD\r\n     * @property {Number} POINTERS\r\n     * @property {Number} GAMEPADS\r\n     */\r\n    CHANNEL_OFFSET = {\r\n        KEYBOARD: 0x000,\r\n        POINTERS: 0x100,\r\n        GAMEPADS: 0x200,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name CHANNEL_RANGE\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} GAMEPAD\r\n     * @property {Number} DEVICE\r\n     * @property {Number} CATEGORY\r\n     * @property {Number} OVERALL\r\n     */\r\n    CHANNEL_RANGE = {\r\n        GAMEPAD: 0x020,\r\n        CATEGORY: 0x100,\r\n        OVERALL: 0x300,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name KEYBOARD\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} Backspace\r\n     * @property {Number} Tab\r\n     * @property {Number} Clear\r\n     * @property {Number} Enter\r\n     * @property {Number} Shift\r\n     * @property {Number} Control\r\n     * @property {Number} Alt\r\n     * @property {Number} Pause\r\n     * @property {Number} CapsLock\r\n     * @property {Number} Escape\r\n     * @property {Number} Space\r\n     * @property {Number} PageUp\r\n     * @property {Number} PageDown\r\n     * @property {Number} End\r\n     * @property {Number} Home\r\n     * @property {Number} Left\r\n     * @property {Number} Up\r\n     * @property {Number} Right\r\n     * @property {Number} Down\r\n     * @property {Number} Insert\r\n     * @property {Number} Delete\r\n     * @property {Number} Help\r\n     * @property {Number} Zero\r\n     * @property {Number} One\r\n     * @property {Number} Two\r\n     * @property {Number} Three\r\n     * @property {Number} Four\r\n     * @property {Number} Five\r\n     * @property {Number} Six\r\n     * @property {Number} Seven\r\n     * @property {Number} Eight\r\n     * @property {Number} Nine\r\n     * @property {Number} A\r\n     * @property {Number} B\r\n     * @property {Number} C\r\n     * @property {Number} D\r\n     * @property {Number} E\r\n     * @property {Number} F\r\n     * @property {Number} G\r\n     * @property {Number} H\r\n     * @property {Number} I\r\n     * @property {Number} J\r\n     * @property {Number} K\r\n     * @property {Number} L\r\n     * @property {Number} M\r\n     * @property {Number} N\r\n     * @property {Number} O\r\n     * @property {Number} P\r\n     * @property {Number} Q\r\n     * @property {Number} R\r\n     * @property {Number} S\r\n     * @property {Number} T\r\n     * @property {Number} U\r\n     * @property {Number} V\r\n     * @property {Number} W\r\n     * @property {Number} X\r\n     * @property {Number} Y\r\n     * @property {Number} Z\r\n     * @property {Number} NumPad0\r\n     * @property {Number} NumPad1\r\n     * @property {Number} NumPad2\r\n     * @property {Number} NumPad3\r\n     * @property {Number} NumPad4\r\n     * @property {Number} NumPad5\r\n     * @property {Number} NumPad6\r\n     * @property {Number} NumPad7\r\n     * @property {Number} NumPad8\r\n     * @property {Number} NumPad9\r\n     * @property {Number} NumPadMultiply\r\n     * @property {Number} NumPadAdd\r\n     * @property {Number} NumPadEnter\r\n     * @property {Number} NumPadSubtract\r\n     * @property {Number} NumPadDecimal\r\n     * @property {Number} NumPadDivide\r\n     * @property {Number} F1\r\n     * @property {Number} F2\r\n     * @property {Number} F3\r\n     * @property {Number} F4\r\n     * @property {Number} F5\r\n     * @property {Number} F6\r\n     * @property {Number} F7\r\n     * @property {Number} F8\r\n     * @property {Number} F9\r\n     * @property {Number} F10\r\n     * @property {Number} F11\r\n     * @property {Number} F12\r\n     * @property {Number} NumLock\r\n     * @property {Number} ScrollLock\r\n     * @property {Number} Colon\r\n     * @property {Number} Equals\r\n     * @property {Number} Comma\r\n     * @property {Number} Dash\r\n     * @property {Number} Period\r\n     * @property {Number} QuestionMark\r\n     * @property {Number} Tilde\r\n     * @property {Number} OpenBracket\r\n     * @property {Number} BackwardSlash\r\n     * @property {Number} ClosedBracket\r\n     * @property {Number} Quotes\r\n     */\r\n    KEYBOARD = {\r\n        Backspace: CHANNEL_OFFSET.KEYBOARD + 8,\r\n        Tab: CHANNEL_OFFSET.KEYBOARD + 9,\r\n        Clear: CHANNEL_OFFSET.KEYBOARD + 12,\r\n        Enter: CHANNEL_OFFSET.KEYBOARD + 13,\r\n        Shift: CHANNEL_OFFSET.KEYBOARD + 16,\r\n        Control: CHANNEL_OFFSET.KEYBOARD + 17,\r\n        Alt: CHANNEL_OFFSET.KEYBOARD + 18,\r\n        Pause: CHANNEL_OFFSET.KEYBOARD + 19,\r\n        CapsLock: CHANNEL_OFFSET.KEYBOARD + 20,\r\n        Escape: CHANNEL_OFFSET.KEYBOARD + 27,\r\n        Space: CHANNEL_OFFSET.KEYBOARD + 32,\r\n        PageUp: CHANNEL_OFFSET.KEYBOARD + 33,\r\n        PageDown: CHANNEL_OFFSET.KEYBOARD + 34,\r\n        End: CHANNEL_OFFSET.KEYBOARD + 35,\r\n        Home: CHANNEL_OFFSET.KEYBOARD + 36,\r\n        Left: CHANNEL_OFFSET.KEYBOARD + 37,\r\n        Up: CHANNEL_OFFSET.KEYBOARD + 38,\r\n        Right: CHANNEL_OFFSET.KEYBOARD + 39,\r\n        Down: CHANNEL_OFFSET.KEYBOARD + 40,\r\n        Insert: CHANNEL_OFFSET.KEYBOARD + 45,\r\n        Delete: CHANNEL_OFFSET.KEYBOARD + 46,\r\n        Help: CHANNEL_OFFSET.KEYBOARD + 47,\r\n        Zero: CHANNEL_OFFSET.KEYBOARD + 48,\r\n        One: CHANNEL_OFFSET.KEYBOARD + 49,\r\n        Two: CHANNEL_OFFSET.KEYBOARD + 50,\r\n        Three: CHANNEL_OFFSET.KEYBOARD + 51,\r\n        Four: CHANNEL_OFFSET.KEYBOARD + 52,\r\n        Five: CHANNEL_OFFSET.KEYBOARD + 53,\r\n        Six: CHANNEL_OFFSET.KEYBOARD + 54,\r\n        Seven: CHANNEL_OFFSET.KEYBOARD + 55,\r\n        Eight: CHANNEL_OFFSET.KEYBOARD + 56,\r\n        Nine: CHANNEL_OFFSET.KEYBOARD + 57,\r\n        A: CHANNEL_OFFSET.KEYBOARD + 65,\r\n        B: CHANNEL_OFFSET.KEYBOARD + 66,\r\n        C: CHANNEL_OFFSET.KEYBOARD + 67,\r\n        D: CHANNEL_OFFSET.KEYBOARD + 68,\r\n        E: CHANNEL_OFFSET.KEYBOARD + 69,\r\n        F: CHANNEL_OFFSET.KEYBOARD + 70,\r\n        G: CHANNEL_OFFSET.KEYBOARD + 71,\r\n        H: CHANNEL_OFFSET.KEYBOARD + 72,\r\n        I: CHANNEL_OFFSET.KEYBOARD + 73,\r\n        J: CHANNEL_OFFSET.KEYBOARD + 74,\r\n        K: CHANNEL_OFFSET.KEYBOARD + 75,\r\n        L: CHANNEL_OFFSET.KEYBOARD + 76,\r\n        M: CHANNEL_OFFSET.KEYBOARD + 77,\r\n        N: CHANNEL_OFFSET.KEYBOARD + 78,\r\n        O: CHANNEL_OFFSET.KEYBOARD + 79,\r\n        P: CHANNEL_OFFSET.KEYBOARD + 80,\r\n        Q: CHANNEL_OFFSET.KEYBOARD + 81,\r\n        R: CHANNEL_OFFSET.KEYBOARD + 82,\r\n        S: CHANNEL_OFFSET.KEYBOARD + 83,\r\n        T: CHANNEL_OFFSET.KEYBOARD + 84,\r\n        U: CHANNEL_OFFSET.KEYBOARD + 85,\r\n        V: CHANNEL_OFFSET.KEYBOARD + 86,\r\n        W: CHANNEL_OFFSET.KEYBOARD + 87,\r\n        X: CHANNEL_OFFSET.KEYBOARD + 88,\r\n        Y: CHANNEL_OFFSET.KEYBOARD + 89,\r\n        Z: CHANNEL_OFFSET.KEYBOARD + 90,\r\n        NumPad0: CHANNEL_OFFSET.KEYBOARD + 96,\r\n        NumPad1: CHANNEL_OFFSET.KEYBOARD + 97,\r\n        NumPad2: CHANNEL_OFFSET.KEYBOARD + 98,\r\n        NumPad3: CHANNEL_OFFSET.KEYBOARD + 99,\r\n        NumPad4: CHANNEL_OFFSET.KEYBOARD + 100,\r\n        NumPad5: CHANNEL_OFFSET.KEYBOARD + 101,\r\n        NumPad6: CHANNEL_OFFSET.KEYBOARD + 102,\r\n        NumPad7: CHANNEL_OFFSET.KEYBOARD + 103,\r\n        NumPad8: CHANNEL_OFFSET.KEYBOARD + 104,\r\n        NumPad9: CHANNEL_OFFSET.KEYBOARD + 105,\r\n        NumPadMultiply: CHANNEL_OFFSET.KEYBOARD + 106,\r\n        NumPadAdd: CHANNEL_OFFSET.KEYBOARD + 107,\r\n        NumPadEnter: CHANNEL_OFFSET.KEYBOARD + 108,\r\n        NumPadSubtract: CHANNEL_OFFSET.KEYBOARD + 109,\r\n        NumPadDecimal: CHANNEL_OFFSET.KEYBOARD + 110,\r\n        NumPadDivide: CHANNEL_OFFSET.KEYBOARD + 111,\r\n        F1: CHANNEL_OFFSET.KEYBOARD + 112,\r\n        F2: CHANNEL_OFFSET.KEYBOARD + 113,\r\n        F3: CHANNEL_OFFSET.KEYBOARD + 114,\r\n        F4: CHANNEL_OFFSET.KEYBOARD + 115,\r\n        F5: CHANNEL_OFFSET.KEYBOARD + 116,\r\n        F6: CHANNEL_OFFSET.KEYBOARD + 117,\r\n        F7: CHANNEL_OFFSET.KEYBOARD + 118,\r\n        F8: CHANNEL_OFFSET.KEYBOARD + 119,\r\n        F9: CHANNEL_OFFSET.KEYBOARD + 120,\r\n        F10: CHANNEL_OFFSET.KEYBOARD + 121,\r\n        F11: CHANNEL_OFFSET.KEYBOARD + 122,\r\n        F12: CHANNEL_OFFSET.KEYBOARD + 123,\r\n        NumLock: CHANNEL_OFFSET.KEYBOARD + 144,\r\n        ScrollLock: CHANNEL_OFFSET.KEYBOARD + 145,\r\n        Colon: CHANNEL_OFFSET.KEYBOARD + 186,\r\n        Equals: CHANNEL_OFFSET.KEYBOARD + 187,\r\n        Comma: CHANNEL_OFFSET.KEYBOARD + 188,\r\n        Dash: CHANNEL_OFFSET.KEYBOARD + 189,\r\n        Period: CHANNEL_OFFSET.KEYBOARD + 190,\r\n        QuestionMark: CHANNEL_OFFSET.KEYBOARD + 191,\r\n        Tilde: CHANNEL_OFFSET.KEYBOARD + 192,\r\n        OpenBracket: CHANNEL_OFFSET.KEYBOARD + 219,\r\n        BackwardSlash: CHANNEL_OFFSET.KEYBOARD + 220,\r\n        ClosedBracket: CHANNEL_OFFSET.KEYBOARD + 221,\r\n        Quotes: CHANNEL_OFFSET.KEYBOARD + 222,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name GAMEPAD\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} FaceBottom\r\n     * @property {Number} FaceLeft\r\n     * @property {Number} FaceRight\r\n     * @property {Number} FaceTop\r\n     * @property {Number} ShoulderLeftBottom\r\n     * @property {Number} ShoulderRightBottom\r\n     * @property {Number} ShoulderLeftTop\r\n     * @property {Number} ShoulderRightTop\r\n     * @property {Number} Select\r\n     * @property {Number} Start\r\n     * @property {Number} LeftStick\r\n     * @property {Number} RightStick\r\n     * @property {Number} DPadUp\r\n     * @property {Number} DPadDown\r\n     * @property {Number} DPadLeft\r\n     * @property {Number} DPadRight\r\n     * @property {Number} Home\r\n     * @property {Number} LeftStickLeft\r\n     * @property {Number} LeftStickRight\r\n     * @property {Number} LeftStickUp\r\n     * @property {Number} LeftStickDown\r\n     * @property {Number} RightStickLeft\r\n     * @property {Number} RightStickRight\r\n     * @property {Number} RightStickUp\r\n     * @property {Number} RightStickDown\r\n     */\r\n    GAMEPAD = {\r\n        FaceBottom: CHANNEL_OFFSET.GAMEPADS + 0,\r\n        FaceLeft: CHANNEL_OFFSET.GAMEPADS + 1,\r\n        FaceRight: CHANNEL_OFFSET.GAMEPADS + 2,\r\n        FaceTop: CHANNEL_OFFSET.GAMEPADS + 3,\r\n        ShoulderLeftBottom: CHANNEL_OFFSET.GAMEPADS + 4,\r\n        ShoulderRightBottom: CHANNEL_OFFSET.GAMEPADS + 5,\r\n        ShoulderLeftTop: CHANNEL_OFFSET.GAMEPADS + 6,\r\n        ShoulderRightTop: CHANNEL_OFFSET.GAMEPADS + 7,\r\n        Select: CHANNEL_OFFSET.GAMEPADS + 8,\r\n        Start: CHANNEL_OFFSET.GAMEPADS + 9,\r\n        LeftStick: CHANNEL_OFFSET.GAMEPADS + 10,\r\n        RightStick: CHANNEL_OFFSET.GAMEPADS + 11,\r\n        DPadUp: CHANNEL_OFFSET.GAMEPADS + 12,\r\n        DPadDown: CHANNEL_OFFSET.GAMEPADS + 13,\r\n        DPadLeft: CHANNEL_OFFSET.GAMEPADS + 14,\r\n        DPadRight: CHANNEL_OFFSET.GAMEPADS + 15,\r\n        Home: CHANNEL_OFFSET.GAMEPADS + 16,\r\n        LeftStickLeft: CHANNEL_OFFSET.GAMEPADS + 17,\r\n        LeftStickRight: CHANNEL_OFFSET.GAMEPADS + 18,\r\n        LeftStickUp: CHANNEL_OFFSET.GAMEPADS + 19,\r\n        LeftStickDown: CHANNEL_OFFSET.GAMEPADS + 20,\r\n        RightStickLeft: CHANNEL_OFFSET.GAMEPADS + 21,\r\n        RightStickRight: CHANNEL_OFFSET.GAMEPADS + 22,\r\n        RightStickUp: CHANNEL_OFFSET.GAMEPADS + 23,\r\n        RightStickDown: CHANNEL_OFFSET.GAMEPADS + 24,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name UNIFORM_TYPE\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} INT\r\n     * @property {Number} INT_VEC2\r\n     * @property {Number} INT_VEC3\r\n     * @property {Number} INT_VEC4\r\n     *\r\n     * @property {Number} FLOAT\r\n     * @property {Number} FLOAT_VEC2\r\n     * @property {Number} FLOAT_VEC3\r\n     * @property {Number} FLOAT_VEC4\r\n     *\r\n     * @property {Number} BOOL\r\n     * @property {Number} BOOL_VEC2\r\n     * @property {Number} BOOL_VEC3\r\n     * @property {Number} BOOL_VEC4\r\n     *\r\n     * @property {Number} FLOAT_MAT2\r\n     * @property {Number} FLOAT_MAT3\r\n     * @property {Number} FLOAT_MAT4\r\n     *\r\n     * @property {Number} SAMPLER_2D\r\n     */\r\n    UNIFORM_TYPE = {\r\n        INT: 0x1404,\r\n        INT_VEC2: 0x8B53,\r\n        INT_VEC3: 0x8B54,\r\n        INT_VEC4: 0x8B55,\r\n\r\n        FLOAT: 0x1406,\r\n        FLOAT_VEC2: 0x8B50,\r\n        FLOAT_VEC3: 0x8B51,\r\n        FLOAT_VEC4: 0x8B52,\r\n\r\n        BOOL: 0x8B56,\r\n        BOOL_VEC2: 0x8B57,\r\n        BOOL_VEC3: 0x8B58,\r\n        BOOL_VEC4: 0x8B59,\r\n\r\n        FLOAT_MAT2: 0x8B5A,\r\n        FLOAT_MAT3: 0x8B5B,\r\n        FLOAT_MAT4: 0x8B5C,\r\n\r\n        SAMPLER_2D: 0x8B5E,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name TYPE_SIZES\r\n     * @type {Object<Number, Number>}\r\n     */\r\n    TYPE_SIZES = {\r\n        [UNIFORM_TYPE.FLOAT]: 1,\r\n        [UNIFORM_TYPE.FLOAT_VEC2]: 2,\r\n        [UNIFORM_TYPE.FLOAT_VEC3]: 3,\r\n        [UNIFORM_TYPE.FLOAT_VEC4]: 4,\r\n        [UNIFORM_TYPE.INT]: 1,\r\n        [UNIFORM_TYPE.INT_VEC2]: 2,\r\n        [UNIFORM_TYPE.INT_VEC3]: 3,\r\n        [UNIFORM_TYPE.INT_VEC4]: 4,\r\n        [UNIFORM_TYPE.BOOL]: 1,\r\n        [UNIFORM_TYPE.BOOL_VEC2]: 2,\r\n        [UNIFORM_TYPE.BOOL_VEC3]: 3,\r\n        [UNIFORM_TYPE.BOOL_VEC4]: 4,\r\n        [UNIFORM_TYPE.FLOAT_MAT2]: 4,\r\n        [UNIFORM_TYPE.FLOAT_MAT3]: 9,\r\n        [UNIFORM_TYPE.FLOAT_MAT4]: 16,\r\n        [UNIFORM_TYPE.SAMPLER_2D]: 1,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name TYPE_NAMES\r\n     * @type {Object<Number, String>}\r\n     */\r\n    TYPE_NAMES = {\r\n        [UNIFORM_TYPE.INT]: 'INT',\r\n        [UNIFORM_TYPE.FLOAT]: 'FLOAT',\r\n        [UNIFORM_TYPE.FLOAT_VEC2]: 'FLOAT_VEC2',\r\n        [UNIFORM_TYPE.FLOAT_VEC3]: 'FLOAT_VEC3',\r\n        [UNIFORM_TYPE.FLOAT_VEC4]: 'FLOAT_VEC4',\r\n        [UNIFORM_TYPE.INT_VEC2]: 'INT_VEC2',\r\n        [UNIFORM_TYPE.INT_VEC3]: 'INT_VEC3',\r\n        [UNIFORM_TYPE.INT_VEC4]: 'INT_VEC4',\r\n        [UNIFORM_TYPE.BOOL]: 'BOOL',\r\n        [UNIFORM_TYPE.BOOL_VEC2]: 'BOOL_VEC2',\r\n        [UNIFORM_TYPE.BOOL_VEC3]: 'BOOL_VEC3',\r\n        [UNIFORM_TYPE.BOOL_VEC4]: 'BOOL_VEC4',\r\n        [UNIFORM_TYPE.FLOAT_MAT2]: 'FLOAT_MAT2',\r\n        [UNIFORM_TYPE.FLOAT_MAT3]: 'FLOAT_MAT3',\r\n        [UNIFORM_TYPE.FLOAT_MAT4]: 'FLOAT_MAT4',\r\n        [UNIFORM_TYPE.SAMPLER_2D]: 'SAMPLER_2D',\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name BLEND_MODES\r\n     * @type {Object<String, Number>}\r\n     * @property {Number} NORMAL\r\n     * @property {Number} ADD\r\n     * @property {Number} SUBTRACT\r\n     * @property {Number} MULTIPLY\r\n     * @property {Number} SCREEN\r\n     */\r\n    BLEND_MODES = {\r\n        NORMAL: 0,\r\n        ADDITIVE: 1,\r\n        SUBTRACT: 2,\r\n        MULTIPLY: 3,\r\n        SCREEN: 4,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name DATABASE_TYPES\r\n     * @type {String[]}\r\n     */\r\n    DATABASE_TYPES = [\r\n        'arrayBuffer',\r\n        'blob',\r\n        'font',\r\n        'media',\r\n        'audio',\r\n        'video',\r\n        'music',\r\n        'sound',\r\n        'image',\r\n        'texture',\r\n        'text',\r\n        'json',\r\n    ],\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @name EMPTY_ARRAY_BUFFER\r\n     * @type {ArrayBuffer}\r\n     */\r\n    EMPTY_ARRAY_BUFFER = new ArrayBuffer(0);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/const.js","/**\r\n * @class Vector\r\n */\r\nexport default class Vector {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [x=0]\r\n     * @param {Number} [y=0]\r\n     */\r\n    constructor(x = 0, y = 0) {\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this._x = x;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this._y = y;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(x) {\r\n        this._x = x;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(y) {\r\n        this._y = y;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get angle() {\r\n        return Math.atan2(this._x, this._y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get magnitude() {\r\n        return this.len;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get len() {\r\n        return Math.sqrt(this.len2);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get len2() {\r\n        return (this._x * this._x) + (this._y * this._y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Vector}\r\n     */\r\n    set(x, y = x) {\r\n        this._x = x;\r\n        this._y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Vector} vector\r\n     * @returns {Vector}\r\n     */\r\n    copy(vector) {\r\n        this._x = vector.x;\r\n        this._y = vector.y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Vector}\r\n     */\r\n    clone() {\r\n        return new Vector(this._x, this._y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector|Object} vector\r\n     * @param {Number} [vector.x]\r\n     * @param {Number} [vector.y]\r\n     * @returns {Boolean}\r\n     */\r\n    equals({ x, y } = {}) {\r\n        return (x === undefined || this.x === x)\r\n            && (y === undefined || this.y === y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Vector}\r\n     */\r\n    normalize() {\r\n        const mag = this.magnitude;\r\n\r\n        if (mag > 0) {\r\n            this._x /= mag;\r\n            this._y /= mag;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Vector}\r\n     */\r\n    reverse() {\r\n        this._x *= -1;\r\n        this._y *= -1;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Vector}\r\n     */\r\n    add(x, y = x) {\r\n        this._x += x;\r\n        this._y += y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Vector}\r\n     */\r\n    subtract(x, y = x) {\r\n        this._x -= x;\r\n        this._y -= y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Vector}\r\n     */\r\n    scale(x, y = x) {\r\n        this._x *= x;\r\n        this._y *= y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Vector}\r\n     */\r\n    divide(x, y = x) {\r\n        this._x /= x;\r\n        this._y /= y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Matrix} matrix\r\n     * @param {Vector} [result=this]\r\n     * @returns {Vector}\r\n     */\r\n    transform(matrix, result = this) {\r\n        return result.set(\r\n            (this._x * matrix.a) + (this._y * matrix.b) + matrix.x,\r\n            (this._x * matrix.c) + (this._y * matrix.d) + matrix.y\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Matrix} matrix\r\n     * @param {Vector} [result=this]\r\n     * @returns {Vector}\r\n     */\r\n    transformInverse(matrix, result = this) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n\r\n        return result.set(\r\n            (this._x * matrix.d * id) + (this._y * -matrix.c * id) + (((matrix.y * matrix.c) - (matrix.x * matrix.d)) * id),\r\n            (this._y * matrix.a * id) + (this._x * -matrix.b * id) + (((-matrix.y * matrix.a) + (matrix.x * matrix.b)) * id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} [result=this]\r\n     * @returns {Vector}\r\n     */\r\n    perp(result = this) {\r\n        return result.set(this._y, this._x * -1);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Number}\r\n     */\r\n    distanceTo(x, y) {\r\n        const offsetX = this._x - x,\r\n            offsetY = this._y - y;\r\n\r\n        return Math.sqrt((offsetX * offsetX) + (offsetY * offsetY));\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} vector\r\n     * @returns {Number}\r\n     */\r\n    cross(vector) {\r\n        return (this._x * vector.y) - (this._y * vector.x);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Number}\r\n     */\r\n    dot(x, y) {\r\n        return (this._x * x) + (this._y * y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Vector} vector\r\n     * @param {Vector} [result=this]\r\n     * @returns {Vector}\r\n     */\r\n    project(vector, result = this) {\r\n        const amt = this.dot(vector.x, vector.y) / vector.len2;\r\n\r\n        return result.set(amt * vector.x, amt * vector.y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Vector} axis\r\n     * @returns {Vector}\r\n     */\r\n    reflect(axis, result = this) {\r\n        const x = this._x,\r\n            y = this._y;\r\n\r\n        return this\r\n            .project(axis, result)\r\n            .scale(2)\r\n            .subtract(x, y);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        this._x = null;\r\n        this._y = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @type {Vector}\r\n */\r\nVector.Empty = new Vector(0, 0);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @type {Vector}\r\n */\r\nVector.Temp = new Vector();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Vector.js","import { RAD_PER_DEG, DEG_PER_RAD, VORONOI_REGION } from '../const';\nimport Random from '../math/Random';\n\nconst\n\n    /**\n     * @inner\n     * @constant\n     * @type {Random}\n     */\n    rng = new Random(),\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} degree\n     * @returns {Number}\n     */\n    degreesToRadians = (degree) => degree * RAD_PER_DEG,\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} radian\n     * @returns {Number}\n     */\n    radiansToDegrees = (radian) => radian * DEG_PER_RAD,\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} value\n     * @param {Number} min\n     * @param {Number} max\n     * @returns {Number}\n     */\n    clamp = (value, min, max) => Math.min(max, Math.max(min, value)),\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} value\n     * @returns {Number}\n     */\n    sign = (value) => (\n        value && (value < 0 ? -1 : 1)\n    ),\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} value\n     * @returns {Boolean}\n     */\n    isPowerOfTwo = (value) => (\n        (value !== 0) && ((value & (value - 1)) === 0)\n    ),\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} value\n     * @param {Number} min\n     * @param {Number} max\n     * @returns {Boolean}\n     */\n    inRange = (value, min, max) => (\n        (value >= Math.min(min, max)) && (value <= Math.max(min, max))\n    ),\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} [min]\n     * @param {Number} [max]\n     * @return {Number}\n     */\n    random = (min, max) => rng.next(min, max),\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} fromX\n     * @param {Number} fromY\n     * @param {Number} cpX1\n     * @param {Number} cpY1\n     * @param {Number} cpX2\n     * @param {Number} cpY2\n     * @param {Number} toX\n     * @param {Number} toY\n     * @param {Number[]} [path=[]]\n     * @return {Number[]}\n     */\n    bezierCurveTo = (fromX, fromY, cpX1, cpY1, cpX2, cpY2, toX, toY, path = []) => {\n        path.push(fromX, fromY);\n\n        for (let i = 1, j = 0, dt1 = 0, dt2 = 0, dt3 = 0, t2 = 0, t3 = 0; i <= 20; i++) {\n            j = i / 20;\n\n            dt1 = (1 - j);\n            dt2 = dt1 * dt1;\n            dt3 = dt2 * dt1;\n\n            t2 = j * j;\n            t3 = t2 * j;\n\n            path.push(\n                (dt3 * fromX) + (3 * dt2 * j * cpX1) + (3 * dt1 * t2 * cpX2) + (t3 * toX),\n                (dt3 * fromY) + (3 * dt2 * j * cpY1) + (3 * dt1 * t2 * cpY2) + (t3 * toY)\n            );\n        }\n\n        return path;\n    },\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Vector} line\n     * @param {Vector} point\n     * @returns {Number}\n     */\n    getVoronoiRegion = (line, point) => {\n        var dp = point.dot(line.x, line.y);\n\n        if (dp < 0) {\n            return VORONOI_REGION.LEFT;\n        } else if (dp > line.len2) {\n            return VORONOI_REGION.RIGHT;\n        } else {\n            return VORONOI_REGION.MIDDLE;\n        }\n    },\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {Number} fromValue\n     * @param {Number} toValue\n     * @param {Number} ratio\n     * @returns {Number}\n     */\n    lerp = (startValue, endValue, ratio) => ((1 - ratio) * startValue + ratio * endValue);\n\n/**\n * @namespace Exo\n */\nexport {\n    degreesToRadians,\n    radiansToDegrees,\n    clamp,\n    sign,\n    lerp,\n    isPowerOfTwo,\n    inRange,\n    random,\n    bezierCurveTo,\n    getVoronoiRegion,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/math.js","import { SCALE_MODES, WRAP_MODES } from './const';\r\nimport Color from './core/Color';\r\nimport GamepadMapping from './input/GamepadMapping';\r\n\r\nexport default {\r\n\r\n    /**\r\n     * @static\r\n     * @type {Object}\r\n     * @name APP_OPTIONS\r\n     * @property {String} resourcePath=''\r\n     * @property {Number} width=800\r\n     * @property {Number} height=600\r\n     * @property {?HTMLCanvasElement} canvas=null\r\n     * @property {?HTMLElement} canvasParent=null\r\n     * @property {Color} clearColor=Color.Black\r\n     * @property {?Database} database=null\r\n     */\r\n    APP_OPTIONS: {\r\n        resourcePath: '',\r\n        width: 800,\r\n        height: 600,\r\n        canvas: null,\r\n        canvasParent: null,\r\n        clearColor: Color.Black,\r\n        database: null,\r\n    },\r\n\r\n    /**\r\n     * @static\r\n     * @type {Object}\r\n     * @name CONTEXT_OPTIONS\r\n     * @property {Boolean} alpha=false\r\n     * @property {Boolean} antialias=false\r\n     * @property {Boolean} premultipliedAlpha=false\r\n     * @property {Boolean} preserveDrawingBuffer=false\r\n     * @property {Boolean} stencil=false\r\n     * @property {Boolean} depth=false\r\n     */\r\n    CONTEXT_OPTIONS: {\r\n        alpha: false,\r\n        antialias: false,\r\n        premultipliedAlpha: false,\r\n        preserveDrawingBuffer: false,\r\n        stencil: false,\r\n        depth: false,\r\n    },\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {String}\r\n     * @default 'GET'\r\n     */\r\n    REQUEST_METHOD: 'GET',\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {String}\r\n     * @default 'cors'\r\n     */\r\n    REQUEST_MODE: 'cors',\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {String}\r\n     * @default 'default'\r\n     */\r\n    REQUEST_CACHE: 'default',\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default SCALE_MODES.LINEAR\r\n     */\r\n    SCALE_MODE: SCALE_MODES.LINEAR,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default WRAP_MODES.CLAMP_TO_EDGE\r\n     */\r\n    WRAP_MODE: WRAP_MODES.CLAMP_TO_EDGE,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Boolean}\r\n     * @default true\r\n     */\r\n    PREMULTIPLY_ALPHA: true,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Boolean}\r\n     * @default true\r\n     */\r\n    GENERATE_MIPMAP: true,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 1.0\r\n     */\r\n    MEDIA_SPEED: 1.0,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n    MEDIA_LOOP: false,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 0\r\n     */\r\n    MEDIA_TIME: 0,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n    MEDIA_MUTED: false,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 1.0\r\n     */\r\n    VOLUME_MUSIC: 1.0,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 1.0\r\n     */\r\n    VOLUME_SOUND: 1.0,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 1.0\r\n     */\r\n    VOLUME_VIDEO: 1.0,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 5\r\n     */\r\n    QUAD_TREE_MAX_LEVEL: 5,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 20\r\n     */\r\n    QUAD_TREE_MAX_OBJECTS: 20,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 2500\r\n     */\r\n    BATCH_SIZE_SPRITES: 2500, // ~ 160kb\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 5000\r\n     */\r\n    BATCH_SIZE_PARTICLES: 5000, // ~ 800kb\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {Number}\r\n     * @default 300\r\n     */\r\n    INPUT_THRESHOLD: 300,\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @type {GamepadMapping}\r\n     * @default {GamepadMapping}\r\n     */\r\n    GAMEPAD_MAPPING: new GamepadMapping(),\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/settings.js","import { inRange } from '../utils/math';\r\nimport Vector from './Vector';\r\nimport Size from './Size';\r\nimport Circle from './Circle';\r\nimport Polygon from './Polygon';\r\nimport Collision from '../core/Collision';\r\nimport Interval from './Interval';\r\n\r\n/**\r\n * @class Rectangle\r\n */\r\nexport default class Rectangle {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [x=0]\r\n     * @param {Number} [y=x]\r\n     * @param {Number} [width=0]\r\n     * @param {Number} [height=width]\r\n     */\r\n    constructor(x = 0, y = x, width = 0, height = width) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._position = new Vector(x, y);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Size}\r\n         */\r\n        this._size = new Size(width, height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get position() {\r\n        return this._position;\r\n    }\r\n\r\n    set position(position) {\r\n        this._position.copy(position);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get x() {\r\n        return this._position.x;\r\n    }\r\n\r\n    set x(x) {\r\n        this._position.x = x;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get y() {\r\n        return this._position.y;\r\n    }\r\n\r\n    set y(y) {\r\n        this._position.y = y;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Size}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size) {\r\n        this._size.copy(size);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return this._size.width;\r\n    }\r\n\r\n    set width(width) {\r\n        this._size.width = width;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return this._size.height;\r\n    }\r\n\r\n    set height(height) {\r\n        this._size.height = height;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get left() {\r\n        return this.x;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get top() {\r\n        return this.y;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get right() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get bottom() {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Rectangle}\r\n     */\r\n    setPosition(x, y) {\r\n        this.position.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {Rectangle}\r\n     */\r\n    setSize(width, height) {\r\n        this._size.set(width, height);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {Rectangle}\r\n     */\r\n    set(x, y, width, height) {\r\n        this._position.set(x, y);\r\n        this._size.set(width, height);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Rectangle} rectangle\r\n     * @returns {Rectangle}\r\n     */\r\n    copy(rectangle) {\r\n        this._position.copy(rectangle.position);\r\n        this._size.copy(rectangle.size);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Rectangle}\r\n     */\r\n    clone() {\r\n        return new Rectangle(this.x, this.y, this.width, this.height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Rectangle|Object} rectangle\r\n     * @param {Number} [rectangle.x]\r\n     * @param {Number} [rectangle.y]\r\n     * @param {Number} [rectangle.width]\r\n     * @param {Number} [rectangle.height]\r\n     * @returns {Boolean}\r\n     */\r\n    equals({ x, y, width, height } = {}) {\r\n        return (x === undefined || this.x === x)\r\n            && (y === undefined || this.y === y)\r\n            && (width === undefined || this.width === width)\r\n            && (height === undefined || this.height === height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Rectangle}\r\n     */\r\n    getBounds() {\r\n        return this.clone();\r\n    }\r\n\r\n    /**\r\n     * todo - cache this\r\n     *\r\n     * @public\r\n     * @returns {Vector[]}\r\n     */\r\n    getNormals() {\r\n        const point = Vector.Temp,\r\n            normals = [];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            point.set(\r\n                (((i + 1) % 3) === 0) ? this.left : this.right,\r\n                (((i + 1) / 2 | 0) === 0) ? this.top : this.bottom,\r\n            );\r\n\r\n            normals.push(\r\n                point.clone()\r\n                    .subtract(\r\n                        ((i % 3) === 0) ? this.left : this.right,\r\n                        ((i / 2 | 0) === 0) ? this.top : this.bottom\r\n                    )\r\n                    .perp()\r\n                    .normalize()\r\n            );\r\n        }\r\n\r\n        return normals;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} axis\r\n     * @param {Interval} [result=new Interval()]\r\n     * @returns {Interval}\r\n     */\r\n    project(axis, result = new Interval()) {\r\n        let min = axis.dot(this.left, this.top),\r\n            max = min,\r\n            projection;\r\n\r\n        projection = axis.dot(this.right, this.top);\r\n\r\n        min = Math.min(min, projection);\r\n        max = Math.max(max, projection);\r\n\r\n        projection = axis.dot(this.right, this.bottom);\r\n\r\n        min = Math.min(min, projection);\r\n        max = Math.max(max, projection);\r\n\r\n        projection = axis.dot(this.left, this.bottom);\r\n\r\n        min = Math.min(min, projection);\r\n        max = Math.max(max, projection);\r\n\r\n        return result.set(min, max);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Matrix} matrix\r\n     * @param {Rectangle} [result=this]\r\n     * @returns {Rectangle}\r\n     */\r\n    transform(matrix, result = this) {\r\n        const point = Vector.Temp;\r\n\r\n        let minX, minY, maxX, maxY;\r\n\r\n        point.set(this.left, this.top)\r\n            .transform(matrix);\r\n\r\n        minX = maxX = point.x;\r\n        minY = maxY = point.y;\r\n\r\n        point.set(this.left, this.bottom)\r\n            .transform(matrix);\r\n\r\n        minX = Math.min(minX, point.x);\r\n        minY = Math.min(minY, point.y);\r\n        maxX = Math.max(maxX, point.x);\r\n        maxY = Math.max(maxY, point.y);\r\n\r\n        point.set(this.right, this.top)\r\n            .transform(matrix);\r\n\r\n        minX = Math.min(minX, point.x);\r\n        minY = Math.min(minY, point.y);\r\n        maxX = Math.max(maxX, point.x);\r\n        maxY = Math.max(maxY, point.y);\r\n\r\n        point.set(this.right, this.bottom)\r\n            .transform(matrix);\r\n\r\n        minX = Math.min(minX, point.x);\r\n        minY = Math.min(minY, point.y);\r\n        maxX = Math.max(maxX, point.x);\r\n        maxY = Math.max(maxY, point.y);\r\n\r\n        return result.set(\r\n            minX,\r\n            minY,\r\n            maxX - minX,\r\n            maxY - minY\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Matrix} [transform]\r\n     * @returns {Boolean}\r\n     */\r\n    contains(x, y, transform) {\r\n        let min = new Vector(this.left, this.top),\r\n            max = new Vector(this.right, this.bottom);\r\n\r\n        if (transform) {\r\n            min.transform(transform);\r\n            max.transform(transform);\r\n        }\r\n\r\n        return inRange(x, min.x, max.x)\r\n            && inRange(y, min.y, max.y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Rectangle} rect\r\n     * @returns {Boolean}\r\n     */\r\n    containsRect(rect) {\r\n        return inRange(rect.left, this.left, this.right)\r\n            && inRange(rect.right, this.left, this.right)\r\n            && inRange(rect.top, this.top, this.bottom)\r\n            && inRange(rect.bottom, this.top, this.bottom);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Circle|Rectangle|Polygon} object\r\n     * @returns {Boolean}\r\n     */\r\n    intersets(object) {\r\n        if (object instanceof Rectangle) {\r\n            return Collision.intersectionRectRect(this, object);\r\n        }\r\n\r\n        if (object instanceof Polygon) {\r\n            return Collision.intersectionSAT(this, object);\r\n        }\r\n\r\n        if (object instanceof Circle) {\r\n            return Collision.intersectionCircleRect(object, this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Circle|Rectangle|Polygon} object\r\n     * @returns {?Collision}\r\n     */\r\n    getCollision(object) {\r\n        if (object instanceof Rectangle) {\r\n            return Collision.collisionRectRect(this, object);\r\n        }\r\n\r\n        if (object instanceof Polygon) {\r\n            return Collision.collisionSAT(this, object);\r\n        }\r\n\r\n        if (object instanceof Circle) {\r\n            return Collision.collisionCircleRect(object, this, true);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._position.destroy();\r\n        this._position = null;\r\n\r\n        this._size.destroy();\r\n        this._size = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Rectangle}\r\n */\r\nRectangle.Empty = new Rectangle(0, 0, 0, 0);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Rectangle}\r\n */\r\nRectangle.Temp = new Rectangle();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Rectangle.js","import { removeArrayItems } from '../utils/array';\n\n/**\n * @typedef {Object} EventHandler\n * @property {Function} callback\n * @property {*} context\n */\n\n/**\n * @class EventEmitter\n */\nexport default class EventEmitter {\n\n    /**\n     * @constructor\n     */\n    constructor() {\n\n        /**\n         * @private\n         * @member {Object<String, EventHandler[]>}\n         */\n        this._events = {};\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Object<String, EventHandler[]>}\n     */\n    get events() {\n        return this._events;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {String} event\n     * @param {Function} callback\n     * @param {*} [context=this]\n     * @returns {EventEmitter}\n     */\n    on(event, callback, context = this) {\n        if (this._events) {\n            const events = this._events[event];\n\n            if (!events) {\n                this._events[event] = [{ callback, context }];\n            } else {\n                events.push({ callback, context });\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {String} event\n     * @param {Function} callback\n     * @param {*} [context=this]\n     * @returns {EventEmitter}\n     */\n    once(event, callback, context = this) {\n        if (this._events) {\n            const once = (...args) => {\n                this.off(event, once, context);\n                callback.call(context, ...args);\n            };\n\n            return this.on(event, once, context);\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {String} [event='*']\n     * @param {Function} [callback]\n     * @param {*} [context]\n     * @returns {EventEmitter}\n     */\n    off(event = '*', callback, context) {\n        if (!this._events) {\n            return this;\n        }\n\n        const names = (event === '*') ? Object.keys(this._events) : [event];\n\n        for (const name of names) {\n            const handlers = this._events[name];\n\n            /**\n             * Break for loop because only the one passed\n             * event name can be wrong / not available.\n             */\n            if (!handlers) {\n                break;\n            }\n\n            if (!handlers.length) {\n                delete this._events[name];\n\n                continue;\n            }\n\n            if (!callback && !context) {\n                for (const handler of handlers) {\n                    handler.callback = null;\n                    handler.context = null;\n                }\n                handlers.length = 0;\n\n                delete this._events[name];\n\n                continue;\n            }\n\n            for (let j = handlers.length - 1; j >= 0; j--) {\n                if (callback && (callback !== handlers[j].callback)) {\n                    continue;\n                }\n\n                if (context && (context !== handlers[j].context)) {\n                    continue;\n                }\n\n                handlers[j].callback = null;\n                handlers[j].context = null;\n\n                removeArrayItems(handlers, j, 1);\n            }\n\n            if (!handlers.length) {\n                delete this._events[name];\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {String} event\n     * @param {...*} args\n     * @returns {EventEmitter}\n     */\n    trigger(event, ...args) {\n        if (this._events && this._events[event]) {\n            for (const handler of this._events[event]) {\n                handler.callback.call(handler.context, ...args);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        this.off();\n\n        this._events = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/EventEmitter.js","const\r\n\r\n    /**\r\n     * @inner\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    canvas = document.createElement('canvas'),\r\n\r\n    /**\r\n     * @inner\r\n     * @type {String}\r\n     */\r\n    supportsContext = ('probablySupportsContext' in canvas) ? 'probablySupportsContext' : 'supportsContext',\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @type {Boolean}\r\n     */\r\n    webAudio = ('AudioContext' in window),\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @type {Boolean}\r\n     */\r\n    indexedDB = ('indexedDB' in window),\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @type {Boolean}\r\n     */\r\n    webGL = (supportsContext in canvas)\r\n        ? (canvas[supportsContext]('webgl') || canvas[supportsContext]('experimental-webgl'))\r\n        : ('WebGLRenderingContext' in window),\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @type {Boolean}\r\n     */\r\n    webGL2 = (supportsContext in canvas)\r\n        ? canvas[supportsContext]('webgl2')\r\n        : ('WebGL2RenderingContext' in window),\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @type {Boolean}\r\n     */\r\n    touchEvents = ('ontouchstart' in window),\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @type {Boolean}\r\n     */\r\n    pointerEvents = ('PointerEvent' in window),\r\n\r\n    /**\r\n     * @public\r\n     * @constant\r\n     * @type {Boolean}\r\n     */\r\n    eventOptions = (() => {\r\n        let supportsPassive = false;\r\n\r\n        try {\r\n            window.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                }\r\n            });\r\n        } catch (e) {}\r\n\r\n        return supportsPassive;\r\n    })();\r\n\r\nexport default {\r\n    webAudio,\r\n    indexedDB,\r\n    webGL,\r\n    webGL2,\r\n    touchEvents,\r\n    pointerEvents,\r\n    eventOptions,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/support.js","import support from '../support';\n\nconst\n\n    /**\n     * @inner\n     * @constant\n     * @type {Audio}\n     */\n    audio = new Audio(),\n\n    /**\n     * @public\n     * @constant\n     * @name audioContext\n     * @type {AudioContext}\n     */\n    audioContext = support.webAudio ? new AudioContext() : null,\n\n    /**\n     * @inner\n     * @type {HTMLCanvasElement}\n     */\n    canvas = document.createElement('canvas'),\n\n    /**\n     * @inner\n     * @type {CanvasRenderingContext2D}\n     */\n    canvasContext = canvas.getContext('2d'),\n\n    /**\n     * @inner\n     * @type {RegExp}\n     */\n    CODEC_NOT_SUPPORTED = /^no$/,\n\n    /**\n     * @public\n     * @param {...String} codecs\n     * @returns {Boolean}\n     */\n    supportsCodec = (...codecs) => {\n        for (const codec of codecs) {\n            if (audio.canPlayType(codec).replace(CODEC_NOT_SUPPORTED, '')) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n\n    /**\n     * @public\n     * @param {ArrayBuffer} arrayBuffer\n     * @returns {Promise<AudioBuffer>}\n     */\n    decodeAudioBuffer = (arrayBuffer) => {\n        if (!support.webAudio) {\n            return Promise.reject(Error('Web Audio is not supported!'));\n        }\n\n        return new Promise((resolve, reject) => {\n            audioContext.decodeAudioData(arrayBuffer, resolve, reject);\n        });\n    },\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {HTMLMediaElement|HTMLVideoElement|HTMLImageElement|HTMLCanvasElement} element\n     * @returns {Number}\n     */\n    getMediaWidth = (element) => (element && (element.naturalWidth || element.videoWidth || element.width)) || 0,\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {HTMLMediaElement|HTMLVideoElement|HTMLImageElement|HTMLCanvasElement} element\n     * @returns {Number}\n     */\n    getMediaHeight = (element) => (element && (element.naturalHeight || element.videoHeight || element.height)) || 0,\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {HTMLImageElement} image\n     * @return {String}\n     */\n    imageToBase64 = (image) => {\n        canvas.width = image.width;\n        canvas.height = image.height;\n        canvasContext.drawImage(image, 0,0);\n\n        return canvas.toDataURL();\n    };\n\n/**\n * @namespace Exo\n */\nexport {\n    audioContext,\n    supportsCodec,\n    decodeAudioBuffer,\n    getMediaWidth,\n    getMediaHeight,\n    imageToBase64,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/media.js","import { clamp } from '../utils/math';\r\n\r\n/**\r\n * @class Color\r\n */\r\nexport default class Color {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [r=0]\r\n     * @param {Number} [g=0]\r\n     * @param {Number} [b=0]\r\n     * @param {Number} [a=1]\r\n     */\r\n    constructor(r = 0, g = 0, b = 0, a = 1) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._r = r & 255;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._g = g & 255;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._b = b & 255;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._a = clamp(a, 0, 1);\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Float32Array}\r\n         */\r\n        this._array = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Number}\r\n         */\r\n        this._rgba = null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get r() {\r\n        return this._r;\r\n    }\r\n\r\n    set r(red) {\r\n        this._r = red & 255;\r\n        this._rgba = null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get g() {\r\n        return this._g;\r\n    }\r\n\r\n    set g(green) {\r\n        this._g = green & 255;\r\n        this._rgba = null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get b() {\r\n        return this._b;\r\n    }\r\n\r\n    set b(blue) {\r\n        this._b = blue & 255;\r\n        this._rgba = null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get a() {\r\n        return this._a;\r\n    }\r\n\r\n    set a(alpha) {\r\n        this._a = clamp(alpha, 0, 1);\r\n        this._rgba = null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get rgba() {\r\n        return this.getRGBA();\r\n    }\r\n\r\n    set rgba(rgba) {\r\n        this.setRGBA(rgba);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {String}\r\n     */\r\n    get hex() {\r\n        return `#${((1 << 24) + (this._r << 16) + (this._g << 8) + this._b).toString(16).substr(1)}`;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} [r=this._r]\r\n     * @param {Number} [g=this._g]\r\n     * @param {Number} [b=this._b]\r\n     * @param {Number} [a=this._a]\r\n     * @returns {Color}\r\n     */\r\n    set(r = this._r, g = this._g, b = this._b, a = this._a) {\r\n        this._r = r & 255;\r\n        this._g = g & 255;\r\n        this._b = b & 255;\r\n        this._a = clamp(a, 0, 1);\r\n\r\n        this._rgba = null;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Color}\r\n     */\r\n    setRGBA(rgba) {\r\n        this._a = ((rgba >> 24) & 255) / 255;\r\n        this._r = (rgba >> 16) & 255;\r\n        this._g = (rgba >> 8) & 255;\r\n        this._b = rgba & 255;\r\n\r\n        this._rgba = rgba;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Number}\r\n     */\r\n    getRGBA() {\r\n        if (this._rgba === null) {\r\n            this._rgba = this._a && (((this._a * 255 | 0) << 24) + (this._b << 16) + (this._g << 8) + this._r) >>> 0;\r\n        }\r\n\r\n        return this._rgba;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Color} color\r\n     * @returns {Color}\r\n     */\r\n    copy(color) {\r\n        return this.set(color.r, color.g, color.b, color.a);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Color}\r\n     */\r\n    clone() {\r\n        return new Color(this._r, this._g, this._b, this._a);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Color|Object} color\r\n     * @param {Number} [color.r]\r\n     * @param {Number} [color.g]\r\n     * @param {Number} [color.b]\r\n     * @param {Number} [color.a]\r\n     * @returns {Boolean}\r\n     */\r\n    equals({ r, g, b, a } = {}) {\r\n        return (r === undefined || this.r === r)\r\n            && (g === undefined || this.g === g)\r\n            && (b === undefined || this.b === b)\r\n            && (a === undefined || this.a === a);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Boolean} [normalized=false]\r\n     * @returns {Float32Array}\r\n     */\r\n    toArray(normalized = false) {\r\n        const array = this._array || (this._array = new Float32Array(4));\r\n\r\n        if (normalized) {\r\n            array[0] = this._r / 255;\r\n            array[1] = this._g / 255;\r\n            array[2] = this._b / 255;\r\n        } else {\r\n            array[0] = this._r;\r\n            array[1] = this._g;\r\n            array[2] = this._b;\r\n        }\r\n\r\n        array[3] = this._a;\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        if (this._array) {\r\n            this._array = null;\r\n        }\r\n\r\n        this._r = null;\r\n        this._g = null;\r\n        this._b = null;\r\n        this._a = null;\r\n\r\n        this._rgba = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.AliceBlue = new Color(240, 248, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.AntiqueWhite = new Color(250, 235, 215, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Aqua = new Color(0, 255, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Aquamarine = new Color(127, 255, 212, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Azure = new Color(240, 255, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Beige = new Color(245, 245, 220, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Bisque = new Color(255, 228, 196, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Black = new Color(0, 0, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.BlanchedAlmond = new Color(255, 235, 205, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Blue = new Color(0, 0, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.BlueViolet = new Color(138, 43, 226, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Brown = new Color(165, 42, 42, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.BurlyWood = new Color(222, 184, 135, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.CadetBlue = new Color(95, 158, 160, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Chartreuse = new Color(127, 255, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Chocolate = new Color(210, 105, 30, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Coral = new Color(255, 127, 80, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.CornflowerBlue = new Color(100, 149, 237, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Cornsilk = new Color(255, 248, 220, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Crimson = new Color(220, 20, 60, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Cyan = new Color(0, 255, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkBlue = new Color(0, 0, 139, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkCyan = new Color(0, 139, 139, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkGoldenrod = new Color(184, 134, 11, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkGray = new Color(169, 169, 169, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkGreen = new Color(0, 100, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkKhaki = new Color(189, 183, 107, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkMagenta = new Color(139, 0, 139, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkOliveGreen = new Color(85, 107, 47, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkOrange = new Color(255, 140, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkOrchid = new Color(153, 50, 204, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkRed = new Color(139, 0, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkSalmon = new Color(233, 150, 122, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkSeaGreen = new Color(143, 188, 139, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkSlateBlue = new Color(72, 61, 139, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkSlateGray = new Color(47, 79, 79, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkTurquoise = new Color(0, 206, 209, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DarkViolet = new Color(148, 0, 211, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DeepPink = new Color(255, 20, 147, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DeepSkyBlue = new Color(0, 191, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DimGray = new Color(105, 105, 105, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.DodgerBlue = new Color(30, 144, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Firebrick = new Color(178, 34, 34, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.FloralWhite = new Color(255, 250, 240, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.ForestGreen = new Color(34, 139, 34, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Fuchsia = new Color(255, 0, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Gainsboro = new Color(220, 220, 220, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.GhostWhite = new Color(248, 248, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Gold = new Color(255, 215, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Goldenrod = new Color(218, 165, 32, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Gray = new Color(128, 128, 128, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Green = new Color(0, 128, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.GreenYellow = new Color(173, 255, 47, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Honeydew = new Color(240, 255, 240, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.HotPink = new Color(255, 105, 180, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.IndianRed = new Color(205, 92, 92, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Indigo = new Color(75, 0, 130, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Ivory = new Color(255, 255, 240, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Khaki = new Color(240, 230, 140, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Lavender = new Color(230, 230, 250, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LavenderBlush = new Color(255, 240, 245, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LawnGreen = new Color(124, 252, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LemonChiffon = new Color(255, 250, 205, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightBlue = new Color(173, 216, 230, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightCoral = new Color(240, 128, 128, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightCyan = new Color(224, 255, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightGoldenrodYellow = new Color(250, 250, 210, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightGray = new Color(211, 211, 211, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightGreen = new Color(144, 238, 144, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightPink = new Color(255, 182, 193, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightSalmon = new Color(255, 160, 122, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightSeaGreen = new Color(32, 178, 170, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightSkyBlue = new Color(135, 206, 250, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightSlateGray = new Color(119, 136, 153, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightSteelBlue = new Color(176, 196, 222, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LightYellow = new Color(255, 255, 224, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Lime = new Color(0, 255, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.LimeGreen = new Color(50, 205, 50, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Linen = new Color(250, 240, 230, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Magenta = new Color(255, 0, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Maroon = new Color(128, 0, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumAquamarine = new Color(102, 205, 170, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumBlue = new Color(0, 0, 205, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumOrchid = new Color(186, 85, 211, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumPurple = new Color(147, 112, 219, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumSeaGreen = new Color(60, 179, 113, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumSlateBlue = new Color(123, 104, 238, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumSpringGreen = new Color(0, 250, 154, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumTurquoise = new Color(72, 209, 204, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MediumVioletRed = new Color(199, 21, 133, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MidnightBlue = new Color(25, 25, 112, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MintCream = new Color(245, 255, 250, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.MistyRose = new Color(255, 228, 225, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Moccasin = new Color(255, 228, 181, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.NavajoWhite = new Color(255, 222, 173, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Navy = new Color(0, 0, 128, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.OldLace = new Color(253, 245, 230, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Olive = new Color(128, 128, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.OliveDrab = new Color(107, 142, 35, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Orange = new Color(255, 165, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.OrangeRed = new Color(255, 69, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Orchid = new Color(218, 112, 214, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.PaleGoldenrod = new Color(238, 232, 170, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.PaleGreen = new Color(152, 251, 152, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.PaleTurquoise = new Color(175, 238, 238, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.PaleVioletRed = new Color(219, 112, 147, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.PapayaWhip = new Color(255, 239, 213, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.PeachPuff = new Color(255, 218, 185, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Peru = new Color(205, 133, 63, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Pink = new Color(255, 192, 203, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Plum = new Color(221, 160, 221, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.PowderBlue = new Color(176, 224, 230, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Purple = new Color(128, 0, 128, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Red = new Color(255, 0, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.RosyBrown = new Color(188, 143, 143, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.RoyalBlue = new Color(65, 105, 225, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SaddleBrown = new Color(139, 69, 19, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Salmon = new Color(250, 128, 114, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SandyBrown = new Color(244, 164, 96, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SeaGreen = new Color(46, 139, 87, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SeaShell = new Color(255, 245, 238, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Sienna = new Color(160, 82, 45, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Silver = new Color(192, 192, 192, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SkyBlue = new Color(135, 206, 235, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SlateBlue = new Color(106, 90, 205, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SlateGray = new Color(112, 128, 144, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Snow = new Color(255, 250, 250, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SpringGreen = new Color(0, 255, 127, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.SteelBlue = new Color(70, 130, 180, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Tan = new Color(210, 180, 140, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Teal = new Color(0, 128, 128, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Thistle = new Color(216, 191, 216, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Tomato = new Color(255, 99, 71, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.TransparentBlack = new Color(0, 0, 0, 0);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.TransparentWhite = new Color(255, 255, 255, 0);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Turquoise = new Color(64, 224, 208, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Violet = new Color(238, 130, 238, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Wheat = new Color(245, 222, 179, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.White = new Color(255, 255, 255, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.WhiteSmoke = new Color(245, 245, 245, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.Yellow = new Color(255, 255, 0, 1);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @member {Color}\r\n */\r\nColor.YellowGreen = new Color(154, 205, 50, 1);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Color.js","/**\r\n * @class Interval\r\n */\r\nexport default class Interval {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [min=0]\r\n     * @param {Number} [max=min]\r\n     */\r\n    constructor(min = 0, max = min) {\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this._min = min;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this._max = max;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get min() {\r\n        return this._min;\r\n    }\r\n\r\n    set min(min) {\r\n        this._min = min;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get max() {\r\n        return this._y;\r\n    }\r\n\r\n    set max(max) {\r\n        this._max = max;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} min\r\n     * @param {Number} max\r\n     * @returns {Interval}\r\n     */\r\n    set(min, max) {\r\n        this.min = min;\r\n        this.max = max;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Interval} interval\r\n     * @returns {Interval}\r\n     */\r\n    copy(interval) {\r\n        return this.set(interval.min, interval.max);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Interval}\r\n     */\r\n    clone() {\r\n        return new Interval(this.min, this.max);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Interval} interval\r\n     * @returns {Boolean}\r\n     */\r\n    contains(interval) {\r\n        return interval.min > this._min && interval.max < this._max;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} value\r\n     * @returns {Boolean}\r\n     */\r\n    includes(value) {\r\n        return value <= this._max && value >= this._min;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Interval} interval\r\n     * @returns {Boolean}\r\n     */\r\n    overlaps(interval) {\r\n        return !(this._min > interval.max || interval.min > this._max);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Interval} interval\r\n     * @returns {Number}\r\n     */\r\n    getOverlap(interval) {\r\n        if (!this.overlaps(interval)) {\r\n            return 0;\r\n        }\r\n\r\n        return Math.min(this._max, interval.max) - Math.max(this._min, interval.min);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._min = null;\r\n        this._max = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Interval}\r\n */\r\nInterval.Empty = new Interval(0, 0);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Interval}\r\n */\r\nInterval.Temp = new Interval();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Interval.js","import { SCALE_MODES, WRAP_MODES, TEXTURE_FLAGS } from '../const';\r\nimport { getMediaHeight, getMediaWidth } from '../utils/media';\r\nimport { isPowerOfTwo } from '../utils/math';\r\nimport settings from '../settings';\r\nimport Size from '../math/Size';\r\nimport Flags from '../math/Flags';\r\n\r\n/**\r\n * @class Texture\r\n */\r\nexport default class Texture {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {?HTMLImageElement|?HTMLCanvasElement|?HTMLVideoElement} source\r\n     * @param {Object} [options]\r\n     * @param {Number} [options.scaleMode=settings.SCALE_MODE]\r\n     * @param {Number} [options.wrapMode=settings.WRAP_MODE]\r\n     * @param {Boolean} [options.premultiplyAlpha=settings.PREMULTIPLY_ALPHA]\r\n     * @param {Boolean} [options.generateMipMap=settings.GENERATE_MIPMAP]\r\n     */\r\n    constructor(source, {\r\n        scaleMode = settings.SCALE_MODE,\r\n        wrapMode = settings.WRAP_MODE,\r\n        premultiplyAlpha = settings.PREMULTIPLY_ALPHA,\r\n        generateMipMap = settings.GENERATE_MIPMAP,\r\n    } = {}) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {?HTMLImageElement|?HTMLCanvasElement|?HTMLVideoElement}\r\n         */\r\n        this._source = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Size}\r\n         */\r\n        this._size = new Size(0, 0);\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGL2RenderingContext}\r\n         */\r\n        this._context = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGLTexture}\r\n         */\r\n        this._texture = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._scaleMode = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._wrapMode = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._premultiplyAlpha = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._generateMipMap = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._flipY = false;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Flags}\r\n         */\r\n        this._flags = new Flags();\r\n\r\n        this.setScaleMode(scaleMode);\r\n        this.setWrapMode(wrapMode);\r\n        this.premultiplyAlpha = premultiplyAlpha;\r\n        this.generateMipMap = generateMipMap;\r\n\r\n        if (source) {\r\n            this.setSource(source);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?HTMLImageElement|?HTMLCanvasElement|?HTMLVideoElement}\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    set source(source) {\r\n        this.setSource(source);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Size}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size) {\r\n        this.setSize(size.width, size.height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return this._size.width;\r\n    }\r\n\r\n    set width(width) {\r\n        this.setSize(width, this.height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return this._size.height;\r\n    }\r\n\r\n    set height(height) {\r\n        this.setSize(this.width, height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get scaleMode() {\r\n        return this._scaleMode;\r\n    }\r\n\r\n    set scaleMode(scaleMode) {\r\n        this.setScaleMode(scaleMode);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get wrapMode() {\r\n        return this._wrapMode;\r\n    }\r\n\r\n    set wrapMode(wrapMode) {\r\n        this.setWrapMode(wrapMode);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get premultiplyAlpha() {\r\n        return this._premultiplyAlpha;\r\n    }\r\n\r\n    set premultiplyAlpha(premultiplyAlpha) {\r\n        if (this._premultiplyAlpha !== premultiplyAlpha) {\r\n            this._premultiplyAlpha = premultiplyAlpha;\r\n            this._flags.add(TEXTURE_FLAGS.PREMULTIPLY_ALPHA);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get generateMipMap() {\r\n        return this._generateMipMap;\r\n    }\r\n\r\n    set generateMipMap(generateMipMap) {\r\n        this._generateMipMap = generateMipMap;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get flipY() {\r\n        return this._flipY;\r\n    }\r\n\r\n    set flipY(flipY) {\r\n        this._flipY = flipY;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Boolean}\r\n     */\r\n    get powerOfTwo() {\r\n        return isPowerOfTwo(this.width) && isPowerOfTwo(this.height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {WebGL2RenderingContext} gl\r\n     * @returns {Texture}\r\n     */\r\n    connect(gl) {\r\n        if (!this._context) {\r\n            this._context = gl;\r\n            this._texture = gl.createTexture();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Texture}\r\n     */\r\n    disconnect() {\r\n        this.unbindTexture();\r\n\r\n        if (this._context) {\r\n            this._context.deleteTexture(this._texture);\r\n\r\n            this._context = null;\r\n            this._texture = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} [unit]\r\n     * @returns {Texture}\r\n     */\r\n    bindTexture(unit) {\r\n        if (!this._context) {\r\n            throw new Error('Texture has to be connected first!')\r\n        }\r\n\r\n        const gl = this._context;\r\n\r\n        if (unit !== undefined) {\r\n            gl.activeTexture(gl.TEXTURE0 + unit);\r\n        }\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n\r\n        this.update();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Texture}\r\n     */\r\n    unbindTexture() {\r\n        if (this._context) {\r\n            const gl = this._context;\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} scaleMode\r\n     * @returns {Texture}\r\n     */\r\n    setScaleMode(scaleMode) {\r\n        if (this._scaleMode !== scaleMode) {\r\n            this._scaleMode = scaleMode;\r\n            this._flags.add(TEXTURE_FLAGS.SCALE_MODE);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} wrapMode\r\n     * @returns {Texture}\r\n     */\r\n    setWrapMode(wrapMode) {\r\n        if (this._wrapMode !== wrapMode) {\r\n            this._wrapMode = wrapMode;\r\n            this._flags.add(TEXTURE_FLAGS.WRAP_MODE);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {?HTMLImageElement|?HTMLCanvasElement|?HTMLVideoElement} source\r\n     * @returns {Texture}\r\n     */\r\n    setSource(source) {\r\n        if (this._source !== source) {\r\n            this._source = source;\r\n            this.updateSource();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Texture}\r\n     */\r\n    updateSource() {\r\n        this._flags.add(TEXTURE_FLAGS.SOURCE);\r\n\r\n        this.setSize(\r\n            getMediaWidth(this._source),\r\n            getMediaHeight(this._source)\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {Texture}\r\n     */\r\n    setSize(width, height) {\r\n        if (!this._size.equals({ width, height })) {\r\n            this._size.set(width, height);\r\n            this._flags.add(TEXTURE_FLAGS.SIZE);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Texture}\r\n     */\r\n    update() {\r\n        if (this._flags.value && this._context) {\r\n            const gl = this._context;\r\n\r\n            if (this._flags.has(TEXTURE_FLAGS.SCALE_MODE)) {\r\n                const scaleMode = (this._scaleMode === SCALE_MODES.LINEAR) ? gl.LINEAR : gl.NEAREST;\r\n\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, scaleMode);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, scaleMode);\r\n\r\n                this._flags.remove(TEXTURE_FLAGS.SCALE_MODE);\r\n            }\r\n\r\n            if (this._flags.has(TEXTURE_FLAGS.WRAP_MODE)) {\r\n                const clamp = (this._wrapMode === WRAP_MODES.CLAMP_TO_EDGE) && gl.CLAMP_TO_EDGE,\r\n                    repeat = (this._wrapMode === WRAP_MODES.REPEAT) && gl.REPEAT,\r\n                    wrapMode = clamp || repeat || gl.MIRRORED_REPEAT;\r\n\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapMode);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapMode);\r\n\r\n                this._flags.remove(TEXTURE_FLAGS.WRAP_MODE);\r\n            }\r\n\r\n            if (this._flags.has(TEXTURE_FLAGS.PREMULTIPLY_ALPHA)) {\r\n                gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiplyAlpha);\r\n\r\n                this._flags.remove(TEXTURE_FLAGS.PREMULTIPLY_ALPHA);\r\n            }\r\n\r\n            if (this._flags.has(TEXTURE_FLAGS.SOURCE) && this._source) {\r\n                if (this._flags.has(TEXTURE_FLAGS.SIZE)) {\r\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._source);\r\n                } else {\r\n                    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, this._source);\r\n                }\r\n\r\n                if (this._generateMipMap) {\r\n                    gl.generateMipmap(gl.TEXTURE_2D);\r\n                }\r\n\r\n                this._flags.remove(TEXTURE_FLAGS.SOURCE, TEXTURE_FLAGS.SIZE);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this.disconnect();\r\n\r\n        this._size.destroy();\r\n        this._size = null;\r\n\r\n        this._flags.destroy();\r\n        this._flags = null;\r\n\r\n        this._source = null;\r\n        this._scaleMode = null;\r\n        this._wrapMode = null;\r\n        this._premultiplyAlpha = null;\r\n        this._generateMipMap = null;\r\n        this._context = null;\r\n        this._texture = null;\r\n        this._flipY = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/Texture.js","/**\r\n * @class Size\r\n */\r\nexport default class Size {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [width=0]\r\n     * @param {Number} [height=0]\r\n     */\r\n    constructor(width = 0, height = 0) {\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this._width = width;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this._height = height;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width) {\r\n        this._width = width;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height) {\r\n        this._height = height;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} [height=width]\r\n     * @returns {Size}\r\n     */\r\n    set(width, height = width) {\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} [height=width]\r\n     * @returns {Size}\r\n     */\r\n    add(width, height = width) {\r\n        this._width += width;\r\n        this._height += height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} [height=width]\r\n     * @returns {Size}\r\n     */\r\n    subtract(width, height = width) {\r\n        this._width -= width;\r\n        this._height -= height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} [height=width]\r\n     * @returns {Size}\r\n     */\r\n    scale(width, height = width) {\r\n        this._width *= width;\r\n        this._height *= height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} [height=width]\r\n     * @returns {Size}\r\n     */\r\n    divide(width, height = width) {\r\n        this._width /= width;\r\n        this._height /= height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Size} size\r\n     * @returns {Size}\r\n     */\r\n    copy(size) {\r\n        this._width = size.width;\r\n        this._height = size.height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Size}\r\n     */\r\n    clone() {\r\n        return new Size(this._width, this._height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Size|Object} size\r\n     * @param {Number} [size.width]\r\n     * @param {Number} [size.height]\r\n     * @returns {Boolean}\r\n     */\r\n    equals({ width, height } = {}) {\r\n        return (width === undefined || this.width === width)\r\n            && (height === undefined || this.height === height);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        this._width = null;\r\n        this._height = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @type {Size}\r\n */\r\nSize.Empty = new Size(0, 0);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @type {Size}\r\n */\r\nSize.Temp = new Size();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Size.js","import ResourceFactory from '../ResourceFactory';\n\n/**\n * @class ArrayBufferFactory\n * @extends ResourceFactory\n */\nexport default class ArrayBufferFactory extends ResourceFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'arrayBuffer';\n    }\n\n    /**\n     * @override\n     */\n    process(response) {\n        return response.arrayBuffer();\n    }\n\n    /**\n     * @override\n     */\n    create(source, options) { // eslint-disable-line\n        return Promise.resolve(source);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/ArrayBufferFactory.js","import ArrayBufferFactory from './ArrayBufferFactory';\nimport MediaSource from '../../media/MediaSource';\n\n/**\n * @class MediaSourceFactory\n * @extends ArrayBufferFactory\n */\nexport default class MediaSourceFactory extends ArrayBufferFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'mediaSource';\n    }\n\n    /**\n     * @override\n     */\n    create(source, { type, createMediaElement, decodeAudioBuffer, mimeType, loadEvent } = {}) {\n        return super\n            .create(source, null)\n            .then((arrayBuffer) => new MediaSource(type, arrayBuffer, { mimeType, loadEvent }))\n            .then((mediaSource) => createMediaElement ? mediaSource.createMediaElement()\n                .then((mediaElement) => mediaSource) : mediaSource)\n            .then((mediaSource) => decodeAudioBuffer ? mediaSource.decodeAudioBuffer()\n                .then((audioBuffer) => mediaSource) : mediaSource);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/MediaSourceFactory.js","/**\n * @class Flags\n */\nexport default class Flags {\n\n    /**\n     * @constructor\n     * @param {...Number} [flags]\n     */\n    constructor(...flags) {\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._value = 0;\n\n        if (flags.length) {\n            this.add(...flags);\n        }\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get value() {\n        return this._value;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {...Number} flags\n     * @returns {Flags}\n     */\n    add(...flags) {\n        for (const flag of flags) {\n            this._value |= flag;\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {...Number} flags\n     * @returns {Flags}\n     */\n    remove(...flags) {\n        for (const flag of flags) {\n            this._value &= ~flag;\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @param {...Number} flags\n     * @returns {Boolean}\n     */\n    has(...flags) {\n        return flags.every((flag) => ((this._value & flag) !== 0));\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        this._value = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Flags.js","import { degreesToRadians } from '../utils/math';\r\n\r\n/**\r\n * | a | b | x |\r\n * | c | d | y |\r\n * | e | f | z |\r\n *\r\n * @class Matrix\r\n */\r\nexport default class Matrix {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [a=1]\r\n     * @param {Number} [b=0]\r\n     * @param {Number} [x=0]\r\n     * @param {Number} [c=0]\r\n     * @param {Number} [d=1]\r\n     * @param {Number} [y=0]\r\n     * @param {Number} [e=0]\r\n     * @param {Number} [f=0]\r\n     * @param {Number} [z=1]\r\n     */\r\n    constructor(a = 1, b = 0, x = 0,\r\n                c = 0, d = 1, y = 0,\r\n                e = 0, f = 0, z = 1) {\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.a = a;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.b = b;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.x = x;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.c = c;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.d = d;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.y = y;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.e = e;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.f = f;\r\n\r\n        /**\r\n         * @public\r\n         * @member {Number}\r\n         */\r\n        this.z = z;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Float32Array} _array\r\n         */\r\n        this._array = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._updateId = 0;\r\n    }\r\n\r\n    /**\r\n     * | a | b | x |\r\n     * | c | d | y |\r\n     * | e | f | z |\r\n     *\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} [a=this.a]\r\n     * @param {Number} [b=this.b]\r\n     * @param {Number} [x=this.x]\r\n     * @param {Number} [c=this.c]\r\n     * @param {Number} [d=this.d]\r\n     * @param {Number} [y=this.y]\r\n     * @param {Number} [e=this.e]\r\n     * @param {Number} [f=this.f]\r\n     * @param {Number} [z=this.z]\r\n     * @returns {Matrix}\r\n     */\r\n    set(\r\n        a = this.a, b = this.b, x = this.x,\r\n        c = this.c, d = this.d, y = this.y,\r\n        e = this.e, f = this.f, z = this.z\r\n    ) {\r\n        this.a = a; this.b = b; this.x = x;\r\n        this.c = c; this.d = d; this.y = y;\r\n        this.e = e; this.f = f; this.z = z;\r\n\r\n        this._updateId++;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Matrix} matrix\r\n     * @returns {Matrix}\r\n     */\r\n    copy(matrix) {\r\n        this.a = matrix.a; this.b = matrix.b; this.x = matrix.x;\r\n        this.c = matrix.c; this.d = matrix.d; this.y = matrix.y;\r\n        this.e = matrix.e; this.f = matrix.f; this.z = matrix.z;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Matrix}\r\n     */\r\n    clone() {\r\n        return new Matrix(\r\n            this.a, this.b, this.x,\r\n            this.c, this.d, this.y,\r\n            this.e, this.f, this.z\r\n        );\r\n    }\r\n\r\n    /**\r\n     * | a | b | x |\r\n     * | c | d | y |\r\n     * | e | f | z |\r\n     *\r\n     * @public\r\n     * @param {Matrix|Object} matrix\r\n     * @param {Number} [matrix.a]\r\n     * @param {Number} [matrix.b]\r\n     * @param {Number} [matrix.x]\r\n     * @param {Number} [matrix.c]\r\n     * @param {Number} [matrix.d]\r\n     * @param {Number} [matrix.y]\r\n     * @param {Number} [matrix.e]\r\n     * @param {Number} [matrix.f]\r\n     * @param {Number} [matrix.z]\r\n     * @returns {Boolean}\r\n     */\r\n    equals({\r\n        a, b, x,\r\n        c, d, y,\r\n        e, f, z\r\n    } = {}) {\r\n        return (a === undefined || this.a === a)\r\n            && (b === undefined || this.b === b)\r\n            && (x === undefined || this.x === x)\r\n            && (c === undefined || this.c === c)\r\n            && (d === undefined || this.d === d)\r\n            && (y === undefined || this.y === y)\r\n            && (e === undefined || this.e === e)\r\n            && (f === undefined || this.f === f)\r\n            && (z === undefined || this.z === z);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Matrix} matrix\r\n     * @returns {Matrix}\r\n     */\r\n    combine(matrix) {\r\n        return this.set(\r\n            (this.a * matrix.a) + (this.c * matrix.b) + (this.e * matrix.x),\r\n            (this.b * matrix.a) + (this.d * matrix.b) + (this.f * matrix.x),\r\n            (this.x * matrix.a) + (this.y * matrix.b) + (this.z * matrix.x),\r\n\r\n            (this.a * matrix.c) + (this.c * matrix.d) + (this.e * matrix.y),\r\n            (this.b * matrix.c) + (this.d * matrix.d) + (this.f * matrix.y),\r\n            (this.x * matrix.c) + (this.y * matrix.d) + (this.z * matrix.y),\r\n\r\n            (this.a * matrix.e) + (this.c * matrix.f) + (this.e * matrix.z),\r\n            (this.b * matrix.e) + (this.d * matrix.f) + (this.f * matrix.z),\r\n            (this.x * matrix.e) + (this.y * matrix.f) + (this.z * matrix.z)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Matrix} [result=this]\r\n     * @returns {Matrix}\r\n     */\r\n    getInverse(result = this) {\r\n        const determinant =\r\n            (this.a * (this.z * this.d - this.y * this.f)) -\r\n            (this.b * (this.z * this.c - this.y * this.e)) +\r\n            (this.x * (this.f * this.c - this.d * this.e));\r\n\r\n        if (determinant === 0) {\r\n            return result.copy(Matrix.Identity);\r\n        }\r\n\r\n        return result.set(\r\n            ((this.z * this.d) - (this.y * this.f)) /  determinant,\r\n            ((this.z * this.c) - (this.y * this.e)) / -determinant,\r\n            ((this.f * this.c) - (this.d * this.e)) /  determinant,\r\n\r\n            ((this.z * this.b) - (this.x * this.f)) / -determinant,\r\n            ((this.z * this.a) - (this.x * this.e)) /  determinant,\r\n            ((this.f * this.a) - (this.b * this.e)) / -determinant,\r\n\r\n            ((this.y * this.b) - (this.x * this.d)) /  determinant,\r\n            ((this.y * this.a) - (this.x * this.c)) / -determinant,\r\n            ((this.d * this.a) - (this.b * this.c)) /  determinant\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Matrix}\r\n     */\r\n    translate(x, y = x) {\r\n        return this.combine(Matrix.Temp.set(\r\n            1, 0, x,\r\n            0, 1, y,\r\n            0, 0, 1\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} angle\r\n     * @param {Number} [centerX=0]\r\n     * @param {Number} [centerY=centerX]\r\n     * @returns {Matrix}\r\n     */\r\n    rotate(angle, centerX = 0, centerY = centerX) {\r\n        const radian = degreesToRadians(angle),\r\n            cos = Math.cos(radian),\r\n            sin = Math.sin(radian);\r\n\r\n        return this.combine(Matrix.Temp.set(\r\n            cos, -sin, (centerX * (1 - cos)) + (centerY * sin),\r\n            sin,  cos, (centerY * (1 - cos)) - (centerX * sin),\r\n            0, 0, 1\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} scaleX\r\n     * @param {Number} [scaleY=scaleX]\r\n     * @param {Number} [centerX=0]\r\n     * @param {Number} [centerY=centerX]\r\n     * @returns {Matrix}\r\n     */\r\n    scale(scaleX, scaleY = scaleX, centerX = 0, centerY = centerX) {\r\n        return this.combine(Matrix.Temp.set(\r\n            scaleX, 0, (centerX * (1 - scaleX)),\r\n            0, scaleY, (centerY * (1 - scaleY)),\r\n            0, 0, 1\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Boolean} [transpose=false]\r\n     * @returns {Float32Array}\r\n     */\r\n    toArray(transpose = false) {\r\n        const array = this._array || (this._array = new Float32Array(9));\r\n\r\n        if (transpose) {\r\n            array[0] = this.a; array[1] = this.b; array[2] = this.x;\r\n            array[3] = this.c; array[4] = this.d; array[5] = this.y;\r\n            array[6] = this.e; array[7] = this.f; array[8] = this.z;\r\n        } else {\r\n            array[0] = this.a; array[1] = this.c; array[2] = this.e;\r\n            array[3] = this.b; array[4] = this.d; array[5] = this.f;\r\n            array[6] = this.x; array[7] = this.y; array[8] = this.z;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        if (this._array) {\r\n            this._array = null;\r\n        }\r\n\r\n        this.a = null; this.b = null; this.x = null;\r\n        this.c = null; this.d = null; this.y = null;\r\n        this.e = null; this.f = null; this.z = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @readonly\r\n * @member {Matrix}\r\n */\r\nMatrix.Identity = new Matrix(\r\n    1, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 1\r\n);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Matrix}\r\n */\r\nMatrix.Temp = new Matrix();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Matrix.js","import Vector from '../math/Vector';\r\nimport Interval from '../math/Interval';\r\nimport Polygon from '../math/Polygon';\r\nimport { VORONOI_REGION } from '../const';\r\nimport { getVoronoiRegion } from '../utils/math';\r\n\r\n/**\r\n * @class Collision\r\n */\r\nexport default class Collision {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} options\r\n     * @param {*} options.shapeA\r\n     * @param {*} options.shapeB\r\n     * @param {Number} options.distance\r\n     * @param {Vector} options.separation\r\n     * @param {Boolean} options.shapeAInB\r\n     * @param {Boolean} options.shapeBInA\r\n     */\r\n    constructor({ shapeA, shapeB, distance = 0, separation = Vector.Empty, shapeAInB = false, shapeBInA = false } = {}) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {*}\r\n         */\r\n        this._shapeA = shapeA;\r\n\r\n        /**\r\n         * @private\r\n         * @member {*}\r\n         */\r\n        this._shapeB = shapeB;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._distance = distance;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._separation = separation.clone();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._shapeAInB = shapeAInB;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._shapeBInA = shapeBInA;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {*}\r\n     */\r\n    get shapeA() {\r\n        return this._shapeA;\r\n    }\r\n\r\n    set shapeA(value) {\r\n        this._shapeA = value;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {*}\r\n     */\r\n    get shapeB() {\r\n        return this._shapeB;\r\n    }\r\n\r\n    set shapeB(value) {\r\n        this._shapeB = value;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get distance() {\r\n        return this._distance;\r\n    }\r\n\r\n    set distance(value) {\r\n        this._distance = value;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get separation() {\r\n        return this._separation;\r\n    }\r\n\r\n    set separation(value) {\r\n        this._separation.copy(value);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get shapeAInB() {\r\n        return this._shapeAInB;\r\n    }\r\n\r\n    set shapeAInB(value) {\r\n        this._shapeAInB = value;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get shapeBInA() {\r\n        return this._shapeBInA;\r\n    }\r\n\r\n    set shapeBInA(value) {\r\n        this._shapeBInA = value;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._shapeA = null;\r\n        this._shapeB = null;\r\n        this._distance = null;\r\n        this._separation = null;\r\n        this._shapeAInB = null;\r\n        this._shapeBInA = null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {*} shapeA\r\n     * @param {*} shapeB\r\n     * @returns {Boolean}\r\n     */\r\n    static intersectionSAT(shapeA, shapeB) {\r\n        const normalsA = shapeA.getNormals(),\r\n            normalsB = shapeB.getNormals(),\r\n            lenA = normalsA.length,\r\n            lenB = normalsB.length,\r\n            projA = new Interval(),\r\n            projB = new Interval();\r\n\r\n        for (let i = 0; i < lenA; i++) {\r\n            const normal = normalsA[i];\r\n\r\n            shapeA.project(normal, projA);\r\n            shapeB.project(normal, projB);\r\n\r\n            if (!projA.overlaps(projB)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < lenB; i++) {\r\n            const normal = normalsB[i];\r\n\r\n            shapeA.project(normal, projA);\r\n            shapeB.project(normal, projB);\r\n\r\n            if (!projA.overlaps(projB)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {*} shapeA\r\n     * @param {*} shapeB\r\n     * @returns {?Collision}\r\n     */\r\n    static collisionSAT(shapeA, shapeB) {\r\n        const normalsA = shapeA.getNormals(),\r\n            normalsB = shapeB.getNormals(),\r\n            lenA = normalsA.length,\r\n            lenB = normalsB.length,\r\n            projA = new Interval(),\r\n            projB = new Interval(),\r\n            separation = new Vector();\r\n\r\n        let containsA = false,\r\n            containsB = false,\r\n            shapeAInB = true,\r\n            shapeBInA = true,\r\n            distance = Infinity,\r\n            overlap;\r\n\r\n        for (let i = 0; i < lenA; i++) {\r\n            const normal = normalsA[i];\r\n\r\n            shapeA.project(normal, projA);\r\n            shapeB.project(normal, projB);\r\n\r\n            if (!projA.overlaps(projB)) {\r\n                return null;\r\n            }\r\n\r\n            overlap = projA.getOverlap(projB);\r\n            containsA = projB.contains(projA);\r\n            containsB = projA.contains(projB);\r\n\r\n            if (!containsA && shapeAInB) {\r\n                shapeAInB = false;\r\n            }\r\n\r\n            if (!containsB && shapeBInA) {\r\n                shapeBInA = false;\r\n            }\r\n\r\n            if (containsA || containsB) {\r\n                overlap += Math.min(\r\n                    Math.abs(projA.min - projB.min),\r\n                    Math.abs(projA.max - projB.max)\r\n                );\r\n            }\r\n\r\n            if (overlap < distance) {\r\n                distance = overlap;\r\n                separation.copy(normal);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < lenB; i++) {\r\n            const normal = normalsB[i];\r\n\r\n            shapeA.project(normal, projA);\r\n            shapeB.project(normal, projB);\r\n\r\n            if (!projA.overlaps(projB)) {\r\n                return null;\r\n            }\r\n\r\n            overlap = projA.getOverlap(projB);\r\n            containsA = projB.contains(projA);\r\n            containsB = projA.contains(projB);\r\n\r\n            if (!containsA && shapeAInB) {\r\n                shapeAInB = false;\r\n            }\r\n\r\n            if (!containsB && shapeBInA) {\r\n                shapeBInA = false;\r\n            }\r\n\r\n            if (containsA || containsB) {\r\n                overlap += Math.min(\r\n                    Math.abs(projA.min - projB.min),\r\n                    Math.abs(projA.max - projB.max)\r\n                );\r\n            }\r\n\r\n            if (overlap < distance) {\r\n                distance = overlap;\r\n                separation.copy(normal);\r\n            }\r\n        }\r\n\r\n        return new Collision({\r\n            shapeA,\r\n            shapeA,\r\n            distance,\r\n            separation,\r\n            shapeAInB,\r\n            shapeBInA,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {Rectangle} rectA\r\n     * @param {Rectangle} rectB\r\n     * @returns {Boolean}\r\n     */\r\n    static intersectionRectRect(rectA, rectB) {\r\n        if ((rectB.left > rectA.right) || (rectB.top > rectA.bottom)) {\r\n            return false;\r\n        }\r\n\r\n        if ((rectA.left > rectB.right) || (rectA.top > rectB.bottom)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {Circle} circleA\r\n     * @param {Circle} circleB\r\n     * @returns {Boolean}\r\n     */\r\n    static intersectionCircleCircle(circleA, circleB) {\r\n        return circleA.position.distanceTo(circleB.x, circleB.y) <= (circleA.radius + circleB.radius);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {Circle} circle\r\n     * @param {Rectangle} rect\r\n     * @returns {Boolean}\r\n     */\r\n    static intersectionCircleRect(circle, rect) {\r\n        const centerWidth = rect.width / 2,\r\n            centerHeight = rect.height / 2,\r\n            radius = circle.radius,\r\n            distanceX = Math.abs(circle.x - rect.x),\r\n            distanceY = Math.abs(circle.y - rect.y);\r\n\r\n        if (distanceX > (centerWidth + radius)) {\r\n            return false;\r\n        }\r\n\r\n        if (distanceY > (centerHeight + radius)) {\r\n            return false;\r\n        }\r\n\r\n        if (distanceX <= centerWidth) {\r\n            return true;\r\n        }\r\n\r\n        if (distanceY <= centerHeight) {\r\n            return true;\r\n        }\r\n\r\n        return circle.position.distanceTo(rect.x - centerWidth, rect.y - centerHeight) <= radius;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {Polygon} polygon\r\n     * @param {Circle} circle\r\n     * @returns {Boolean}\r\n     */\r\n    static intersectionPolyCircle(polygon, circle) {\r\n        const points = polygon.points,\r\n            x = (circle.x - polygon.x),\r\n            y = (circle.y - polygon.y),\r\n            positionA = new Vector(),\r\n            positionB = new Vector(),\r\n            edgeA = new Vector(),\r\n            edgeB = new Vector(),\r\n            len = points.length;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            const pointA = points[i],\r\n                pointB = points[(i + 1) % len],\r\n                region = getVoronoiRegion(\r\n                    edgeA.set(pointB.x - pointA.x, pointB.y - pointA.y),\r\n                    positionA.set(x - pointA.x, y - pointA.y)\r\n                );\r\n\r\n            if (region === VORONOI_REGION.LEFT) {\r\n                const prev = points[(i === 0 ? len - 1 : i - 1)];\r\n\r\n                edgeB.set(pointA.x - prev.x, pointA.y - prev.y);\r\n                positionB.set(x - prev.x, y - prev.y);\r\n\r\n                if ((getVoronoiRegion(edgeB, positionB) === VORONOI_REGION.RIGHT) && (positionA.len > circle.radius)) {\r\n                    return false;\r\n                }\r\n            } else if (region === VORONOI_REGION.RIGHT) {\r\n                const next = points[(i + 2) % len]; // pointB ?\r\n\r\n                edgeB.set(next.x - pointB.x, next.y - pointB.y); // edgeB.set(pointB.x - pointA.x, pointB.y - pointA.y); ?\r\n                positionB.set(x - pointB.x, y - pointB.y); // positionB.set(x - pointB.x, y - pointB.y); ?\r\n\r\n                if (getVoronoiRegion(edgeB, positionB) === VORONOI_REGION.LEFT && (positionB.len > circle.radius)) {\r\n                    return false;\r\n                }\r\n            } else {\r\n                const normal = edgeA.perp().normalize(),\r\n                    distance = positionA.dot(normal.x, normal.y);\r\n\r\n                if (distance > 0 && (Math.abs(distance) > circle.radius)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {Rectangle} rectA\r\n     * @param {Rectangle} rectB\r\n     * @returns {?Collision}\r\n     */\r\n    static collisionRectRect(rectA, rectB) {\r\n        if ((rectB.left > rectA.right) || (rectB.top > rectA.bottom)) {\r\n            return null;\r\n        }\r\n\r\n        if ((rectA.left > rectB.right) || (rectA.top > rectB.bottom)) {\r\n            return null;\r\n        }\r\n\r\n        return new Collision({\r\n            shapeA: rectA,\r\n            shapeB: rectB,\r\n            distance: 0, // todo\r\n            separation: Vector.Empty, // todo\r\n            shapeAInB: rectB.containsRect(rectA),\r\n            shapeBInA: rectA.containsRect(rectB),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {Circle} circleA\r\n     * @param {Circle} circleB\r\n     * @returns {?Collision}\r\n     */\r\n    static collisionCircleCircle(circleA, circleB) {\r\n        const distance = circleA.position.distanceTo(circleB.x, circleB.y),\r\n            radii = circleA.radius + circleB.radius;\r\n\r\n        return (distance > radii) ? null : new Collision({\r\n            shapeA: circleA,\r\n            shapeB: circleB,\r\n            distance: distance,\r\n            separation: new Vector(circleB.x - circleA.x, circleB.y - circleA.y).normalize().scale(radii - distance),\r\n            shapeAInB: (circleA.radius <= circleB.radius) && (distance <= (circleB.radius - circleA.radius)),\r\n            shapeBInA: (circleB.radius <= circleA.radius) && (distance <= (circleA.radius - circleB.radius)),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {Circle} circle\r\n     * @param {Rectangle} rect\r\n     * @param {Boolean} [swap=false]\r\n     * @returns {?Collision}\r\n     */\r\n    static collisionCircleRect(circle, rect, swap = false) {\r\n        const centerWidth = rect.width / 2,\r\n            centerHeight = rect.height / 2,\r\n            distance = circle.position.distanceTo(rect.x - centerWidth, rect.y - centerHeight),\r\n            containsA = (circle.radius <= Math.min(centerWidth, centerHeight)) && (distance <= (Math.min(centerWidth, centerHeight) - circle.radius)),\r\n            containsB = (Math.max(centerWidth, centerHeight) <= circle.radius) && (distance <= (circle.radius - Math.max(centerWidth, centerHeight)));\r\n\r\n        return (distance <= circle.radius) ? new Collision({\r\n            shapeA: swap ? rect : circle,\r\n            shapeB: swap ? circle : rect,\r\n            distance: distance,\r\n            separation: Vector.Empty, // todo\r\n            shapeAInB: swap ? containsB : containsA,\r\n            shapeBInA: swap ? containsA : containsB,\r\n        }) : null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @static\r\n     * @param {Polygon} polygon\r\n     * @param {Circle} circle\r\n     * @returns {?Collision}\r\n     */\r\n    static collisionPolyCircle(polygon, circle, swap = false) {\r\n        const points = polygon.points,\r\n            x = (circle.x - polygon.x),\r\n            y = (circle.y - polygon.y),\r\n            radius = circle.radius,\r\n            positionA = new Vector(),\r\n            positionB = new Vector(),\r\n            edgeA = new Vector(),\r\n            edgeB = new Vector(),\r\n            len = points.length,\r\n            overlapN = new Vector();\r\n\r\n        let containsA = true,\r\n            containsB = true,\r\n            overlap = 0;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            const pointA = points[i],\r\n                pointB = points[(i + 1) % len],\r\n                region = getVoronoiRegion(\r\n                    edgeA.set(pointB.x - pointA.x, pointB.y - pointA.y),\r\n                    positionA.set(x - pointA.x, y - pointA.y)\r\n                );\r\n\r\n            if (positionA.len > radius) {\r\n                containsA = false;\r\n            }\r\n\r\n            if (region === VORONOI_REGION.LEFT) {\r\n                const prev = points[(i === 0 ? len - 1 : i - 1)];\r\n\r\n                edgeB.set(pointA.x - prev.x, pointA.y - prev.y);\r\n                positionB.set(x - prev.x, y - prev.y);\r\n\r\n                if ((getVoronoiRegion(edgeB, positionB) === VORONOI_REGION.RIGHT)) {\r\n                    const distance = positionA.len;\r\n\r\n                    if (distance > radius) {\r\n                        return null;\r\n                    }\r\n\r\n                    if (Math.abs(radius - distance) < Math.abs(overlap)) {\r\n                        overlap = radius - distance;\r\n                        overlapN.copy(positionA).normalize();\r\n                    }\r\n\r\n                    containsB = false;\r\n                }\r\n            } else if (region === VORONOI_REGION.RIGHT) {\r\n                const next = points[(i + 2) % len]; // pointB ?\r\n\r\n                edgeB.set(next.x - pointB.x, next.y - pointB.y); // edgeB.set(pointB.x - pointA.x, pointB.y - pointA.y); ?\r\n                positionB.set(x - pointB.x, y - pointB.y); // positionB.set(x - pointB.x, y - pointB.y); ?\r\n\r\n                if (getVoronoiRegion(edgeB, positionB) === VORONOI_REGION.LEFT) {\r\n                    const distance = positionB.len;\r\n\r\n                    if (distance > radius) {\r\n                        return null;\r\n                    }\r\n\r\n                    if (Math.abs(radius - distance) < Math.abs(overlap)) {\r\n                        overlap = radius - distance;\r\n                        overlapN.copy(positionB).normalize();\r\n                    }\r\n\r\n                    containsB = false;\r\n                }\r\n            } else {\r\n                const normal = edgeA.perp().normalize(),\r\n                    distance = positionA.dot(normal.x, normal.y);\r\n\r\n                if (distance > 0 && (Math.abs(distance) > radius)) {\r\n                    return null;\r\n                }\r\n\r\n                if (distance >= 0 || (radius - distance) < (2 * radius)) {\r\n                    containsB = false;\r\n                }\r\n\r\n                if (Math.abs(radius - distance) < Math.abs(overlap)) {\r\n                    overlap = radius - distance;\r\n                    overlapN.copy(normal);\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Collision({\r\n            shapeA: swap ? circle : polygon,\r\n            shapeB: swap ? polygon : circle,\r\n            distance: 0, // todo\r\n            separation: overlapN.scale(overlap),\r\n            shapeAInB: swap ? containsB : containsA,\r\n            shapeBInA: swap ? containsA : containsB,\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Collision.js","import { TIME } from '../../const';\r\n\r\n/**\r\n * @class Time\r\n */\r\nexport default class Time {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [time=0]\r\n     * @param {Number} [factor=TIME.MILLISECONDS]\r\n     */\r\n    constructor(time = 0, factor = TIME.MILLISECONDS) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._milliseconds = time * factor;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get milliseconds() {\r\n        return this._milliseconds;\r\n    }\r\n\r\n    set milliseconds(milliseconds) {\r\n        this._milliseconds = milliseconds;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get seconds() {\r\n        return this._milliseconds / TIME.SECONDS;\r\n    }\r\n\r\n    set seconds(seconds) {\r\n        this._milliseconds = seconds * TIME.SECONDS;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get minutes() {\r\n        return this._milliseconds / TIME.MINUTES;\r\n    }\r\n\r\n    set minutes(minutes) {\r\n        this._milliseconds = minutes * TIME.MINUTES;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get hours() {\r\n        return this._milliseconds / TIME.HOURS;\r\n    }\r\n\r\n    set hours(hours) {\r\n        this._milliseconds = hours * TIME.HOURS;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} [time=0]\r\n     * @param {Number} [factor=TIME.MILLISECONDS]\r\n     * @returns {Time}\r\n     */\r\n    set(time = 0, factor = TIME.MILLISECONDS) {\r\n        this._milliseconds = time * factor;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} milliseconds\r\n     * @returns {Time}\r\n     */\r\n    setMilliseconds(milliseconds) {\r\n        this.milliseconds = milliseconds;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} seconds\r\n     * @returns {Time}\r\n     */\r\n    setSeconds(seconds) {\r\n        this.seconds = seconds;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} minutes\r\n     * @returns {Time}\r\n     */\r\n    setMinutes(minutes) {\r\n        this.minutes = minutes;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} hours\r\n     * @returns {Time}\r\n     */\r\n    setHours(hours) {\r\n        this.hours = hours;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Time|Object} time\r\n     * @param {Number} [time.milliseconds]\r\n     * @param {Number} [time.seconds]\r\n     * @param {Number} [time.minutes]\r\n     * @param {Number} [time.hours]\r\n     * @returns {Boolean}\r\n     */\r\n    equals({ milliseconds, seconds, minutes, hours } = {}) {\r\n        return (milliseconds === undefined || this.milliseconds === milliseconds)\r\n            && (seconds === undefined || this.seconds === seconds)\r\n            && (minutes === undefined || this.minutes === minutes)\r\n            && (hours === undefined || this.hours === hours);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Time} time\r\n     * @returns {Boolean}\r\n     */\r\n    greaterThan(time) {\r\n        return this._milliseconds > time.milliseconds;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Time} time\r\n     * @returns {Boolean}\r\n     */\r\n    lessThan(time) {\r\n        return this._milliseconds < time.milliseconds;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Time}\r\n     */\r\n    clone() {\r\n        return new Time(this._milliseconds);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Time} time\r\n     * @returns {Time}\r\n     */\r\n    copy(time) {\r\n        this._milliseconds = time.milliseconds;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Time} time\r\n     * @returns {Time}\r\n     */\r\n    add(time) {\r\n        this._milliseconds += time.milliseconds;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Time} time\r\n     * @returns {Time}\r\n     */\r\n    subtract(time) {\r\n        this._milliseconds -= time.milliseconds;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._milliseconds = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Time}\r\n */\r\nTime.Empty = new Time(0);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Time}\r\n */\r\nTime.Temp = new Time();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/time/Time.js","/**\n * @class ParticleModifier\n */\nexport default class ParticleModifier {\n\n    /**\n     * @public\n     * @chainable\n     * @param {Particle} particle\n     * @param {Time} delta\n     * @returns {ParticleModifier}\n     */\n    apply(particle, delta) { // eslint-disable-line\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     * @returns {ParticleModifier}\n     */\n    clone() {\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        throw new Error('Method not implemented!');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/ParticleModifier.js","/**\n * @public\n * @constant\n * @type {Function}\n * @param {Array} array\n * @param {Number} startIndex\n * @param {Number} amount\n */\nconst removeArrayItems = (array, startIndex, amount) => {\n    if (startIndex >= array.length || amount <= 0) {\n        return;\n    }\n\n    const length = array.length,\n        removeCount = (startIndex + amount > length) ? (length - startIndex) : amount,\n        newLen = (length - removeCount);\n\n    for (let i = startIndex; i < newLen; i++) {\n        array[i] = array[i + removeCount];\n    }\n\n    array.length = newLen;\n};\n\n/**\n * @namespace Exo\n */\nexport {\n    removeArrayItems,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/array.js","/**\n * @class ResourceFactory\n */\nexport default class ResourceFactory {\n\n    /**\n     * @public\n     * @readonly\n     * @member {String}\n     */\n    get storageType() {\n        return 'resource';\n    }\n\n    /**\n     * @public\n     * @param {String} path\n     * @param {Object} [options]\n     * @returns {Promise<Response>}\n     */\n    request(path, options) {\n        return fetch(path, options);\n    }\n\n    /**\n     * @public\n     * @param {Response} response\n     * @returns {Promise<*>}\n     */\n    process(response) { // eslint-disable-line\n        return Promise.resolve(null);\n    }\n\n    /**\n     * @public\n     * @param {Response} source\n     * @param {Object} [options]\n     * @returns {Promise<*>}\n     */\n    create(source, options) { // eslint-disable-line\n        return Promise.resolve(source);\n    }\n\n    /**\n     * @public\n     * @param {String} path\n     * @param {Object} [request]\n     * @param {Object} [options]\n     * @returns {Promise<*>}\n     */\n    load(path, request, options) {\n        return this\n            .request(path, request)\n            .then((response) => this.process(response))\n            .then((source) => this.create(source, options));\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/ResourceFactory.js","import Container from '../Container';\r\nimport Rectangle from '../../math/Rectangle';\r\nimport Vector from '../../math/Vector';\r\nimport Interval from '../../math/Interval';\r\n\r\n/**\r\n * @class Sprite\r\n * @extends Container\r\n */\r\nexport default class Sprite extends Container {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {?Texture|?RenderTexture} texture\r\n     */\r\n    constructor(texture) {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Texture|?RenderTexture}\r\n         */\r\n        this._texture = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Rectangle}\r\n         */\r\n        this._textureFrame = new Rectangle();\r\n\r\n        /**\r\n         * 48 Bytes for 12 4-Byte Properties:\r\n         *\r\n         * X/Y Top-Left\r\n         * X/Y Top-Right\r\n         * X/Y Bottom-Left\r\n         * X/Y Bottom-Right\r\n         *\r\n         * U/V Top-Left (Packed)\r\n         * U/V Bottom-Right (Packed)\r\n         *\r\n         * @private\r\n         * @type {ArrayBuffer}\r\n         */\r\n        this._spriteData = new ArrayBuffer(48);\r\n\r\n        /**\r\n         * @private\r\n         * @type {Float32Array}\r\n         */\r\n        this._vertexData = new Float32Array(this._spriteData, 0, 8);\r\n\r\n        /**\r\n         * @private\r\n         * @type {Uint32Array}\r\n         */\r\n        this._texCoordData = new Uint32Array(this._spriteData, 32, 4);\r\n\r\n        /**\r\n         * @private\r\n         * @type {Boolean}\r\n         */\r\n        this._updateTexCoords = true;\r\n\r\n        if (texture) {\r\n            this.setTexture(texture);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?Texture|?RenderTexture}\r\n     */\r\n    get texture() {\r\n        return this._texture;\r\n    }\r\n\r\n    set texture(texture) {\r\n        this.setTexture(texture);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Rectangle}\r\n     */\r\n    get textureFrame() {\r\n        return this._textureFrame;\r\n    }\r\n\r\n    set textureFrame(frame) {\r\n        this.setTextureFrame(frame);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Float32Array}\r\n     */\r\n    get vertexData() {\r\n        const { left, top, right, bottom } = this.getLocalBounds(),\r\n            { a, b, c, d, x, y } = this.getGlobalTransform();\r\n\r\n        this._vertexData[0] = (left * a) + (top * b) + x;\r\n        this._vertexData[1] = (left * c) + (top * d) + y;\r\n\r\n        this._vertexData[2] = (right * a) + (top * b) + x;\r\n        this._vertexData[3] = (right * c) + (top * d) + y;\r\n\r\n        this._vertexData[4] = (right * a) + (bottom * b) + x;\r\n        this._vertexData[5] = (right * c) + (bottom * d) + y;\r\n\r\n        this._vertexData[6] = (left * a) + (bottom * b) + x;\r\n        this._vertexData[7] = (left * c) + (bottom * d) + y;\r\n\r\n        return this._vertexData;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Uint32Array}\r\n     */\r\n    get texCoordData() {\r\n        if (this._updateTexCoords) {\r\n            const { width, height } = this._texture,\r\n                { left, top, right, bottom } = this._textureFrame,\r\n                minX = ((left / width) * 65535 & 65535),\r\n                minY = ((top / height) * 65535 & 65535) << 16,\r\n                maxX = ((right / width) * 65535 & 65535),\r\n                maxY = ((bottom / height) * 65535 & 65535) << 16;\r\n\r\n            if (this._texture.flipY) {\r\n                this._texCoordData[0] = (maxY | minX);\r\n                this._texCoordData[1] = (maxY | maxX);\r\n                this._texCoordData[2] = (minY | maxX);\r\n                this._texCoordData[3] = (minY | minX);\r\n            } else {\r\n                this._texCoordData[0] = (minY | minX);\r\n                this._texCoordData[1] = (minY | maxX);\r\n                this._texCoordData[2] = (maxY | maxX);\r\n                this._texCoordData[3] = (maxY | minX);\r\n            }\r\n\r\n            this._updateTexCoords = false;\r\n        }\r\n\r\n        return this._texCoordData;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return Math.abs(this.scale.x) * this._textureFrame.width;\r\n    }\r\n\r\n    set width(value) {\r\n        this.scale.x = value / this._textureFrame.width;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return Math.abs(this.scale.y) * this._textureFrame.height;\r\n    }\r\n\r\n    set height(value) {\r\n        this.scale.y = value / this._textureFrame.height;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {?Texture|?RenderTexture} texture\r\n     * @returns {Sprite}\r\n     */\r\n    setTexture(texture) {\r\n        if (this._texture !== texture) {\r\n            this._texture = texture;\r\n            this.updateTexture();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Sprite}\r\n     */\r\n    updateTexture() {\r\n        if (this._texture) {\r\n            this._texture.updateSource();\r\n            this.resetTextureFrame();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Rectangle} frame\r\n     * @param {Boolean} [resetSize=true]\r\n     * @returns {Sprite}\r\n     */\r\n    setTextureFrame(frame, resetSize = true) {\r\n        const width = this.width,\r\n            height = this.height;\r\n\r\n        this._textureFrame.copy(frame);\r\n        this._updateTexCoords = true;\r\n\r\n        this.localBounds.set(0, 0, frame.width, frame.height);\r\n\r\n        if (resetSize) {\r\n            this.width = frame.width;\r\n            this.height = frame.height;\r\n        } else {\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Sprite}\r\n     */\r\n    resetTextureFrame() {\r\n        return this.setTextureFrame(Rectangle.Temp.set(0, 0, this._texture.width, this._texture.height));\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    render(renderManager) {\r\n        if (this.visible && renderManager.insideViewport(this)) {\r\n            const renderer = renderManager.getRenderer('sprite');\r\n\r\n            renderManager.setRenderer(renderer);\r\n\r\n            renderer.render(this);\r\n\r\n            for (const child of this.children) {\r\n                child.render(renderManager);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * todo - cache this\r\n     *\r\n     * @public\r\n     * @returns {Vector[]}\r\n     */\r\n    getVertices() {\r\n        const vertexData = this.vertexData;\r\n\r\n        return [\r\n            new Vector(vertexData[0], vertexData[1]),\r\n            new Vector(vertexData[2], vertexData[3]),\r\n            new Vector(vertexData[6], vertexData[7]),\r\n            new Vector(vertexData[4], vertexData[5]),\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * todo - cache this\r\n     *\r\n     * @public\r\n     * @returns {Vector[]}\r\n     */\r\n    getNormals() {\r\n        const vertices = this.getVertices(),\r\n            len = vertices.length,\r\n            normals = [];\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            const point = vertices[i],\r\n                nextPoint = vertices[(i + 1) % len];\r\n\r\n            normals.push(\r\n                nextPoint.clone()\r\n                    .subtract(point.x, point.y)\r\n                    .perp()\r\n                    .normalize()\r\n            );\r\n        }\r\n\r\n        return normals;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} axis\r\n     * @param {Interval} [result=new Interval()]\r\n     * @returns {Interval}\r\n     */\r\n    project(axis, result = new Interval()) {\r\n        const vertices = this.getVertices(),\r\n            len = vertices.length,\r\n            { x, y } = vertices[0];\r\n\r\n        let min = axis.dot(x, y),\r\n            max = min;\r\n\r\n        for (let i = 1; i < len; i++) {\r\n            const { x, y } = vertices[i],\r\n                projection = axis.dot(x, y);\r\n\r\n            min = Math.min(min, projection);\r\n            max = Math.max(max, projection);\r\n        }\r\n\r\n        return result.set(min, max);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    contains(x, y) {\r\n        if ((this.rotation % 90 === 0)) {\r\n            return this.getBounds().contains(x, y);\r\n        }\r\n\r\n        const vertices = this.getVertices(),\r\n            { x: x1, y: y1 } = vertices[0],\r\n            { x: x2, y: y2 } = vertices[1],\r\n            { x: x3, y: y3 } = vertices[2],\r\n            temp = Vector.Temp,\r\n            vecA = temp.set(x2 - x1, y2 - y1),\r\n            dotA = vecA.dot(x - x1, y - y1),\r\n            lenA = vecA.dot(vecA.x, vecA.y),\r\n            vecB = temp.set(x3 - x2, y3 - y2),\r\n            dotB = vecB.dot(x - x2, y - y2),\r\n            lenB = vecB.dot(vecB.x, vecB.y);\r\n\r\n        return (dotA > 0)\r\n            && (dotA <= lenA)\r\n            && (dotB > 0)\r\n            && (dotB <= lenB);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._textureFrame.destroy();\r\n        this._textureFrame = null;\r\n\r\n        this._texture = null;\r\n        this._spriteData = null;\r\n        this._vertexData = null;\r\n        this._texCoordData = null;\r\n        this._updateTexCoords = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/sprite/Sprite.js","import Interval from './Interval';\r\nimport Vector from './Vector';\r\nimport Rectangle from './Rectangle';\r\nimport Collision from '../core/Collision';\r\nimport Circle from './Circle';\r\n\r\n/**\r\n * @class Polygon\r\n */\r\nexport default class Polygon {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [x=0]\r\n     * @param {Number} [y=0]\r\n     * @param {Vector[]} [points=[]]\r\n     */\r\n    constructor(x = 0, y = 0, points = []) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._position = new Vector(x, y);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector[]}\r\n         */\r\n        this._points = points.map((point) => point.clone());\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get position() {\r\n        return this._position;\r\n    }\r\n\r\n    set position(position) {\r\n        this._position.copy(position);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get x() {\r\n        return this._position.x;\r\n    }\r\n\r\n    set x(x) {\r\n        this._position.x = x;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get y() {\r\n        return this._position.y;\r\n    }\r\n\r\n    set y(y) {\r\n        this._position.y = y;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector[]}\r\n     */\r\n    get points() {\r\n        return this._points;\r\n    }\r\n\r\n    set points(points) {\r\n        this.setPoints(points);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Polygon}\r\n     */\r\n    setPosition(x, y) {\r\n        this._position.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Vector[]} newPoints\r\n     * @returns {Polygon}\r\n     */\r\n    setPoints(newPoints) {\r\n        const points = this._points,\r\n            len = points.length,\r\n            diff = len - newPoints.length;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            points[i].copy(newPoints[i]);\r\n        }\r\n\r\n        if (diff > 0) {\r\n            for (const point of points.splice(newPoints.length, diff)) {\r\n                point.destroy();\r\n            }\r\n        } else if (diff < 0) {\r\n            for (let i = len; i < newPoints.length; i++) {\r\n                points.push(newPoints[i].clone());\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Vector[]} points\r\n     * @returns {Polygon}\r\n     */\r\n    set(x, y, points) {\r\n        this._position.set(x, y);\r\n        this.setPoints(points);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Polygon} polygon\r\n     * @returns {Polygon}\r\n     */\r\n    copy(polygon) {\r\n        this._position.copy(polygon.position);\r\n        this.setPoints(polygon.points);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Polygon}\r\n     */\r\n    clone() {\r\n        return new Polygon(this.x, this.y, this.points);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Polygon|Object} polygon\r\n     * @param {Number} [polygon.x]\r\n     * @param {Number} [polygon.y]\r\n     * @param {Vector[]} [polygon.points]\r\n     * @returns {Boolean}\r\n     */\r\n    equals({ x, y, points } = {}) {\r\n        return (x === undefined || this.x === x)\r\n            && (y === undefined || this.y === y)\r\n            && (points === undefined || ((this.points.length === points.length)\r\n                && (this.points.every((point, index) => point.equals(points[index])))\r\n            ));\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Rectangle}\r\n     */\r\n    getBounds() {\r\n        let minX = Infinity,\r\n            minY = Infinity,\r\n            maxX = -Infinity,\r\n            maxY = -Infinity;\r\n\r\n        for (const point of this._points) {\r\n            minX = Math.min(point.x, minX);\r\n            minY = Math.min(point.y, minY);\r\n            maxX = Math.max(point.x, maxX);\r\n            maxY = Math.max(point.y, maxY);\r\n        }\r\n\r\n        return new Rectangle(\r\n            this.x + minX,\r\n            this.y + minY,\r\n            maxX - minX,\r\n            maxY - minY\r\n        );\r\n    }\r\n\r\n    /**\r\n     * todo - cache this\r\n     *\r\n     * @public\r\n     * @returns {Vector[]}\r\n     */\r\n    getNormals() {\r\n        const normals = [],\r\n            len = this._points.length;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            const point = this._points[i],\r\n                nextPoint = this._points[(i + 1) % len];\r\n\r\n            normals.push(\r\n                nextPoint.clone()\r\n                .subtract(point.x, point.y)\r\n                .perp()\r\n                .normalize()\r\n            );\r\n        }\r\n\r\n        return normals;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} axis\r\n     * @param {Interval} [result=new Interval()]\r\n     * @returns {Interval}\r\n     */\r\n    project(axis, result = new Interval()) {\r\n        const points = this._points,\r\n            len = points.length,\r\n            { x, y } = points[0];\r\n\r\n        let min = axis.dot(x, y),\r\n            max = min;\r\n\r\n        for (let i = 1; i < len; i++) {\r\n            const { x, y } = points[i],\r\n                projection = axis.dot(x, y);\r\n\r\n            min = Math.min(min, projection);\r\n            max = Math.max(max, projection);\r\n        }\r\n\r\n        return result.set(min, max);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Matrix} [transform]\r\n     * @returns {Boolean}\r\n     */\r\n    contains(x, y, transform) {\r\n        const points = this._points,\r\n            len = points.length;\r\n\r\n        let inside = false;\r\n\r\n        for (let i = 0, j = len - 1; i < len; j = i++) {\r\n            const pointA = points[i],\r\n                pointB = points[j];\r\n\r\n            let { x: x1, y: y1 } = pointA,\r\n                { x: x2, y: y2 } = pointB;\r\n\r\n            if (transform) {\r\n                x1 = (pointA.x * transform.a) + (pointA.y * transform.b) + transform.x;\r\n                y1 = (pointA.x * transform.c) + (pointA.y * transform.d) + transform.y;\r\n                x2 = (pointB.x * transform.a) + (pointB.y * transform.b) + transform.x;\r\n                y2 = (pointB.x * transform.c) + (pointB.y * transform.d) + transform.y;\r\n            }\r\n\r\n            if (((y1 <= y && y < y2) || (y2 <= y && y < y1)) && x < ((x2 - x1) / (y2 - y1) * (y - y1) + x1)) {\r\n                inside = !inside;\r\n            };\r\n        }\r\n\r\n        return inside;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Circle|Rectangle|Polygon} object\r\n     * @returns {Boolean}\r\n     */\r\n    intersets(object) {\r\n        if (object instanceof Polygon) {\r\n            return Collision.intersectionSAT(this, object);\r\n        }\r\n\r\n        if (object instanceof Rectangle) {\r\n            return Collision.intersectionSAT(this, object);\r\n        }\r\n\r\n        if (object instanceof Circle) {\r\n            return Collision.intersectionPolyCircle(this, object);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Circle|Rectangle|Polygon} object\r\n     * @returns {?Collision}\r\n     */\r\n    getCollision(object) {\r\n        if (object instanceof Polygon) {\r\n            return Collision.collisionSAT(this, object);\r\n        }\r\n\r\n        if (object instanceof Rectangle) {\r\n            return Collision.collisionSAT(this, object);\r\n        }\r\n\r\n        if (object instanceof Circle) {\r\n            return Collision.collisionPolyCircle(this, object);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n\r\n        for (const point of this._points) {\r\n            point.destroy();\r\n        }\r\n\r\n        this._position.destroy();\r\n        this._position = null;\r\n\r\n        this._points.length = 0;\r\n        this._points = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Polygon}\r\n */\r\nPolygon.Empty = new Polygon(0, 0, []);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Polygon}\r\n */\r\nPolygon.Temp = new Polygon();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Polygon.js","import ArrayBufferFactory from './ArrayBufferFactory';\nimport { determineMimeType } from '../../utils/mime';\n\n/**\n * @class BlobFactory\n * @extends ArrayBufferFactory\n */\nexport default class BlobFactory extends ArrayBufferFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'blob';\n    }\n\n    /**\n     * @override\n     */\n    create(source, { mimeType = determineMimeType(source) } = {}) {\n        return super\n            .create(source, null)\n            .then((arrayBuffer) => new Blob([arrayBuffer], { type: mimeType }));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/BlobFactory.js","const\n\n    /**\n     * @typedef {Object} FileType\n     * @property {String} mimeType\n     * @property {Number[]} pattern\n     * @property {Number[]} mask\n     */\n\n    /**\n     * @inner\n     * @constant\n     * @name FILE_TYPES\n     * @type {FileType[]}\n     */\n    FILE_TYPES = [{\n        mimeType: 'image/x-icon',\n        pattern: [0x00, 0x00, 0x01, 0x00],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'image/x-icon',\n        pattern: [0x00, 0x00, 0x02, 0x00],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'image/bmp',\n        pattern: [0x42, 0x4D],\n        mask: [0xFF, 0xFF],\n    }, {\n        mimeType: 'image/gif',\n        pattern: [0x47, 0x49, 0x46, 0x38, 0x37, 0x61],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'image/gif',\n        pattern: [0x47, 0x49, 0x46, 0x38, 0x39, 0x61],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'image/webp',\n        pattern: [0x52, 0x49, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00, 0x57, 0x45, 0x42, 0x50, 0x56, 0x50],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'image/png',\n        pattern: [0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'image/jpeg',\n        pattern: [0xFF, 0xD8, 0xFF],\n        mask: [0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'audio/basic',\n        pattern: [0x2E, 0x73, 0x6E, 0x64],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'audio/mpeg',\n        pattern: [0x49, 0x44, 0x33],\n        mask: [0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'audio/wave',\n        pattern: [0x52, 0x49, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00, 0x57, 0x41, 0x56, 0x45],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'audio/midi',\n        pattern: [0x4D, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'audio/aiff',\n        pattern: [0x46, 0x4F, 0x52, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x41, 0x49, 0x46, 0x46],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'video/avi',\n        pattern: [0x52, 0x49, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00, 0x41, 0x56, 0x49, 0x20],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF],\n    }, {\n        mimeType: 'application/ogg',\n        pattern: [0x4F, 0x67, 0x67, 0x53, 0x00],\n        mask: [0xFF, 0xFF, 0xFF, 0xFF, 0xFF],\n    }],\n\n    /**\n     * @inner\n     * @constant\n     * @type {Function}\n     * @param {ArrayBuffer} arrayBuffer\n     * @returns {Boolean}\n     */\n    matchesMP4Video = (arrayBuffer) => {\n        const header = new Uint8Array(arrayBuffer),\n            view = new DataView(arrayBuffer),\n            boxSize = view.getUint32(0, false);\n\n        if (header.length < Math.max(12, boxSize) || boxSize % 4 !== 0) {\n            return false;\n        }\n\n        return String.fromCharCode(...header.subarray(4, 11)) === 'ftypmp4';\n    },\n\n    /**\n     * @inner\n     * @constant\n     * @type {Function}\n     * @param {ArrayBuffer} arrayBuffer\n     * @returns {Boolean}\n     */\n    matchesWebMVideo = (arrayBuffer) => {\n        const header = new Uint8Array(arrayBuffer),\n            matching = [0x1A, 0x45, 0xDF, 0xA3].every((byte, i) => (byte === header[i])),\n            sliced = header.subarray(4, 4 + 4096),\n            index = sliced.findIndex((el, i, arr) => (arr[i] === 0x42 && arr[i + 1] === 0x82));\n\n        if (!matching || index === -1) {\n            return false;\n        }\n\n        return String.fromCharCode(...sliced.subarray(index + 3, index + 7)) === 'webm';\n    },\n\n    /**\n     * @public\n     * @constant\n     * @type {Function}\n     * @param {ArrayBuffer} arrayBuffer\n     * @returns {String}\n     */\n    determineMimeType = (arrayBuffer) => {\n        const header = new Uint8Array(arrayBuffer);\n\n        if (!header.length) {\n            throw new Error('Cannot determine mime type: No data.');\n        }\n\n        for (const type of FILE_TYPES) {\n            if (header.length < type.pattern.length) {\n                continue;\n            }\n\n            if (type.pattern.every((p, i) => (header[i] & type.mask[i]) === p)) {\n                return type.mimeType;\n            }\n        }\n\n        if (matchesMP4Video(arrayBuffer)) {\n            return 'video/mp4';\n        }\n\n        if (matchesWebMVideo(arrayBuffer)) {\n            return 'video/webm';\n        }\n\n        return 'text/plain';\n    };\n\n/**\n * @namespace Exo\n */\nexport {\n    determineMimeType,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/mime.js","import BlobFactory from './BlobFactory';\n\n/**\n * @class ImageFactory\n * @extends BlobFactory\n */\nexport default class ImageFactory extends BlobFactory {\n\n    /**\n     * @constructor\n     */\n    constructor() {\n        super();\n\n        /**\n         * @private\n         * @member {Set<String>}\n         */\n        this._objectURLs = new Set();\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Set<String>}\n     */\n    get objectURLs() {\n        return this._objectURLs;\n    }\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'image';\n    }\n\n    /**\n     * @override\n     */\n    create(source, { mimeType } = {}) {\n        return super\n            .create(source, { mimeType })\n            .then((blob) => new Promise((resolve, reject) => {\n                const image = new Image(),\n                    objectURL = URL.createObjectURL(blob);\n\n                this._objectURLs.add(objectURL);\n\n                image.addEventListener('load', () => resolve(image));\n                image.addEventListener('error', () => reject(Error('Error loading image source.')));\n                image.addEventListener('abort', () => reject(Error('Image loading was canceled.')));\n\n                image.src = objectURL;\n            }));\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        for (const objectURL of this._objectURLs) {\n            URL.revokeObjectURL(objectURL);\n        }\n\n        this._objectURLs.clear();\n        this._objectURLs = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/ImageFactory.js","import { clamp } from '../utils/math';\nimport EventEmitter from '../core/EventEmitter';\n\n/**\n * @class Media\n * @extends EventEmitter\n */\nexport default class Media extends EventEmitter {\n\n    /**\n     * @constructor\n     * @param {MediaSource} mediaSource\n     * @param {Object} [options]\n     * @property {Number} [options.volume]\n     * @property {Boolean} [options.loop]\n     * @property {Number} [options.speed]\n     * @property {Number} [options.time]\n     * @property {Boolean} [options.muted]\n     */\n    constructor(mediaSource, options) {\n        super();\n\n        /**\n         * @private\n         * @member {MediaSource}\n         */\n        this._mediaSource = mediaSource;\n\n        /**\n         * @private\n         * @member {?HTMLMediaElement}\n         */\n        this._mediaElement = mediaSource.mediaElement;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._duration = 0;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._volume = 1;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._speed = 1;\n\n        /**\n         * @private\n         * @member {Boolean}\n         */\n        this._loop = false;\n\n        /**\n         * @private\n         * @member {Boolean}\n         */\n        this._muted = false;\n\n        if (options !== undefined) {\n            this.applyOptions(options);\n        }\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {MediaSource}\n     */\n    get mediaSource() {\n        return this._mediaSource;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {?HTMLMediaElement}\n     */\n    get mediaElement() {\n        return this._mediaElement;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get duration() {\n        return this._duration;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get progress() {\n        const elapsed = this.currentTime,\n            duration = this.duration;\n\n        return ((elapsed % duration) / duration);\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get volume() {\n        return this._volume;\n    }\n\n    set volume(value) {\n        const volume = clamp(value, 0, 2);\n\n        if (this.volume !== volume) {\n            this._mediaElement.volume = this._volume = volume;\n        }\n    }\n\n    /**\n     * @public\n     * @member {Boolean}\n     */\n    get loop() {\n        return this._loop;\n    }\n\n    set loop(value) {\n        const loop = !!value;\n\n        if (this.loop !== loop) {\n            this._mediaElement.loop = this._loop = loop;\n        }\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get speed() {\n        return this._speed;\n    }\n\n    set speed(value) {\n        const speed = Math.max(0, value);\n\n        if (this.speed !== speed) {\n            this._mediaElement.playbackRate = this._speed = speed;\n        }\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get currentTime() {\n        return this._mediaElement.currentTime;\n    }\n\n    set currentTime(currentTime) {\n        this._mediaElement.currentTime = Math.max(0, currentTime);\n    }\n\n    /**\n     * @public\n     * @member {Boolean}\n     */\n    get muted() {\n        return this._muted;\n    }\n\n    set muted(value) {\n        const muted = !!value;\n\n        if (this.muted !== muted) {\n            this._mediaElement.muted = this._muted = muted;\n        }\n    }\n\n    /**\n     * @public\n     * @member {Boolean}\n     */\n    get paused() {\n        return this._mediaElement.paused;\n    }\n\n    set paused(paused) {\n        if (paused) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    }\n\n    /**\n     * @public\n     * @member {Boolean}\n     */\n    get playing() {\n        return !this.paused;\n    }\n\n    set playing(playing) {\n        if (playing) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {?AudioNode}\n     */\n    get analyserTarget() {\n        return null;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Object} [options]\n     * @property {Boolean} [options.loop]\n     * @property {Number} [options.speed]\n     * @property {Number} [options.volume]\n     * @property {Number} [options.time]\n     * @property {Boolean} [options.muted]\n     * @returns {Media}\n     */\n    play(options) {\n        if (this.paused) {\n            this.applyOptions(options);\n            this._mediaElement.play();\n            this.trigger('start');\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {Media}\n     */\n    pause() {\n        if (this.playing) {\n            this._mediaElement.pause();\n            this.trigger('stop');\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {Media}\n     */\n    stop() {\n        this.pause();\n        this.currentTime = 0;\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Object} [options]\n     * @param {Boolean} [options.loop]\n     * @param {Number} [options.speed]\n     * @param {Number} [options.volume]\n     * @param {Number} [options.time]\n     * @param {Boolean} [options.muted]\n     * @returns {Media}\n     */\n    toggle(options) {\n        return this.paused ? this.play(options) : this.pause();\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Object} [options]\n     * @param {Number} [options.volume]\n     * @param {Boolean} [options.loop]\n     * @param {Number} [options.speed]\n     * @param {Number} [options.time]\n     * @param {Boolean} [options.muted]\n     * @returns {Media}\n     */\n    applyOptions({ volume, loop, speed, time, muted } = {}) {\n        if (volume !== undefined) {\n            this.volume = volume;\n        }\n\n        if (loop !== undefined) {\n            this.loop = loop;\n        }\n\n        if (speed !== undefined) {\n            this.speed = speed;\n        }\n\n        if (time !== undefined) {\n            this.currentTime = time;\n        }\n\n        if (muted !== undefined) {\n            this.muted = muted;\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        super.destroy();\n\n        this.stop();\n\n        this._mediaSource = null;\n        this._mediaElement = null;\n        this._duration = null;\n        this._volume = null;\n        this._speed = null;\n        this._loop = null;\n        this._muted = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/media/Media.js","import Drawable from './Drawable';\r\nimport { removeArrayItems } from '../utils/array';\r\n\r\n/**\r\n * @class Container\r\n * @extends Drawable\r\n */\r\nexport default class Container extends Drawable {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Drawable[]}\r\n         */\r\n        this._children = [];\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Drawable[]}\r\n     */\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return Math.abs(this.scale.x) * this.bounds.width;\r\n    }\r\n\r\n    set width(value) {\r\n        this.scale.x = value / this.bounds.width;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return Math.abs(this.scale.y) * this.bounds.height;\r\n    }\r\n\r\n    set height(value) {\r\n        this.scale.y = value / this.bounds.height;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get left() {\r\n        return this.x - (this.width * this.origin.x);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get top() {\r\n        return this.y - (this.height * this.origin.y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get right() {\r\n        return (this.x + this.width - this.origin.x);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get bottom() {\r\n        return (this.y + this.height - this.origin.y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Drawable} child\r\n     * @returns {Container}\r\n     */\r\n    addChild(child) {\r\n        return this.addChildAt(child, this._children.length);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Drawable} child\r\n     * @param {Number} index\r\n     * @returns {Container}\r\n     */\r\n    addChildAt(child, index) {\r\n        if (index < 0 || index > this._children.length) {\r\n            throw new Error(`The index ${index} is out of bounds ${this._children.length}`);\r\n        }\r\n\r\n        if (child === this) {\r\n            return this;\r\n        }\r\n\r\n        if (child.parent) {\r\n            child.parent.removeChild(child);\r\n        }\r\n\r\n        child.parent = this;\r\n\r\n        this._children.splice(index, 0, child);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Drawable} firstChild\r\n     * @param {Drawable} secondChild\r\n     * @returns {Container}\r\n     */\r\n    swapChildren(firstChild, secondChild) {\r\n        if (firstChild !== secondChild) {\r\n            this._children[this.getChildIndex(firstChild)] = secondChild;\r\n            this._children[this.getChildIndex(secondChild)] = firstChild;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Drawable} child\r\n     * @returns {Number}\r\n     */\r\n    getChildIndex(child) {\r\n        const index = this._children.indexOf(child);\r\n\r\n        if (index === -1) {\r\n            throw new Error('Drawable is not a child of the container.');\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Drawable} child\r\n     * @param {Number} index\r\n     * @returns {Container}\r\n     */\r\n    setChildIndex(child, index) {\r\n        if (index < 0 || index >= this._children.length) {\r\n            throw new Error(`The index ${index} is out of bounds ${this._children.length}`);\r\n        }\r\n\r\n        removeArrayItems(this._children, this.getChildIndex(child), 1);\r\n\r\n        this._children.splice(index, 0, child);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} index\r\n     * @returns {Drawable}\r\n     */\r\n    getChildAt(index) {\r\n        if (index < 0 || index >= this._children.length) {\r\n            throw new Error(`getChildAt: Index (${index}) does not exist.`);\r\n        }\r\n\r\n        return this._children[index];\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Drawable} child\r\n     * @returns {Container}\r\n     */\r\n    removeChild(child) {\r\n        const index = this._children.indexOf(child);\r\n\r\n        if (index !== -1) {\r\n            this.removeChildAt(index);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} index\r\n     * @returns {Container}\r\n     */\r\n    removeChildAt(index) {\r\n        removeArrayItems(this._children, index, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} begin\r\n     * @param {Number} end\r\n     * @returns {Container}\r\n     */\r\n    removeChildren(begin = 0, end = this._children.length) {\r\n        const range = (end - begin);\r\n\r\n        if (range < 0 || range > end) {\r\n            throw new Error('Values are outside the acceptable range.');\r\n        }\r\n\r\n        removeArrayItems(this._children, begin, range);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    render(renderManager) {\r\n        if (this.visible) {\r\n            for (const child of this._children) {\r\n                child.render(renderManager);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    updateBounds() {\r\n        this._bounds.reset()\r\n            .addRect(this.getLocalBounds(), this.getGlobalTransform());\r\n\r\n        for (const child of this._children) {\r\n            if (child.visible) {\r\n                this._bounds.addRect(child.getBounds());\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._children.length = 0;\r\n        this._children = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/Container.js","import SceneNode from '../core/SceneNode';\r\nimport Color from '../core/Color';\r\nimport { BLEND_MODES } from '../const';\r\n\r\n/**\r\n * @class Drawable\r\n * @extends SceneNode\r\n */\r\nexport default class Drawable extends SceneNode {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._visible = true;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Color}\r\n         */\r\n        this._tint = Color.White.clone();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._blendMode = BLEND_MODES.NORMAL;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(visible) {\r\n        this._visible = visible;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get tint() {\r\n        return this._tint;\r\n    }\r\n\r\n    set tint(tint) {\r\n        this.setTint(tint);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get blendMode() {\r\n        return this._blendMode;\r\n    }\r\n\r\n    set blendMode(blendMode) {\r\n        this.setBlendMode(blendMode);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Color} color\r\n     * @returns {Drawable}\r\n     */\r\n    setTint(color) {\r\n        this._tint.copy(color);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} blendMode\r\n     * @returns {Drawable}\r\n     */\r\n    setBlendMode(blendMode) {\r\n        this._blendMode = blendMode;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {RenderManager} renderManager\r\n     * @returns {Drawable}\r\n     */\r\n    render(renderManager) {\r\n        throw new Error('Method not implemented!');\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._tint.destroy();\r\n        this._tint = null;\r\n\r\n        this._visible = null;\r\n        this._blendMode = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/Drawable.js","import Vector from './Vector';\n\n/**\n * @class ObservableVector\n * @extends Vector\n */\nexport default class ObservableVector extends Vector {\n\n    /**\n     * @constructor\n     * @param {Function} callback\n     * @param {*} scope\n     * @param {Number} [x=0]\n     * @param {Number} [y=0]\n     */\n    constructor(callback, scope, x = 0, y = 0) {\n        super(x, y);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this._callback = callback;\n\n        /**\n         * @private\n         * @member {*}\n         */\n        this._scope = scope || this;\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get x() {\n        return this._x;\n    }\n\n    set x(x) {\n        if (this._x !== x) {\n            this._x = x;\n            this._callback.call(this._scope);\n        }\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get y() {\n        return this._y;\n    }\n\n    set y(y) {\n        if (this._y !== y) {\n            this._y = y;\n            this._callback.call(this._scope);\n        }\n    }\n\n    /**\n     * @override\n     */\n    set(x = this._x, y = this._y) {\n        if (this._x !== x || this._y !== y) {\n            this._x = x;\n            this._y = y;\n            this._callback.call(this._scope);\n        }\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    add(x, y = x) {\n        return this.set(this._x + x, this._y + y);\n    }\n\n    /**\n     * @override\n     */\n    subtract(x, y = x) {\n        return this.set(this._x - x, this._y - y);\n    }\n\n    /**\n     * @override\n     */\n    scale(x, y = x) {\n        return this.set(this._x * x, this._y * y);\n    }\n\n    /**\n     * @override\n     */\n    divide(x, y = x) {\n        return this.set(this._x / x, this._y / y);\n    }\n\n    /**\n     * @override\n     */\n    normalize() {\n        return this.divide(this.magnitude);\n    }\n\n    /**\n     * @override\n     */\n    copy(vector) {\n        return this.set(vector.x, vector.y);\n    }\n\n    /**\n     * @override\n     */\n    clone() {\n        return new ObservableVector(this._callback, this._scope, this._x, this._y);\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        super.destroy();\n\n        this._callback = null;\n        this._scope = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/ObservableVector.js","import Vector from './Vector';\r\nimport Rectangle from './Rectangle';\r\nimport Polygon from './Polygon';\r\nimport Collision from '../core/Collision';\r\nimport Interval from './Interval';\r\n\r\n/**\r\n * @class Circle\r\n */\r\nexport default class Circle {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [x=0]\r\n     * @param {Number} [y=0]\r\n     * @param {Number} [radius=0]\r\n     */\r\n    constructor(x = 0, y = 0, radius = 0) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._position = new Vector(x, y);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._radius = radius;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get position() {\r\n        return this._position;\r\n    }\r\n\r\n    set position(position) {\r\n        this._position.copy(position);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get x() {\r\n        return this._position.x;\r\n    }\r\n\r\n    set x(x) {\r\n        this._position.x = x;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get y() {\r\n        return this._position.y;\r\n    }\r\n\r\n    set y(y) {\r\n        this._position.y = y;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius(radius) {\r\n        this._radius = radius;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Circle}\r\n     */\r\n    setPosition(x, y) {\r\n        this._position.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} radius\r\n     * @returns {Circle}\r\n     */\r\n    setRadius(radius) {\r\n        this._radius = radius;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} radius\r\n     * @returns {Circle}\r\n     */\r\n    set(x, y, radius) {\r\n        this._position.set(x, y);\r\n        this._radius = radius;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Circle} circle\r\n     * @returns {Circle}\r\n     */\r\n    copy(circle) {\r\n        this._position.copy(circle.position);\r\n        this._radius = circle.radius;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Circle}\r\n     */\r\n    clone() {\r\n        return new Circle(this.x, this.y, this.radius);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Circle|Object} circle\r\n     * @param {Number} [circle.x]\r\n     * @param {Number} [circle.y]\r\n     * @param {Number} [circle.radius]\r\n     * @returns {Boolean}\r\n     */\r\n    equals({ x, y, radius } = {}) {\r\n        return (x === undefined || this.x === x)\r\n            && (y === undefined || this.y === y)\r\n            && (radius === undefined || this.radius === radius);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Rectangle}\r\n     */\r\n    getBounds() {\r\n        return new Rectangle(\r\n            this.x - this.radius,\r\n            this.y - this.radius,\r\n            this.radius * 2,\r\n            this.radius * 2\r\n        );\r\n    }\r\n\r\n    /**\r\n     * todo - cache this\r\n     *\r\n     * @public\r\n     * @returns {Vector[]}\r\n     */\r\n    getNormals() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} axis\r\n     * @param {Interval} [result=new Interval()]\r\n     * @returns {Interval}\r\n     */\r\n    project(axis, result = new Interval()) {\r\n        return result.set(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Matrix} [transform]\r\n     * @returns {Boolean}\r\n     */\r\n    contains(x, y, transform) {\r\n        let position = this._position;\r\n\r\n        if (transform) {\r\n            position = position.transform(transform, Vector.Temp);\r\n        }\r\n\r\n        return (position.distanceTo(x, y) <= this._radius);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Circle|Rectangle|Polygon} object\r\n     * @returns {Boolean}\r\n     */\r\n    intersets(object) {\r\n        if (object instanceof Circle) {\r\n            return Collision.intersectionCircleCircle(this, object);\r\n        }\r\n\r\n        if (object instanceof Rectangle) {\r\n            return Collision.intersectionCircleRect(this, object);\r\n        }\r\n\r\n        if (object instanceof Polygon) {\r\n            return Collision.intersectionPolyCircle(object, this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Circle|Rectangle|Polygon} object\r\n     * @returns {?Collision}\r\n     */\r\n    getCollision(object) {\r\n        if (object instanceof Circle) {\r\n            return Collision.collisionCircleCircle(this, object);\r\n        }\r\n\r\n        if (object instanceof Rectangle) {\r\n            return Collision.collisionCircleRect(this, object);\r\n        }\r\n\r\n        if (object instanceof Polygon) {\r\n            return Collision.collisionPolyCircle(object, this, true);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._position.destroy();\r\n        this._position = null;\r\n\r\n        this._radius = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Circle}\r\n */\r\nCircle.Empty = new Circle(0, 0, 0);\r\n\r\n/**\r\n * @public\r\n * @static\r\n * @constant\r\n * @member {Circle}\r\n */\r\nCircle.Temp = new Circle();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Circle.js","import Rectangle from '../math/Rectangle';\r\nimport Matrix from '../math/Matrix';\r\n\r\n/**\r\n * @class Bounds\r\n */\r\nexport default class Bounds {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n\r\n        /**\r\n         * @private\r\n         * @type {Number}\r\n         */\r\n        this._minX = Infinity;\r\n\r\n        /**\r\n         * @private\r\n         * @type {Number}\r\n         */\r\n        this._minY = Infinity;\r\n\r\n        /**\r\n         * @private\r\n         * @type {Number}\r\n         */\r\n        this._maxX = -Infinity;\r\n\r\n        /**\r\n         * @private\r\n         * @type {Number}\r\n         */\r\n        this._maxY = -Infinity;\r\n\r\n        /**\r\n         * @private\r\n         * @type {Rectangle}\r\n         */\r\n        this._rect = new Rectangle();\r\n\r\n        /**\r\n         * @private\r\n         * @type {Boolean}\r\n         */\r\n        this._dirty = true;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get minX() {\r\n        return this._minX;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get minY() {\r\n        return this._minY;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get maxX() {\r\n        return this._maxX;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get maxY() {\r\n        return this._maxY;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Bounds}\r\n     */\r\n    addCoords(x, y) {\r\n        this._minX = Math.min(this._minX, x);\r\n        this._minY = Math.min(this._minY, y);\r\n        this._maxX = Math.max(this._maxX, x);\r\n        this._maxY = Math.max(this._maxY, y);\r\n\r\n        this._dirty = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Rectangle} rectangle\r\n     * @param {Matrix} [transform]\r\n     * @returns {Bounds}\r\n     */\r\n    addRect(rectangle, transform) {\r\n        if (transform) {\r\n            rectangle = rectangle.transform(transform, Rectangle.Temp);\r\n        }\r\n\r\n        return this\r\n            .addCoords(rectangle.left, rectangle.top)\r\n            .addCoords(rectangle.right, rectangle.bottom);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Rectangle}\r\n     */\r\n    getRect() {\r\n        if (this._dirty) {\r\n            this._rect.set(\r\n                this._minX,\r\n                this._minY,\r\n                this._maxX - this._minX,\r\n                this._maxY - this._minY\r\n            );\r\n\r\n            this._dirty = false;\r\n        }\r\n\r\n        return this._rect;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Bounds}\r\n     */\r\n    reset() {\r\n        this._minX = Infinity;\r\n        this._minY = Infinity;\r\n        this._maxX = -Infinity;\r\n        this._maxY = -Infinity;\r\n\r\n        this._dirty = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._rect.destroy();\r\n        this._rect = null;\r\n\r\n        this._minX = null;\r\n        this._minY = null;\r\n        this._maxX = null;\r\n        this._maxY = null;\r\n\r\n        this._dirty = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Bounds.js","import { TIME } from '../../const';\r\nimport Time from './Time';\r\n\r\n/**\r\n * @class Clock\r\n */\r\nexport default class Clock {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Boolean} [autoStart=false]\r\n     */\r\n    constructor(autoStart = false) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._startTime = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._timeBuffer = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._running = false;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Time}\r\n         */\r\n        this._time = new Time();\r\n\r\n        if (autoStart) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Boolean}\r\n     */\r\n    get running() {\r\n        return this._running;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Time}\r\n     */\r\n    get time() {\r\n        return this._time;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get elapsedTime() {\r\n        return this._time.setMilliseconds(this.elapsedMilliseconds);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get elapsedMilliseconds() {\r\n        if (!this._running) {\r\n            return this._timeBuffer;\r\n        }\r\n\r\n        return this._timeBuffer + (Date.now() - this._startTime);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get elapsedSeconds() {\r\n        return this.elapsedMilliseconds / TIME.SECONDS;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get elapsedMinutes() {\r\n        return this.elapsedMilliseconds / TIME.MINUTES;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get elapsedHours() {\r\n        return this.elapsedMilliseconds / TIME.HOURS;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Clock}\r\n     */\r\n    start() {\r\n        if (!this._running) {\r\n            this._startTime = Date.now();\r\n            this._running = true;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Clock}\r\n     */\r\n    stop() {\r\n        if (this._running) {\r\n            this._timeBuffer += (Date.now() - this._startTime);\r\n            this._running = false;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Clock}\r\n     */\r\n    reset() {\r\n        this._timeBuffer = 0;\r\n        this._running = false;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Clock}\r\n     */\r\n    restart() {\r\n        this.reset();\r\n        this.start();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._startTime = null;\r\n        this._timeBuffer = null;\r\n        this._running = null;\r\n\r\n        this._time.destroy();\r\n        this._time = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/time/Clock.js","import Size from '../math/Size';\r\nimport View from './View';\r\nimport Rectangle from '../math/Rectangle';\r\nimport Vector from '../math/Vector';\r\n\r\n/**\r\n * @class RenderTarget\r\n */\r\nexport default class RenderTarget {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Boolean} [root = false]\r\n     */\r\n    constructor(width, height, root = false) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Size}\r\n         */\r\n        this._size = new Size(width, height);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._root = root;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGL2RenderingContext}\r\n         */\r\n        this._context = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGLFramebuffer}\r\n         */\r\n        this._framebuffer = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Rectangle}\r\n         */\r\n        this._viewport = new Rectangle();\r\n\r\n        /**\r\n         * @private\r\n         * @member {View}\r\n         */\r\n        this._defaultView = new View(width / 2, height / 2, width, height);\r\n\r\n        /**\r\n         * @private\r\n         * @member {View}\r\n         */\r\n        this._view = this._defaultView;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {View}\r\n     */\r\n    get view() {\r\n        return this._view;\r\n    }\r\n\r\n    set view(view) {\r\n        this.setView(view);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Size}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size) {\r\n        this.resize(size.width, size.height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return this._size.width;\r\n    }\r\n\r\n    set width(width) {\r\n        this.resize(width, this.height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return this._size.height;\r\n    }\r\n\r\n    set height(height) {\r\n        this.resize(this.width, height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {WebGL2RenderingContext} context\r\n     * @returns {RenderTarget}\r\n     */\r\n    connect(context) {\r\n        if (!this._context) {\r\n            this._context = context;\r\n            this._framebuffer = this._root ? null : context.createFramebuffer();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderTarget}\r\n     */\r\n    disconnect() {\r\n        this.unbindFramebuffer();\r\n\r\n        if (this._context) {\r\n            this._context.deleteFramebuffer(this._framebuffer);\r\n\r\n            this._context = null;\r\n            this._framebuffer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderTarget}\r\n     */\r\n    bindFramebuffer() {\r\n        if (!this._context) {\r\n            throw new Error('Texture has to be connected first!')\r\n        }\r\n\r\n        const gl = this._context;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\r\n\r\n        this.updateViewport();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderTarget}\r\n     */\r\n    unbindFramebuffer() {\r\n        if (this._context) {\r\n            const gl = this._context;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {View} view\r\n     * @returns {RenderTarget}\r\n     */\r\n    setView(view) {\r\n        this._view = view || this._defaultView;\r\n        this.updateViewport();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {RenderTarget}\r\n     */\r\n    resize(width, height) {\r\n        if (!this._size.equals({ width, height })) {\r\n            this._size.set(width, height);\r\n            this.updateViewport();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {View} [view=this._view]\r\n     * @returns {Rectangle}\r\n     */\r\n    getViewport(view = this._view) {\r\n        const viewport = view.viewport;\r\n\r\n        return this._viewport.set(\r\n            Math.round(viewport.x * this.width),\r\n            Math.round(viewport.y * this.height),\r\n            Math.round(viewport.width * this.width),\r\n            Math.round(viewport.height * this.height)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderTarget}\r\n     */\r\n    updateViewport() {\r\n        if (this._context) {\r\n            const gl = this._context,\r\n                viewport = this.getViewport();\r\n\r\n            gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} point\r\n     * @param {View} [view=this._view]\r\n     * @returns {Vector}\r\n     */\r\n    mapPixelToCoords(point, view = this._view) {\r\n        const viewport = this.getViewport(view),\r\n            normalized = new Vector(\r\n                -1 + (2 * (point.x - viewport.left) / viewport.width),\r\n                1 - (2 * (point.y - viewport.top) / viewport.height)\r\n            );\r\n\r\n        return normalized.transform(view.getInverseTransform());\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} point\r\n     * @param {View} [view=this._view]\r\n     * @returns {Vector}\r\n     */\r\n    mapCoordsToPixel(point, view = this._view) {\r\n        const viewport = this.getViewport(view),\r\n            normalized = point.transform(view.getTransform(), new Vector());\r\n\r\n        return normalized.set(\r\n            ((( normalized.x + 1) / 2 * viewport.width) + viewport.left) | 0,\r\n            (((-normalized.y + 1) / 2 * viewport.height) + viewport.top) | 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this.disconnect();\r\n\r\n        this._defaultView.destroy();\r\n        this._defaultView = null;\r\n\r\n        this._viewport.destroy();\r\n        this._viewport = null;\r\n\r\n        this._size.destroy();\r\n        this._size = null;\r\n\r\n        this._root = null;\r\n        this._view = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/RenderTarget.js","/**\r\n * @class Renderer\r\n */\r\nexport default class Renderer {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {RenderManager} renderManager\r\n     */\r\n    connect(renderManager) {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Renderer}\r\n     */\r\n    disconnect() {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    bind() {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Renderer}\r\n     */\r\n    unbind() {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {*} drawable\r\n     * @returns {Renderer}\r\n     */\r\n    render(drawable) { // eslint-disable-line\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Renderer}\r\n     */\r\n    flush() {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._renderManager = null;\r\n        this._context = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/Renderer.js","import ShaderAttribute from './ShaderAttribute';\r\nimport ShaderUniform from './ShaderUniform';\r\nimport { TYPE_SIZES, UNIFORM_TYPE } from '../../const';\r\nimport ShaderBlock from './ShaderBlock';\r\n\r\n/**\r\n * @class Shader\r\n */\r\nexport default class Shader {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {String} vertexSource\r\n     * @param {String} fragmentSource\r\n     */\r\n    constructor(vertexSource, fragmentSource) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._vertexSource = vertexSource;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._fragmentSource = fragmentSource;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGL2RenderingContext}\r\n         */\r\n        this._context = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGLShader}\r\n         */\r\n        this._vertexShader = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGLShader}\r\n         */\r\n        this._fragmentShader = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGLProgram}\r\n         */\r\n        this._program = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Object<String, ShaderAttribute>}\r\n         */\r\n        this._attributes = {};\r\n\r\n        /**\r\n         * @private\r\n         * @member {Object<String, ShaderUniform>}\r\n         */\r\n        this._uniforms = {};\r\n\r\n        /**\r\n         * @private\r\n         * @member {Object<String, ShaderBlock>}\r\n         */\r\n        this._blocks = {};\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Object<String, ShaderAttribute>}\r\n     */\r\n    get attributes() {\r\n        return this._attributes;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Object<String, ShaderUniform>}\r\n     */\r\n    get uniforms() {\r\n        return this._uniforms;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Object<String, ShaderBlock>}\r\n     */\r\n    get blocks() {\r\n        return this._blocks;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} type\r\n     * @param {String} source\r\n     * @returns {WebGLShader}\r\n     */\r\n    createShader(type, source) {\r\n        const gl = this._context,\r\n            shader = gl.createShader(type);\r\n\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            console.log(gl.getShaderInfoLog(shader)); // eslint-disable-line\r\n\r\n            return null;\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {WebGLShader} vertexShader\r\n     * @param {WebGLShader} fragmentShader\r\n     * @returns {?WebGLProgram}\r\n     */\r\n    createProgram(vertexShader, fragmentShader) {\r\n        const gl = this._context,\r\n            program = gl.createProgram();\r\n\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n\r\n        gl.linkProgram(program);\r\n\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            gl.detachShader(program, vertexShader);\r\n            gl.detachShader(program, fragmentShader);\r\n\r\n            gl.deleteProgram(program);\r\n\r\n            console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS)); // eslint-disable-line\r\n            console.error('gl.getError()', gl.getError()); // eslint-disable-line\r\n\r\n            if (gl.getProgramInfoLog(program)) {\r\n                console.warn('gl.getProgramInfoLog()', gl.getProgramInfoLog(program)); // eslint-disable-line\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        return program;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {WebGL2RenderingContext} gl\r\n     * @returns {Shader}\r\n     */\r\n    connect(gl) {\r\n        if (!this._context) {\r\n            this._context = gl;\r\n            this._vertexShader = this.createShader(gl.VERTEX_SHADER, this._vertexSource);\r\n            this._fragmentShader = this.createShader(gl.FRAGMENT_SHADER, this._fragmentSource);\r\n            this._program = this.createProgram(this._vertexShader, this._fragmentShader);\r\n            this._extractAttributes();\r\n            this._extractUniforms();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Shader}\r\n     */\r\n    disconnect() {\r\n        this.unbindProgram();\r\n\r\n        if (this._context) {\r\n            const gl = this._context;\r\n\r\n            gl.deleteShader(this._vertexShader);\r\n            gl.deleteShader(this._fragmentShader);\r\n            gl.deleteProgram(this._program);\r\n\r\n            for (const name of Object.keys(this._attributes)) {\r\n                this._attributes[name].destroy();\r\n                delete this._attributes[name];\r\n            }\r\n\r\n            for (const name of Object.keys(this._uniforms)) {\r\n                this._uniforms[name].destroy();\r\n                delete this._uniforms[name];\r\n            }\r\n\r\n            for (const name of Object.keys(this._blocks)) {\r\n                this._blocks[name].destroy();\r\n                delete this._blocks[name];\r\n            }\r\n\r\n            this._attributes = null;\r\n            this._uniforms = null;\r\n            this._blocks = null;\r\n            this._vertexShader = null;\r\n            this._fragmentShader = null;\r\n            this._program = null;\r\n            this._context = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Shader}\r\n     */\r\n    bindProgram() {\r\n        if (!this._context) {\r\n            throw new Error('No context!')\r\n        }\r\n\r\n        const gl = this._context;\r\n\r\n        gl.useProgram(this._program);\r\n\r\n        for (const uniform of Object.values(this._uniforms)) {\r\n            uniform.setValue(uniform.value);\r\n        }\r\n\r\n        for (const block of Object.values(this._blocks)) {\r\n            block.setValue(block.value);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Shader}\r\n     */\r\n    unbindProgram() {\r\n        if (this._context) {\r\n            this._context.useProgram(null);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {String} name\r\n     * @returns {ShaderUniform}\r\n     */\r\n    getUniform(name) {\r\n        if (!(name in this._uniforms)) {\r\n            throw new Error(`Uniform \"${name}\" is not available.`);\r\n        }\r\n\r\n        return this._uniforms[name];\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this.disconnect();\r\n\r\n        this._vertexSource = null;\r\n        this._fragmentSource = null;\r\n        this._context = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _extractAttributes() {\r\n        const gl = this._context,\r\n            program = this._program,\r\n            totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n\r\n        for (let i = 0; i < totalAttributes; i++) {\r\n            const { name, type } = gl.getActiveAttrib(program, i);\r\n\r\n            this._attributes[name] = new ShaderAttribute(Object.assign({}, {\r\n                name: name,\r\n                type: type,\r\n                size: TYPE_SIZES[type],\r\n                location: gl.getAttribLocation(program, name),\r\n            }));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _extractUniforms() {\r\n        const gl = this._context,\r\n            program = this._program,\r\n            activeUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS),\r\n            indices = new Uint8Array(activeUniforms).map((value, index) => index),\r\n            blockIndices = gl.getActiveUniforms(program, indices, gl.UNIFORM_BLOCK_INDEX),\r\n            offsets = gl.getActiveUniforms(program, indices, gl.UNIFORM_OFFSET),\r\n            blocks = {};\r\n\r\n        for (const index of indices) {\r\n            const { name, type, size } = gl.getActiveUniform(program, index),\r\n                location = gl.getUniformLocation(program, name),\r\n                block = blockIndices[index],\r\n                offset = offsets[index],\r\n                uniform = new ShaderUniform({ context: gl, index, name, type, size, location, block, offset });\r\n\r\n            if (block !== -1) {\r\n                if (!(block in blocks)) {\r\n                    blocks[block] = new ShaderBlock({\r\n                        context: gl,\r\n                        index: block,\r\n                        name: gl.getActiveUniformBlockName(program, block),\r\n                        size: gl.getActiveUniformBlockParameter(program, block, gl.UNIFORM_BLOCK_DATA_SIZE),\r\n                        usedByVertexShader: gl.getActiveUniformBlockParameter(program, block, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\r\n                        usedByFragmentShader: gl.getActiveUniformBlockParameter(program, block, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\r\n                    });\r\n                }\r\n\r\n                blocks[block].addUniform(uniform);\r\n\r\n                continue;\r\n            }\r\n\r\n            this._uniforms[name] = uniform;\r\n        }\r\n\r\n        for (const block of Object.values(blocks)) {\r\n            const transformBuffer = gl.createBuffer();\r\n\r\n            this._blocks[block.name] = block;\r\n\r\n            gl.bindBuffer(gl.UNIFORM_BUFFER, transformBuffer);\r\n            gl.bufferData(gl.UNIFORM_BUFFER, new ArrayBuffer(block.size), gl.STATIC_DRAW);\r\n            gl.bindBufferBase(gl.UNIFORM_BUFFER, block.index, transformBuffer);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shader/Shader.js","/**\r\n * @class VertexArray\r\n */\r\nexport default class VertexArray {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param context {WebGL2RenderingContext}\r\n     */\r\n    constructor(context) {\r\n\r\n        /**\r\n         * @member {WebGL2RenderingContext}\r\n         */\r\n        this._context = context;\r\n\r\n        /**\r\n         * @member {WebGLVertexArray}\r\n         */\r\n        this._vao = context.createVertexArray();\r\n\r\n        /**\r\n         * @member {Array}\r\n         */\r\n        this._attributes = [];\r\n\r\n        /**\r\n         * @member {PIXI.glCore.Buffer}\r\n         */\r\n        this._indexBuffer = null;\r\n\r\n        /**\r\n         * @member {Boolean}\r\n         */\r\n        this._dirty = false;\r\n    }\r\n\r\n    /**\r\n     * Binds the buffer\r\n     */\r\n    bind() {\r\n        this._context.bindVertexArray(this._vao);\r\n\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            this.activate();\r\n\r\n            return this;\r\n        }\r\n\r\n        if (this._indexBuffer) {\r\n            this._indexBuffer.bind();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Unbinds the buffer\r\n     */\r\n    unbind() {\r\n        this._context.bindVertexArray(null);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Uses this vao\r\n     */\r\n    activate() {\r\n        const gl = this._context;\r\n\r\n        let lastBuffer = null;\r\n\r\n        for (let i = 0; i < this._attributes.length; i++) {\r\n            const attrib = this._attributes[i];\r\n\r\n            if (lastBuffer !== attrib.buffer) {\r\n                attrib.buffer.bind();\r\n                lastBuffer = attrib.buffer;\r\n            }\r\n\r\n            gl.vertexAttribPointer(\r\n                attrib.attribute.location,\r\n                attrib.attribute.size,\r\n                attrib.type || gl.FLOAT,\r\n                attrib.normalized || false,\r\n                attrib.stride || 0,\r\n                attrib.start || 0);\r\n\r\n            gl.enableVertexAttribArray(attrib.attribute.location);\r\n        }\r\n\r\n        if (this._indexBuffer) {\r\n            this._indexBuffer.bind();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param buffer     {Buffer}\r\n     * @param attribute  {*}\r\n     * @param type       {Number}\r\n     * @param normalized {Boolean}\r\n     * @param stride     {Number}\r\n     * @param start      {Number}\r\n     */\r\n    addAttribute(buffer, attribute, type, normalized, stride, start) {\r\n        this._attributes.push({\r\n            buffer: buffer,\r\n            attribute: attribute,\r\n\r\n            location: attribute.location,\r\n            type: type || this._context.FLOAT,\r\n            normalized: normalized || false,\r\n            stride: stride || 0,\r\n            start: start || 0\r\n        });\r\n\r\n        this._dirty = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param buffer   {PIXI.gl.Buffer}\r\n     */\r\n    addIndex(buffer) {\r\n        this._indexBuffer = buffer;\r\n        this._dirty = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Unbinds this vao and disables it\r\n     */\r\n    clear() {\r\n        this._context.bindVertexArray(this._vao);\r\n\r\n        this._attributes.length = 0;\r\n        this._indexBuffer = null;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} type\r\n     * @param {Number} size\r\n     * @param {Number} start\r\n     */\r\n    draw(type, size, start) {\r\n        const gl = this._context;\r\n\r\n        if (this._indexBuffer) {\r\n            gl.drawElements(type, size, gl.UNSIGNED_SHORT, (start || 0) * 2);\r\n        } else {\r\n            gl.drawArrays(type, start, size);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy this vao\r\n     */\r\n    destroy() {\r\n        this._context.deleteVertexArray(this._vao);\r\n\r\n        this._indexBuffer = null;\r\n        this._attributes = null;\r\n\r\n        this._vao = null;\r\n        this._context = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/VertexArray.js","/**\n * @typedef {Object} DatabaseResult\n * @property {String} type\n * @property {String} name\n * @property {?Object} data\n */\n\n/**\n * @class Database\n */\nexport default class Database {\n\n    /**\n     * @constructor\n     * @param {String} name\n     * @param {Number} version\n     */\n    constructor(name, version) {\n\n        /**\n         * @private\n         * @member {String}\n         */\n        this._name = name;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._version = version;\n\n        /**\n         * @private\n         * @member {Boolean}\n         */\n        this._connected = false;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {String}\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get version() {\n        return this._version;\n    }\n\n    /**\n     * @public\n     * @member {Boolean}\n     */\n    get connected() {\n        return this._connected;\n    }\n\n    set connected(connected) {\n        this._connected = connected;\n    }\n\n    /**\n     * @public\n     * @returns {Promise}\n     */\n    connect() {\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     * @returns {Promise}\n     */\n    disconnect() {\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     * @param {String} type\n     * @param {String} name\n     * @returns {Promise<DatabaseResult>}\n     */\n    load(type, name) {\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     * @param {String} type\n     * @param {String} name\n     * @param {Object} data\n     * @returns {Promise<DatabaseResult>}\n     */\n    save(type, name, data) {\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     * @param {String} type\n     * @param {String} name\n     * @returns {Promise<DatabaseResult>}\n     */\n    delete(type, name) {\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     * @param {String} [type='*']\n     * @returns {Promise}\n     */\n    clearStorage(type = '*') {\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     * @returns {Promise}\n     */\n    deleteStorage() {\n        throw new Error('Method not implemented!');\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        this.disconnect();\n\n        this._name = null;\n        this._version = null;\n        this._connected = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/Database.js","import EventEmitter from '../core/EventEmitter';\r\nimport ResourceContainer from './ResourceContainer';\r\nimport ArrayBufferFactory from './factories/ArrayBufferFactory';\r\nimport BlobFactory from './factories/BlobFactory';\r\nimport FontFactory from './factories/FontFactory';\r\nimport ImageFactory from './factories/ImageFactory';\r\nimport JSONFactory from './factories/JSONFactory';\r\nimport MusicFactory from './factories/MusicFactory';\r\nimport SoundFactory from './factories/SoundFactory';\r\nimport TextFactory from './factories/TextFactory';\r\nimport TextureFactory from './factories/TextureFactory';\r\nimport MediaSourceFactory from './factories/MediaSourceFactory';\r\nimport VideoFactory from './factories/VideoFactory';\r\nimport settings from '../settings';\r\n\r\n/**\r\n * @class Loader\r\n * @extends EventEmitter\r\n */\r\nexport default class Loader extends EventEmitter {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} [options]\r\n     * @param {String} [options.resourcePath='']\r\n     * @param {Database} [options.database=null]\r\n     * @param {String} [options.method=settings.REQUEST_METHOD]\r\n     * @param {String} [options.mode=settings.REQUEST_MODE]\r\n     * @param {String} [options.cache=settings.REQUEST_CACHE]\r\n     */\r\n    constructor({\r\n        resourcePath = '',\r\n        database = null,\r\n        method = settings.REQUEST_METHOD,\r\n        mode = settings.REQUEST_MODE,\r\n        cache = settings.REQUEST_CACHE,\r\n    } = {}) {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._resourcePath = resourcePath;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Database}\r\n         */\r\n        this._database = database;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Map<String, ResourceFactory>}\r\n         */\r\n        this._factories = new Map();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Set<Object>}\r\n         */\r\n        this._queue = new Set();\r\n\r\n        /**\r\n         * @private\r\n         * @member {ResourceContainer}\r\n         */\r\n        this._resources = new ResourceContainer();\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._method = method;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._mode = mode;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._cache = cache;\r\n\r\n        this._addFactories();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Map<String, ResourceFactory>}\r\n     */\r\n    get factories() {\r\n        return this._factories;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Set<Object>}\r\n     */\r\n    get queue() {\r\n        return this._queue;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {ResourceContainer}\r\n     */\r\n    get resources() {\r\n        return this._resources;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get resourcePath() {\r\n        return this._resourcePath;\r\n    }\r\n\r\n    set resourcePath(resourcePath) {\r\n        this._resourcePath = resourcePath;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?Database}\r\n     */\r\n    get database() {\r\n        return this._database;\r\n    }\r\n\r\n    set database(database) {\r\n        this._database = database;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get method() {\r\n        return this._method;\r\n    }\r\n\r\n    set method(method) {\r\n        this._method = method;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get mode() {\r\n        return this._mode;\r\n    }\r\n\r\n    set mode(mode) {\r\n        this._mode = mode;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get cache() {\r\n        return this._cache;\r\n    }\r\n\r\n    set cache(cache) {\r\n        this._cache = cache;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {String} type\r\n     * @param {ResourceFactory} factory\r\n     * @returns {Loader}\r\n     */\r\n    addFactory(type, factory) {\r\n        this._factories.set(type, factory);\r\n        this._resources.addType(type);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {String} type\r\n     * @returns {ResourceFactory}\r\n     */\r\n    getFactory(type) {\r\n        if (!this._factories.has(type)) {\r\n            throw new Error(`No resource factory for type \"${type}\".`);\r\n        }\r\n\r\n        return this._factories.get(type);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {String} type\r\n     * @param {Object<String, String>|String} itemsOrName\r\n     * @param {Object|String} [optionsOrPath]\r\n     * @param {Object} [options]\r\n     * @returns {Loader}\r\n     */\r\n    add(type, itemsOrName, optionsOrPath, options) {\r\n        if (!this._factories.has(type)) {\r\n            throw new Error(`No resource factory for type \"${type}\".`);\r\n        }\r\n\r\n        if (typeof itemsOrName === 'object') {\r\n            for (const [name, path] of Object.entries(itemsOrName)) {\r\n                this._queue.add({ type, name, path, options: optionsOrPath });\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        this._queue.add({ type, name: itemsOrName, path: optionsOrPath, options });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Function} [callback]\r\n     * @returns {Promise}\r\n     */\r\n    load(callback) {\r\n        const items = [...this._queue];\r\n\r\n        let loaded = 0;\r\n\r\n        if (callback) {\r\n            this.once('complete', callback, this);\r\n        }\r\n\r\n        this._queue.clear();\r\n\r\n        this.trigger('start', items.length, loaded, items);\r\n\r\n        return items\r\n            .map((item) => this.loadItem(item))\r\n            .reduce((sequence, promise) => sequence\r\n                .then(() => promise)\r\n                .then((resource) => this.trigger('progress', items.length, ++loaded, items, resource)),\r\n            Promise.resolve())\r\n            .then(() => this.trigger('complete', items.length, loaded, items, this._resources));\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Object} item\r\n     * @param {String} item.type\r\n     * @param {String} item.name\r\n     * @param {String} item.path\r\n     * @param {Object} [item.options]\r\n     * @returns {Promise<*>}\r\n     */\r\n    loadItem({ type, name, path, options } = {}) {\r\n        if (this._resources.has(type, name)) {\r\n            return Promise.resolve(this._resources.get(type, name));\r\n        }\r\n\r\n        const factory = this.getFactory(type),\r\n            completePath = this._resourcePath + path,\r\n            request = {\r\n                method: this._method,\r\n                mode: this._mode,\r\n                cache: this._cache,\r\n            };\r\n\r\n        if (this._database) {\r\n            return this._database\r\n                .load(factory.storageType, name)\r\n                .then((result) => result.data || factory\r\n                    .request(completePath, request)\r\n                    .then((response) => factory.process(response))\r\n                    .then((data) => this._database\r\n                        .save(factory.storageType, name, data)\r\n                        .then((result) => result.data)))\r\n                .then((source) => factory.create(source, options))\r\n                .then((resource) => {\r\n                    this._resources.set(type, name, resource);\r\n\r\n                    return resource;\r\n                });\r\n        }\r\n\r\n        return factory\r\n            .load(completePath, request, options)\r\n            .then((resource) => {\r\n                this._resources.set(type, name, resource);\r\n\r\n                return resource;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.events=true]\r\n     * @param {Boolean} [options.queue=true]\r\n     * @param {Boolean} [options.resources=true]\r\n     * @returns {Loader}\r\n     */\r\n    clear({ events = true, queue = true, resources = true } = {}) {\r\n        if (events) {\r\n            this.off('*');\r\n        }\r\n\r\n        if (queue) {\r\n            this._queue.clear();\r\n        }\r\n\r\n        if (resources) {\r\n            this._resources.clear();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        for (const factory of this._factories.values()) {\r\n            factory.destroy();\r\n        }\r\n\r\n        if (this._database) {\r\n            this._database.destroy();\r\n            this._database = null;\r\n        }\r\n\r\n        this._factories.clear();\r\n        this._factories = null;\r\n\r\n        this._queue.clear();\r\n        this._queue = null;\r\n\r\n        this._resources.destroy();\r\n        this._resources = null;\r\n\r\n        this._resourcePath = null;\r\n        this._method = null;\r\n        this._mode = null;\r\n        this._cache = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _addFactories() {\r\n        this.addFactory('arrayBuffer', new ArrayBufferFactory());\r\n        this.addFactory('mediaSource', new MediaSourceFactory());\r\n        this.addFactory('blob', new BlobFactory());\r\n        this.addFactory('font', new FontFactory());\r\n        this.addFactory('music', new MusicFactory());\r\n        this.addFactory('sound', new SoundFactory());\r\n        this.addFactory('video', new VideoFactory());\r\n        this.addFactory('image', new ImageFactory());\r\n        this.addFactory('texture', new TextureFactory());\r\n        this.addFactory('text', new TextFactory());\r\n        this.addFactory('json', new JSONFactory());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/Loader.js","/**\n * @class ResourceContainer\n */\nexport default class ResourceContainer {\n\n    /**\n     * @constructor\n     */\n    constructor() {\n\n        /**\n         * @private\n         * @member {Map<String, Map<String, *>>}\n         */\n        this._resources = new Map();\n\n        /**\n         * @private\n         * @member {Set<String>}\n         */\n        this._types = new Set();\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Map<String, Map<String, *>>}\n     */\n    get resources() {\n        return this._resources;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Set<String>}\n     */\n    get types() {\n        return this._types;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {String} type\n     * @returns {ResourceContainer}\n     */\n    addType(type) {\n        if (!this._types.has(type)) {\n            this._resources.set(type, new Map());\n            this._types.add(type);\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @param {String} type\n     * @returns {Map<String, *>}\n     */\n    getResources(type) {\n        if (!this._types.has(type)) {\n            throw new Error(`Unknown type \"${type}\".`);\n        }\n\n        return this._resources.get(type);\n    }\n\n    /**\n     * @public\n     * @param {String} type\n     * @param {String} name\n     * @returns {Boolean}\n     */\n    has(type, name) {\n        return this.getResources(type)\n            .has(name);\n    }\n\n    /**\n     * @public\n     * @param {String} type\n     * @param {String} name\n     * @returns {*}\n     */\n    get(type, name) {\n        const resources = this.getResources(type);\n\n        if (!resources.has(name)) {\n            throw new Error(`Missing resource \"${name}\" with type \"${type}\".`);\n        }\n\n        return resources.get(name);\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {String} type\n     * @param {String} name\n     * @param {*} resource\n     * @returns {ResourceContainer}\n     */\n    set(type, name, resource) {\n        this.getResources(type)\n            .set(name, resource);\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {String} type\n     * @param {String} name\n     * @returns {ResourceContainer}\n     */\n    remove(type, name) {\n        this.getResources(type)\n            .delete(name);\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {ResourceContainer}\n     */\n    clear() {\n        for (const container of this._resources.values()) {\n            container.clear();\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        this.clear();\n\n        this._resources.clear();\n        this._resources = null;\n\n        this._types.clear();\n        this._types = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/ResourceContainer.js","import ArrayBufferFactory from './ArrayBufferFactory';\n\n/**\n * @class FontFactory\n * @extends ArrayBufferFactory\n */\nexport default class FontFactory extends ArrayBufferFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'font';\n    }\n\n    /**\n     * @override\n     */\n    create(source, { family, destriptors, addToDocument = true } = {}) {\n        return super\n            .create(source, null)\n            .then((arrayBuffer) => new Promise((resolve, reject) => {\n                const fontFace = new FontFace(family, arrayBuffer, destriptors);\n\n                fontFace\n                    .load()\n                    .then(() => {\n                        if (addToDocument) {\n                            document.fonts.add(fontFace);\n                        }\n\n                        resolve(fontFace);\n                    })\n                    .catch(() => reject(fontFace));\n            }));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/FontFactory.js","import ResourceFactory from '../ResourceFactory';\n\n/**\n * @class JSONFactory\n * @extends ResourceFactory\n */\nexport default class JSONFactory extends ResourceFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'json';\n    }\n\n    /**\n     * @override\n     */\n    process(response) {\n        return response.json();\n    }\n\n    /**\n     * @override\n     */\n    create(source, options) { // eslint-disable-line\n        return Promise.resolve(source);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/JSONFactory.js","import MediaSourceFactory from './MediaSourceFactory';\nimport Music from '../../media/Music';\n\n/**\n * @class MusicFactory\n * @extends MediaSourceFactory\n */\nexport default class MusicFactory extends MediaSourceFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'sound';\n    }\n\n    /**\n     * @override\n     */\n    create(source, { type = 'audio', createMediaElement = true, decodeAudioBuffer = false, mimeType, loadEvent, volume, loop, speed, time, muted } = {}) {\n        return super\n            .create(source, { type, createMediaElement, decodeAudioBuffer, mimeType, loadEvent })\n            .then((audioSource) => new Music(audioSource, { volume, loop, speed, time, muted }));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/MusicFactory.js","import { decodeAudioBuffer } from '../utils/media';\nimport { determineMimeType } from '../utils/mime';\nimport support from '../support';\n\n/**\n * @class MediaSource\n */\nexport default class MediaSource {\n\n    /**\n     * @constructor\n     * @param {String} type\n     * @param {ArrayBuffer} arrayBuffer\n     * @param {Object} [options]\n     * @param {String} [options.mimeType=determineMimeType(arrayBuffer)]\n     * @param {String} [options.loadEvent='canplaythrough']\n     */\n    constructor(type, arrayBuffer, { mimeType = determineMimeType(arrayBuffer), loadEvent = 'canplaythrough' } = {}) {\n\n        /**\n         * @private\n         * @member {String}\n         */\n        this._type = type;\n\n        /**\n         * @private\n         * @member {ArrayBuffer}\n         */\n        this._arrayBuffer = arrayBuffer;\n\n        /**\n         * @private\n         * @member {String}\n         */\n        this._mimeType = mimeType;\n\n        /**\n         * @private\n         * @member {Blob}\n         */\n        this._blob = new Blob([arrayBuffer], { type: mimeType });\n\n        /**\n         * @private\n         * @member {String}\n         */\n        this._blobURL = URL.createObjectURL(this._blob);\n\n        /**\n         * @private\n         * @member {String}\n         */\n        this._loadEvent = loadEvent;\n\n        /**\n         * @private\n         * @member {?HTMLMediaElement}\n         */\n        this._mediaElement = null;\n\n        /**\n         * @private\n         * @member {?AudioBuffer}\n         */\n        this._audioBuffer = null;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {String}\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {ArrayBuffer}\n     */\n    get arrayBuffer() {\n        return this._arrayBuffer;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {String}\n     */\n    get mimeType() {\n        return this._mimeType;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Blob}\n     */\n    get blob() {\n        return this._blob;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {String}\n     */\n    get blobURL() {\n        return this._blobURL;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {String}\n     */\n    get loadEvent() {\n        return this._loadEvent;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {?HTMLMediaElement}\n     */\n    get mediaElement() {\n        return this._mediaElement;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {?AudioBuffer}\n     */\n    get audioBuffer() {\n        return this._audioBuffer;\n    }\n\n    /**\n     * @public\n     * @returns {Promise<HTMLMediaElement>}\n     */\n    createMediaElement() {\n        if (!this._mediaElement) {\n            return new Promise((resolve, reject) => {\n                const mediaElement = document.createElement(this._type);\n\n                mediaElement.addEventListener(this._loadEvent, () => resolve((this._mediaElement = mediaElement)));\n                mediaElement.addEventListener('error', () => reject(Error('Error loading audio source.')));\n                mediaElement.addEventListener('abort', () => reject(Error('Audio loading was canceled.')));\n\n                mediaElement.src = this._blobURL;\n            });\n        }\n\n        return Promise.resolve(this._mediaElement);\n    }\n\n    /**\n     * @public\n     * @returns {Promise<?AudioBuffer>}\n     */\n    decodeAudioBuffer() {\n        if (!this._audioBuffer && support.webAudio) {\n            return decodeAudioBuffer(this._arrayBuffer)\n                .then((audioBuffer) => {\n                    this._audioBuffer = audioBuffer;\n                });\n        }\n\n        return Promise.resolve(this._audioBuffer);\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        super.destroy();\n\n        URL.revokeObjectURL(this._blobURL);\n\n        this._type = null;\n        this._arrayBuffer = null;\n        this._mimeType = null;\n        this._blob = null;\n        this._blobURL = null;\n        this._loadEvent = null;\n        this._mediaElement = null;\n        this._audioBuffer = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/media/MediaSource.js","import { audioContext } from '../utils/media';\nimport { clamp } from '../utils/math';\nimport Media from './Media';\nimport settings from '../settings';\n\n/**\n * @class Music\n * @extends Media\n */\nexport default class Music extends Media {\n\n    /**\n     * @constructor\n     * @param {MediaSource} mediaSource\n     * @param {Object} [options]\n     * @property {Number} [options.volume=settings.VOLUME_MUSIC]\n     * @property {Boolean} [options.loop=settings.MEDIA_LOOP]\n     * @property {Number} [options.speed=settings.MEDIA_SPEED]\n     * @property {Number} [options.time=settings.MEDIA_TIME]\n     * @property {Boolean} [options.muted=settings.MEDIA_MUTED]\n     */\n    constructor(mediaSource, {\n        volume = settings.VOLUME_MUSIC,\n        loop = settings.MEDIA_LOOP,\n        speed = settings.MEDIA_SPEED,\n        time = settings.MEDIA_TIME,\n        muted = settings.MEDIA_MUTED,\n    } = {}) {\n        super(mediaSource, { volume, loop, speed, time, muted });\n\n        const mediaElement = this.mediaElement;\n\n        if (!mediaElement) {\n            throw new Error('MediaElement is missing in MediaSource');\n        }\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._duration = mediaElement.duration;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._volume = mediaElement.volume;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._speed = mediaElement.playbackRate;\n\n        /**\n         * @private\n         * @member {Boolean}\n         */\n        this._loop = mediaElement.loop;\n\n        /**\n         * @private\n         * @member {Boolean}\n         */\n        this._muted = mediaElement.muted;\n\n        /**\n         * @private\n         * @member {?GainNode}\n         */\n        this._gainNode = audioContext.createGain();\n        this._gainNode.gain.setTargetAtTime(this.volume, audioContext.currentTime, 10);\n        this._gainNode.connect(audioContext.destination);\n\n        /**\n         * @private\n         * @member {?MediaElementAudioSourceNode}\n         */\n        this._sourceNode = audioContext.createMediaElementSource(this.mediaElement);\n        this._sourceNode.connect(this._gainNode);\n    }\n\n    /**\n     * @override\n     */\n    get volume() {\n        return this._volume;\n    }\n\n    set volume(value) {\n        const volume = clamp(value, 0, 2);\n\n        if (this._volume !== volume) {\n            this._volume = volume;\n\n            if (this._gainNode) {\n                this._gainNode.gain.setTargetAtTime(volume, audioContext.currentTime, 10);\n            }\n        }\n    }\n\n    /**\n     * @override\n     */\n    get analyserTarget() {\n        return this._gainNode;\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        super.destroy();\n\n        this._sourceNode.disconnect();\n        this._sourceNode = null;\n\n        this._gainNode.disconnect();\n        this._gainNode = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/media/Music.js","const limit = (2 ** 32) - 1;\n\n/**\n * @class Random\n */\nexport default class Random {\n\n    /**\n     * @constructor\n     * @param {Number} [seed=Date.now()]\n     */\n    constructor(seed = Date.now()) {\n\n        /**\n         * @private\n         * @type {Number[]}\n         */\n        this._state = new Uint32Array(624);\n\n        /**\n         * @private\n         * @type {Number}\n         */\n        this._iteration = 0;\n\n        /**\n         * @private\n         * @type {?Number}\n         */\n        this._seed = null;\n\n        /**\n         * @private\n         * @type {?Number}\n         */\n        this._value = null;\n\n        this.seed = seed;\n\n        this._twist();\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {?Number}\n     */\n    get seed() {\n        return this._value;\n    }\n\n    set seed(seed) {\n        this._seed = seed;\n        this.reset();\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {?Number}\n     */\n    get value() {\n        return this._value;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get iteration() {\n        return this._iteration;\n    }\n\n    /**\n     * @public\n     * @returns {Random}\n     */\n    reset() {\n        this._state[0] = this._seed;\n\n        for (let i = 1; i < 624; i++) {\n            const s = this._state[i - 1] ^ (this._state[i - 1] >>> 30);\n\n            this._state[i] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + i;\n            this._state[i] |= 0;\n        }\n\n        this._iteration = 0;\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @param {Number} [min=0]\n     * @param {Number} [max=1]\n     * @returns {Number}\n     */\n    next(min = 0, max = 1) {\n        if (this._iteration >= 624) {\n            this._twist();\n        }\n\n        this._value = this._state[this._iteration++];\n        this._value ^= (this._value >>> 11);\n        this._value ^= (this._value << 7) & 0x9d2c5680;\n        this._value ^= (this._value << 15) & 0xefc60000;\n        this._value ^= (this._value >>> 18);\n        this._value = (((this._value >>> 0) / limit) * (max - min)) + min;\n\n        return this._value;\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        this._state = null;\n        this._iteration = null;\n        this._seed = null;\n        this._value = null;\n    }\n\n    /**\n     * @private\n     */\n    _twist() {\n        const state = this._state;\n\n        // first 624-397=227 words\n        for (let i = 0; i < 227; i++) {\n            var bits = (state[i] & 0x80000000) | (state[i + 1] & 0x7fffffff);\n\n            state[i] = state[i + 397] ^ (bits >>> 1) ^ ((bits & 1) * 0x9908b0df);\n        }\n\n        // remaining words (except the very last one)\n        for (let i = 227; i < 623; i++) {\n            var bits = (state[i] & 0x80000000) | (state[i + 1] & 0x7fffffff);\n\n            state[i] = state[i - 227] ^ (bits >>> 1) ^ ((bits & 1) * 0x9908b0df);\n        }\n\n        // last word is computed pretty much the same way, but i + 1 must wrap around to 0\n        var bits = (state[623] & 0x80000000) | (state[0] & 0x7fffffff);\n\n        state[623] = state[396] ^ (bits >>> 1) ^ ((bits & 1) * 0x9908b0df);\n\n        // word used for next random number\n        this._iteration = 0;\n        this._value = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Random.js","import GamepadControl from './GamepadControl';\nimport { GAMEPAD } from '../const';\n\n/**\n * @inner\n * @type {Object}\n */\nconst invert = { invert: true };\n\n/**\n * @class GamepadMapping\n */\nexport default class GamepadMapping {\n\n    /**\n     * @constructor\n     * @param {Object} [options]\n     * @param {GamepadControl[]} [options.buttons]\n     * @param {GamepadControl[]} [options.axes]\n     */\n    constructor({\n        buttons = [\n            new GamepadControl(0, GAMEPAD.FaceBottom),\n            new GamepadControl(1, GAMEPAD.FaceRight),\n            new GamepadControl(2, GAMEPAD.FaceLeft),\n            new GamepadControl(3, GAMEPAD.FaceTop),\n            new GamepadControl(4, GAMEPAD.ShoulderLeftBottom),\n            new GamepadControl(5, GAMEPAD.ShoulderRightBottom),\n            new GamepadControl(6, GAMEPAD.ShoulderLeftTop),\n            new GamepadControl(7, GAMEPAD.ShoulderRightTop),\n            new GamepadControl(8, GAMEPAD.Select),\n            new GamepadControl(9, GAMEPAD.Start),\n            new GamepadControl(10, GAMEPAD.LeftStick),\n            new GamepadControl(11, GAMEPAD.RightStick),\n            new GamepadControl(12, GAMEPAD.DPadUp),\n            new GamepadControl(13, GAMEPAD.DPadDown),\n            new GamepadControl(14, GAMEPAD.DPadLeft),\n            new GamepadControl(15, GAMEPAD.DPadRight),\n            new GamepadControl(16, GAMEPAD.Home),\n        ],\n        axes = [\n            new GamepadControl(0, GAMEPAD.LeftStickLeft, invert),\n            new GamepadControl(0, GAMEPAD.LeftStickRight),\n            new GamepadControl(1, GAMEPAD.LeftStickUp, invert),\n            new GamepadControl(1, GAMEPAD.LeftStickDown),\n            new GamepadControl(2, GAMEPAD.RightStickLeft, invert),\n            new GamepadControl(2, GAMEPAD.RightStickRight),\n            new GamepadControl(3, GAMEPAD.RightStickUp, invert),\n            new GamepadControl(3, GAMEPAD.RightStickDown),\n        ]\n    } = {}) {\n\n        /**\n         * @private\n         * @member {GamepadControl[]}\n         */\n        this._buttons = buttons;\n\n        /**\n         * @private\n         * @member {GamepadControl[]}\n         */\n        this._axes = axes;\n    }\n\n    /**\n     * @public\n     * @member {GamepadControl[]}\n     */\n    get buttons() {\n        return this._buttons;\n    }\n\n    /**\n     * @public\n     * @member {GamepadControl[]}\n     */\n    get axes() {\n        return this._axes;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {GamepadControl[]} buttons\n     * @param {Boolean} [keepOther=false]\n     * @returns {GamepadMapping}\n     */\n    setButtons(buttons, keepOther = false) {\n        if (!keepOther) {\n            this.clearButtons();\n        }\n\n        for (const button of buttons) {\n            this._buttons.push(button);\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {GamepadMapping}\n     */\n    clearButtons() {\n        for (const button of this._buttons) {\n            button.destroy();\n        }\n\n        this._buttons.length = 0;\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {GamepadControl[]} axes\n     * @param {Boolean} [keepOther=false]\n     * @returns {GamepadMapping}\n     */\n    setAxes(axes, keepOther = false) {\n        if (!keepOther) {\n            this.clearAxes();\n        }\n\n        for (const axis of axes) {\n            this._axes.push(axis);\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {GamepadMapping}\n     */\n    clearAxes() {\n        for (const axis of this._axes) {\n            axis.destroy();\n        }\n\n        this._axes.length = 0;\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {GamepadMapping}\n     */\n    clearControls() {\n        this.clearButtons();\n        this.clearAxes();\n\n        return this;\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        this.clearControls();\n\n        this._buttons = null;\n        this._axes = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/input/GamepadMapping.js","/**\n * @class GamepadControl\n */\nexport default class GamepadControl {\n\n    /**\n     * @constructor\n     * @param {Number} index\n     * @param {Number} channel\n     * @param {Object} [options]\n     * @param {Boolean} [options.invert=false]\n     * @param {Boolean} [options.normalize=false]\n     * @param {Number} [options.threshold=0.2]\n     */\n    constructor(index, channel, {\n        invert = false,\n        normalize = false,\n        threshold = 0.2,\n    } = {}) {\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._index = index;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._channel = channel;\n\n        /**\n         * Transform value range from {-1..1} to {1..-1}.\n         *\n         * @private\n         * @member {Boolean}\n         */\n        this._invert = invert;\n\n        /**\n         * Transform value range from {-1..1} to {0..1}.\n         *\n         * @private\n         * @member {Boolean}\n         */\n        this._normalize = normalize;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._threshold = threshold;\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get index() {\n        return this._index;\n    }\n\n    set index(index) {\n        this._index = index;\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get channel() {\n        return this._channel;\n    }\n\n    set channel(channel) {\n        this._channel = channel;\n    }\n\n    /**\n     * @public\n     * @member {Boolean}\n     */\n    get invert() {\n        return this._invert;\n    }\n\n    set invert(invert) {\n        this._invert = invert;\n    }\n\n    /**\n     * @public\n     * @member {Boolean}\n     */\n    get normalize() {\n        return this._normalize;\n    }\n\n    set normalize(normalize) {\n        this._normalize = normalize;\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get threshold() {\n        return this._threshold;\n    }\n\n    set threshold(threshold) {\n        this._threshold = threshold;\n    }\n\n    /**\n     * @public\n     * @param {Number} value\n     * @returns {Number}\n     */\n    transformValue(value) {\n        let result = value;\n\n        if (this._invert) {\n            result *= -1;\n        }\n\n        if (this._normalize) {\n            result = (result + 1) / 2;\n        }\n\n        return (result > this._threshold) ? result : 0;\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        this._index = null;\n        this._channel = null;\n        this._invert = null;\n        this._normalize = null;\n        this._threshold = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/input/GamepadControl.js","import MediaSourceFactory from './MediaSourceFactory';\nimport Sound from '../../media/Sound';\n\n/**\n * @class SoundFactory\n * @extends MediaSourceFactory\n */\nexport default class SoundFactory extends MediaSourceFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'sound';\n    }\n\n    /**\n     * @override\n     */\n    create(source, { type = 'audio', createMediaElement = false, decodeAudioBuffer = true, mimeType, loadEvent, volume, loop, speed, time, muted } = {}) {\n        return super\n            .create(source, { type, createMediaElement, decodeAudioBuffer, mimeType, loadEvent })\n            .then((audioSource) => new Sound(audioSource, { volume, loop, speed, time, muted }));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/SoundFactory.js","import { audioContext } from '../utils/media';\nimport { clamp } from '../utils/math';\nimport support from '../support';\nimport Media from './Media';\nimport settings from '../settings';\n\n/**\n * @class Sound\n * @extends Media\n */\nexport default class Sound extends Media {\n\n    /**\n     * @constructor\n     * @param {MediaSource} mediaSource\n     * @param {Object} [options]\n     * @property {Number} [options.volume=settings.VOLUME_SOUND]\n     * @property {Boolean} [options.loop=settings.MEDIA_LOOP]\n     * @property {Number} [options.speed=settings.MEDIA_SPEED]\n     * @property {Number} [options.time=settings.MEDIA_TIME]\n     * @property {Boolean} [options.muted=settings.MEDIA_MUTED]\n     */\n    constructor(mediaSource, {\n        volume = settings.VOLUME_SOUND,\n        loop = settings.MEDIA_LOOP,\n        speed = settings.MEDIA_SPEED,\n        time = settings.MEDIA_TIME,\n        muted = settings.MEDIA_MUTED,\n    } = {}) {\n        super(mediaSource, { volume, loop, speed, time, muted });\n\n        const audioBuffer = this.audioBuffer;\n\n        if (!audioBuffer) {\n            throw new Error('AudioBuffer is missing in MediaSource');\n        }\n\n        /**\n         * @private\n         * @member {AudioBuffer}\n         */\n        this._audioBuffer = audioBuffer;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._duration = audioBuffer.duration;\n\n        /**\n         * @private\n         * @member {Boolean}\n         */\n        this._paused = true;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._startTime = 0;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._currentTime = 0;\n\n        /**\n         * @private\n         * @member {?AudioBufferSourceNode}\n         */\n        this._sourceNode = null;\n\n        /**\n         * @private\n         * @member {?GainNode}\n         */\n        this._gainNode = audioContext.createGain();\n        this._gainNode.gain.setTargetAtTime(this.volume, audioContext.currentTime, 10);\n        this._gainNode.connect(audioContext.destination);\n    }\n\n    /**\n     * @override\n     */\n    get volume() {\n        return this._volume;\n    }\n\n    set volume(value) {\n        const volume = clamp(value, 0, 2);\n\n        if (this._volume !== volume) {\n            this._volume = volume;\n\n            if (this._gainNode) {\n                this._gainNode.gain.setTargetAtTime(this.muted ? 0 : volume, audioContext.currentTime, 10);\n            }\n        }\n    }\n\n    /**\n     * @override\n     */\n    set loop(value) {\n        const loop = !!value;\n\n        if (this._loop !== loop) {\n            this._loop = loop;\n\n            if (this._sourceNode) {\n                this._sourceNode.loop = loop;\n            }\n        }\n    }\n\n    /**\n     * @override\n     */\n    set speed(value) {\n        const speed = Math.max(0, value);\n\n        if (this._speed !== speed) {\n            this._speed = speed;\n\n            if (this._sourceNode) {\n                this._sourceNode.playbackRate.value = speed;\n            }\n        }\n    }\n\n    /**\n     * @override\n     */\n    get currentTime() {\n        if (!this._startTime || !audioContext) {\n            return 0;\n        }\n\n        return (this._currentTime + audioContext.currentTime - this._startTime);\n    }\n\n    set currentTime(currentTime) {\n        this.pause();\n        this._currentTime = Math.max(0, currentTime);\n        this.play();\n    }\n\n    /**\n     * @override\n     */\n    set muted(value) {\n        const muted = !!value;\n\n        if (this._muted !== muted) {\n            this._muted = muted;\n\n            if (this._gainNode) {\n                this._gainNode.gain.setTargetAtTime(muted ? 0 : this.volume, audioContext.currentTime, 10);\n            }\n        }\n    }\n\n    /**\n     * @override\n     */\n    get paused() {\n        if (!this._paused || this._loop) {\n            return false;\n        }\n\n        return (this.currentTime >= this.duration);\n    }\n\n    /**\n     * @override\n     */\n    get playing() {\n        return !this._paused;\n    }\n\n    /**\n     * @override\n     */\n    get analyserTarget() {\n        return this._gainNode || null;\n    }\n\n    /**\n     * @override\n     */\n    play(options) {\n        if (this._paused) {\n            this.applyOptions(options);\n\n            this._sourceNode = this.createSourceNode();\n            this._startTime = audioContext.currentTime;\n            this._paused = false;\n\n            this.trigger('start');\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @returns {AudioBufferSourceNode}\n     */\n    createSourceNode() {\n        const sourceNode = audioContext.createBufferSource();\n\n        sourceNode.buffer = this.mediaSource.audioBuffer;\n        sourceNode.loop = this.loop;\n        sourceNode.playbackRate.value = this.speed;\n        sourceNode.connect(this._gainNode);\n        sourceNode.start(0, this._currentTime);\n\n        return sourceNode;\n    }\n\n    /**\n     * @override\n     */\n    pause() {\n        if (!this._paused) {\n            const duration = this.duration,\n                currentTime = this.currentTime;\n\n            if (currentTime <= duration) {\n                this._currentTime = currentTime;\n            } else {\n                this._currentTime = (currentTime - duration) * ((currentTime / duration) | 0);\n            }\n\n            this._sourceNode.stop(0);\n            this._sourceNode.disconnect();\n            this._sourceNode = null;\n            this._paused = true;\n\n            this.trigger('stop');\n        }\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        super.destroy();\n\n        this._sourceNode.disconnect();\n        this._sourceNode = null;\n\n        this._gainNode.disconnect();\n        this._gainNode = null;\n\n        this._audioBuffer = null;\n        this._paused = null;\n        this._startTime = null;\n        this._currentTime = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/media/Sound.js","import ResourceFactory from '../ResourceFactory';\n\n/**\n * @class TextFactory\n * @extends ResourceFactory\n */\nexport default class TextFactory extends ResourceFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'text';\n    }\n\n    /**\n     * @override\n     */\n    process(response) {\n        return response.text();\n    }\n\n    /**\n     * @override\n     */\n    create(source, options) { // eslint-disable-line\n        return Promise.resolve(source);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/TextFactory.js","import ImageFactory from './ImageFactory';\r\nimport Texture from '../../graphics/Texture';\r\n\r\n/**\r\n * @class TextureFactory\r\n * @extends ImageFactory\r\n */\r\nexport default class TextureFactory extends ImageFactory {\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get storageType() {\r\n        return 'image';\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    create(source, { mimeType, scaleMode, wrapMode, premultiplyAlpha, generateMipMap } = {}) {\r\n        return super\r\n            .create(source, { mimeType })\r\n            .then((image) => new Texture(image, { scaleMode, wrapMode, premultiplyAlpha, generateMipMap }));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/TextureFactory.js","import Video from '../../media/Video';\nimport MediaSourceFactory from './MediaSourceFactory';\n\n/**\n * @class VideoFactory\n * @extends MediaSourceFactory\n */\nexport default class VideoFactory extends MediaSourceFactory {\n\n    /**\n     * @override\n     */\n    get storageType() {\n        return 'video';\n    }\n\n    /**\n     * @override\n     */\n    create(source, { type = 'video', createMediaElement = true, decodeAudioBuffer = false, mimeType, loadEvent, volume, loop, speed, time, muted, scaleMode, wrapMode, premultiplyAlpha, generateMipMap } = {}) {\n        return super\n            .create(source, { type, createMediaElement, decodeAudioBuffer, mimeType, loadEvent })\n            .then((audioSource) => new Video(audioSource, { volume, loop, speed, time, muted, scaleMode, wrapMode, premultiplyAlpha, generateMipMap }));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/factories/VideoFactory.js","import { audioContext } from '../utils/media';\r\nimport { clamp } from '../utils/math';\r\nimport Sprite from '../graphics/sprite/Sprite';\r\nimport Texture from '../graphics/Texture';\r\nimport support from '../support';\r\nimport settings from '../settings';\r\n\r\n/**\r\n * @class Video\r\n * @extends Sprite\r\n */\r\nexport default class Video extends Sprite {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {MediaSource} mediaSource\r\n     * @param {Object} [options]\r\n     * @param {Number} [options.volume=settings.VOLUME_VIDEO]\r\n     * @param {Boolean} [options.loop=settings.MEDIA_LOOP]\r\n     * @param {Number} [options.speed=settings.MEDIA_SPEED]\r\n     * @param {Number} [options.time=settings.MEDIA_TIME]\r\n     * @param {Boolean} [options.muted=settings.MEDIA_MUTED]\r\n     * @param {Number} [options.scaleMode]\r\n     * @param {Number} [options.wrapMode]\r\n     * @param {Boolean} [options.premultiplyAlpha]\r\n     * @param {Boolean} [options.generateMipMap]\r\n     */\r\n    constructor(mediaSource, {\r\n        volume = settings.VOLUME_VIDEO,\r\n        loop = settings.MEDIA_LOOP,\r\n        speed = settings.MEDIA_SPEED,\r\n        time = settings.MEDIA_TIME,\r\n        muted = settings.MEDIA_MUTED,\r\n        scaleMode,\r\n        wrapMode,\r\n        premultiplyAlpha,\r\n        generateMipMap,\r\n    } = {}) {\r\n        super(new Texture(mediaSource.mediaElement, { scaleMode, wrapMode, premultiplyAlpha, generateMipMap }));\r\n\r\n        const mediaElement = mediaSource.mediaElement;\r\n\r\n        /**\r\n         * @private\r\n         * @member {MediaSource}\r\n         */\r\n        this._mediaSource = mediaSource;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?HTMLMediaElement}\r\n         */\r\n        this._mediaElement = mediaElement;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._duration = mediaElement ? mediaElement.duration : 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._volume = mediaElement ? mediaElement.volume : 1;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._speed = mediaElement ? mediaElement.playbackRate : 1;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._loop = mediaElement ? mediaElement.loop : false;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._muted = mediaElement ? mediaElement.muted : false;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?GainNode}\r\n         */\r\n        this._gainNode = audioContext.createGain();\r\n        this._gainNode.gain.setTargetAtTime(this.volume, audioContext.currentTime, 10);\r\n        this._gainNode.connect(audioContext.destination);\r\n\r\n        /**\r\n         * @private\r\n         * @member {?MediaElementAudioSourceNode}\r\n         */\r\n        this._sourceNode = audioContext.createMediaElementSource(this._mediaElement);\r\n        this._sourceNode.connect(this._gainNode);\r\n\r\n        this.applyOptions({ volume, loop, speed, time, muted });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {MediaSource}\r\n     */\r\n    get mediaSource() {\r\n        return this._mediaSource;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {?HTMLMediaElement}\r\n     */\r\n    get mediaElement() {\r\n        return this._mediaElement;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get progress() {\r\n        const elapsed = this.currentTime,\r\n            duration = this.duration;\r\n\r\n        return ((elapsed % duration) / duration);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get volume() {\r\n        return this._volume;\r\n    }\r\n\r\n    set volume(value) {\r\n        const volume = clamp(value, 0, 2);\r\n\r\n        if (this._volume !== volume) {\r\n            this._volume = volume;\r\n\r\n            if (this._gainNode) {\r\n                this._gainNode.gain.setTargetAtTime(this.muted ? 0 : volume, audioContext.currentTime, 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get loop() {\r\n        return this._loop;\r\n    }\r\n\r\n    set loop(value) {\r\n        const loop = !!value;\r\n\r\n        if (this._loop !== loop) {\r\n            this._mediaElement.loop = this._loop = loop;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get speed() {\r\n        return this._speed;\r\n    }\r\n\r\n    set speed(value) {\r\n        const speed = Math.max(0, value);\r\n\r\n        if (this._speed !== speed) {\r\n            this._mediaElement.playbackRate = this._speed = speed;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get currentTime() {\r\n        return this._mediaElement.currentTime;\r\n    }\r\n\r\n    set currentTime(currentTime) {\r\n        this._mediaElement.currentTime = Math.max(0, currentTime);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get muted() {\r\n        return this._muted;\r\n    }\r\n\r\n    set muted(value) {\r\n        const muted = !!value;\r\n\r\n        if (this._muted !== muted) {\r\n            this._muted = muted;\r\n\r\n            if (this._gainNode) {\r\n                this._gainNode.gain.setTargetAtTime(muted ? 0 : this.volume, audioContext.currentTime, 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get paused() {\r\n        return this._mediaElement.paused;\r\n    }\r\n\r\n    set paused(paused) {\r\n        if (paused) {\r\n            this.pause();\r\n        } else {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get playing() {\r\n        return !this.paused;\r\n    }\r\n\r\n    set playing(playing) {\r\n        if (playing) {\r\n            this.play();\r\n        } else {\r\n            this.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {?AudioNode}\r\n     */\r\n    get analyserTarget() {\r\n        return this._gainNode || null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object} [options]\r\n     * @property {Boolean} [options.loop]\r\n     * @property {Number} [options.speed]\r\n     * @property {Number} [options.volume]\r\n     * @property {Number} [options.time]\r\n     * @property {Boolean} [options.muted]\r\n     * @returns {Video}\r\n     */\r\n    play(options) {\r\n        if (this.paused) {\r\n            this.applyOptions(options);\r\n            this._mediaElement.play();\r\n            this.trigger('start');\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Video}\r\n     */\r\n    pause() {\r\n        if (this.playing) {\r\n            this._mediaElement.pause();\r\n            this.trigger('stop');\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Video}\r\n     */\r\n    stop() {\r\n        this.pause();\r\n        this.currentTime = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.loop]\r\n     * @param {Number} [options.speed]\r\n     * @param {Number} [options.volume]\r\n     * @param {Number} [options.time]\r\n     * @param {Boolean} [options.muted]\r\n     * @returns {Video}\r\n     */\r\n    toggle(options) {\r\n        return this.paused ? this.play(options) : this.pause();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object} [options]\r\n     * @param {Number} [options.volume]\r\n     * @param {Boolean} [options.loop]\r\n     * @param {Number} [options.speed]\r\n     * @param {Number} [options.time]\r\n     * @param {Boolean} [options.muted]\r\n     * @returns {Video}\r\n     */\r\n    applyOptions({ volume, loop, speed, time, muted } = {}) {\r\n        if (volume !== undefined) {\r\n            this.volume = volume;\r\n        }\r\n\r\n        if (loop !== undefined) {\r\n            this.loop = loop;\r\n        }\r\n\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n\r\n        if (time !== undefined) {\r\n            this.currentTime = time;\r\n        }\r\n\r\n        if (muted !== undefined) {\r\n            this.muted = muted;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    render(renderManager) {\r\n        if (this.visible) {\r\n            this.texture.updateSource();\r\n\r\n            super.render(renderManager);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this.stop();\r\n\r\n        this._sourceNode.disconnect();\r\n        this._sourceNode = null;\r\n\r\n        this._gainNode.disconnect();\r\n        this._gainNode = null;\r\n\r\n        this._mediaSource = null;\r\n        this._mediaElement = null;\r\n        this._duration = null;\r\n        this._volume = null;\r\n        this._speed = null;\r\n        this._loop = null;\r\n        this._muted = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/media/Video.js","import EventEmitter from '../core/EventEmitter';\r\nimport ObservableVector from './ObservableVector';\r\nimport Matrix from './Matrix';\r\nimport { degreesToRadians } from '../utils/math';\r\n\r\n/**\r\n * @class Transformable\r\n * @extends EventEmitter\r\n */\r\nexport default class Transformable extends EventEmitter {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Matrix}\r\n         */\r\n        this._transform = new Matrix();\r\n\r\n        /**\r\n         * @private\r\n         * @member {ObservableVector}\r\n         */\r\n        this._position = new ObservableVector(this._setDirty, this);\r\n\r\n        /**\r\n         * @private\r\n         * @member {ObservableVector}\r\n         */\r\n        this._scale = new ObservableVector(this._setDirty, this, 1, 1);\r\n\r\n        /**\r\n         * @private\r\n         * @member {ObservableVector}\r\n         */\r\n        this._origin = new ObservableVector(this._setDirty, this);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._rotation = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._sin = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._cos = 1;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._updateTransform = true;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {ObservableVector}\r\n     */\r\n    get position() {\r\n        return this._position;\r\n    }\r\n\r\n    set position(position) {\r\n        this._position.copy(position);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get x() {\r\n        return this._position.x;\r\n    }\r\n\r\n    set x(x) {\r\n        this._position.x = x;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get y() {\r\n        return this._position.y;\r\n    }\r\n\r\n    set y(y) {\r\n        this._position.y = y;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {ObservableVector}\r\n     */\r\n    get scale() {\r\n        return this._scale;\r\n    }\r\n\r\n    set scale(scale) {\r\n        this._scale.copy(scale);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {ObservableVector}\r\n     */\r\n    get origin() {\r\n        return this._origin;\r\n    }\r\n\r\n    set origin(origin) {\r\n        this._origin.copy(origin);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n\r\n    set rotation(rotation) {\r\n        this.setRotation(rotation);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Matrix}\r\n     */\r\n    getTransform() {\r\n        if (this._updateTransform) {\r\n            this.updateTransform();\r\n            this._updateTransform = false;\r\n        }\r\n\r\n        return this._transform;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Transformable}\r\n     */\r\n    updateTransform() {\r\n        const transform = this._transform,\r\n            scale = this._scale,\r\n            origin = this._origin,\r\n            position = this._position;\r\n\r\n        transform.a = (scale.x * this._cos);\r\n        transform.b = (scale.y * this._sin);\r\n\r\n        transform.c = (scale.x * -this._sin);\r\n        transform.d = (scale.y * this._cos);\r\n\r\n        transform.x = (origin.x * -transform.a) - (origin.y * transform.b) + position.x;\r\n        transform.y = (origin.x * -transform.c) - (origin.y * transform.d) + position.y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Transformable}\r\n     */\r\n    setPosition(x, y = x) {\r\n        this._position.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Transformable}\r\n     */\r\n    setScale(x, y = x) {\r\n        this._scale.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} [y=x]\r\n     * @returns {Transformable}\r\n     */\r\n    setOrigin(x, y = x)  {\r\n        this._origin.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} degrees\r\n     * @returns {Transformable}\r\n     */\r\n    setRotation(degrees) {\r\n        const trimmed = degrees % 360,\r\n            rotation = trimmed < 0 ? trimmed + 360 : trimmed,\r\n            radians = degreesToRadians(rotation);\r\n\r\n        this._rotation = rotation;\r\n        this._cos = Math.cos(radians);\r\n        this._sin = Math.sin(radians);\r\n\r\n        this._setDirty();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Transformable}\r\n     */\r\n    move(x, y) {\r\n        return this.setPosition(this.x + x, this.y + y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} angle\r\n     * @returns {Transformable}\r\n     */\r\n    rotate(angle) {\r\n        return this.setRotation(this._rotation + angle);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._transform.destroy();\r\n        this._transform = null;\r\n\r\n        this._position.destroy();\r\n        this._position = null;\r\n\r\n        this._scale.destroy();\r\n        this._scale = null;\r\n\r\n        this._origin.destroy();\r\n        this._origin = null;\r\n\r\n        this._rotation = null;\r\n        this._sin = null;\r\n        this._cos = null;\r\n\r\n        this._updateTransform = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setDirty() {\r\n        this._updateTransform = true;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Transformable.js","/**\r\n * @inner\r\n * @type {Object<String, Number>}\r\n */\r\nimport EventEmitter from './EventEmitter';\r\n\r\nconst STATUS = {\r\n    NONE: 0,\r\n    LOADING: 1,\r\n    RUNNING: 2,\r\n};\r\n\r\n/**\r\n * @class SceneManager\r\n * @extends EventEmitter\r\n */\r\nexport default class SceneManager extends EventEmitter {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Application}\r\n         */\r\n        this._app = app;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._status = STATUS.NONE;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Scene}\r\n         */\r\n        this._scene = null;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?Scene}\r\n     */\r\n    get scene() {\r\n        return this._scene;\r\n    }\r\n\r\n    set scene(scene) {\r\n        this.setScene(scene);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Boolean}\r\n     */\r\n    get sceneLoading() {\r\n        return (this._status === STATUS.LOADING);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Boolean}\r\n     */\r\n    get sceneRunning() {\r\n        return (this._status === STATUS.RUNNING);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {?Scene} scene\r\n     * @returns {SceneManager}\r\n     */\r\n    setScene(scene) {\r\n        if (scene !== this._scene) {\r\n            this._unloadScene();\r\n            this._scene = scene;\r\n            this._loadScene();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Time} delta\r\n     * @returns {SceneManager}\r\n     */\r\n    update(delta) {\r\n        if (this.sceneRunning) {\r\n            this._scene.update(delta);\r\n            this._scene.draw(this._app.renderManager);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._unloadScene();\r\n\r\n        this._scene = null;\r\n        this._status = null;\r\n        this._app = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _loadScene() {\r\n        if (this._scene) {\r\n            const loader = this._app.loader;\r\n\r\n            this._status = STATUS.LOADING;\r\n            this._scene.app = this._app;\r\n            this._scene.load(loader);\r\n\r\n            this.trigger('scene:load');\r\n\r\n            loader.load().then(() => {\r\n                this._status = STATUS.RUNNING;\r\n                this._scene.init(loader.resources);\r\n\r\n                this.trigger('scene:init');\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _unloadScene() {\r\n        if (this._scene) {\r\n            if (this.sceneRunning) {\r\n                this._scene.unload();\r\n\r\n                this.trigger('scene:unload');\r\n            }\r\n\r\n            this._scene.destroy();\r\n            this._scene = null;\r\n\r\n            this._status = STATUS.NONE;\r\n\r\n            this.trigger('scene:destroy');\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/SceneManager.js","import { BLEND_MODES } from '../const';\r\nimport support from '../support';\r\nimport settings from '../settings';\r\nimport RenderTarget from './RenderTarget';\r\nimport SpriteRenderer from './sprite/SpriteRenderer';\r\nimport ParticleRenderer from '../particles/ParticleRenderer';\r\nimport Color from '../core/Color';\r\nimport { imageToBase64 } from '../utils/media';\r\nimport Texture from './Texture';\r\n\r\n/**\r\n * @class RenderManager\r\n */\r\nexport default class RenderManager {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        if (!support.webGL2) {\r\n            throw new Error('This browser or hardware does not support WebGL v2!');\r\n        }\r\n\r\n        const { width, height, clearColor } = app.config;\r\n\r\n        /**\r\n         * @private\r\n         * @member {HTMLCanvasElement}\r\n         */\r\n        this._canvas = app.canvas;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGL2RenderingContext}\r\n         */\r\n        this._context = this._createContext();\r\n\r\n        if (!this._context) {\r\n            throw new Error('This browser or hardware does not support WebGL.');\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._contextLost = this._context.isContextLost();\r\n\r\n        if (this._contextLost) {\r\n            this._restoreContext();\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         * @member {Map<String, Renderer>}\r\n         */\r\n        this._renderers = new Map();\r\n\r\n        /**\r\n         * @private\r\n         * @member {?RenderTarget}\r\n         */\r\n        this._renderTarget = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Renderer}\r\n         */\r\n        this._renderer = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Buffer}\r\n         */\r\n        this._buffer = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Shader}\r\n         */\r\n        this._shader = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Number}\r\n         */\r\n        this._blendMode = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._textureUnit = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Texture}\r\n         */\r\n        this._texture = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?VertexArray}\r\n         */\r\n        this._vao = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Color}\r\n         */\r\n        this._clearColor = (clearColor && clearColor.clone()) || new Color();\r\n\r\n        /**\r\n         * @private\r\n         * @member {RenderTarget}\r\n         */\r\n        this._rootRenderTarget = new RenderTarget(width, height, true);\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._cursor = this._canvas.style.cursor;\r\n\r\n        this._setupContext();\r\n        this._addEvents();\r\n\r\n        this.addRenderer('sprite', new SpriteRenderer());\r\n        this.addRenderer('particle', new ParticleRenderer());\r\n\r\n        this.setRenderTarget(this._rootRenderTarget);\r\n        this.setBlendMode(BLEND_MODES.NORMAL);\r\n\r\n        this.resize(width, height);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {WebGL2RenderingContext}\r\n     */\r\n    get context() {\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {?RenderTarget}\r\n     */\r\n    get renderTarget() {\r\n        return this._renderTarget;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {?Texture}\r\n     */\r\n    get texture() {\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?VertexArray}\r\n     */\r\n    get vao() {\r\n        return this._vao;\r\n    }\r\n\r\n    set vao(vao) {\r\n        this.setVAO(vao);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?Renderer}\r\n     */\r\n    get renderer() {\r\n        return this._renderer;\r\n    }\r\n\r\n    set renderer(renderer) {\r\n        this.setRenderer(renderer);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?Buffer}\r\n     */\r\n    get buffer() {\r\n        return this._buffer;\r\n    }\r\n\r\n    set buffer(buffer) {\r\n        this.setBuffer(buffer);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?Shader}\r\n     */\r\n    get shader() {\r\n        return this._shader;\r\n    }\r\n\r\n    set shader(shader) {\r\n        this.setShader(shader);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {BlendMode}\r\n     */\r\n    get blendMode() {\r\n        return this._blendMode;\r\n    }\r\n\r\n    set blendMode(blendMode) {\r\n        this.setBlendMode(blendMode);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get textureUnit() {\r\n        return this._textureUnit;\r\n    }\r\n\r\n    set textureUnit(textureUnit) {\r\n        this.setTextureUnit(textureUnit);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get clearColor() {\r\n        return this._clearColor;\r\n    }\r\n\r\n    set clearColor(color) {\r\n        this.setClearColor(color);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get cursor() {\r\n        return this._cursor;\r\n    }\r\n\r\n    set cursor(cursor) {\r\n        this.setCursor(cursor);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {?RenderTarget|?RenderTexture} renderTarget\r\n     * @returns {RenderManager}\r\n     */\r\n    setRenderTarget(target) {\r\n        const renderTarget = target || this._rootRenderTarget;\r\n\r\n        if (this._renderTarget !== renderTarget) {\r\n            if (this._renderTarget) {\r\n                this._renderTarget.unbindFramebuffer();\r\n                this._renderTarget = null;\r\n            }\r\n\r\n            if (renderTarget) {\r\n                renderTarget.connect(this._context);\r\n                renderTarget.bindFramebuffer();\r\n            }\r\n\r\n            this._renderTarget = renderTarget;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {VertexArray} vao\r\n     * @returns {RenderManager}\r\n     */\r\n    setVAO(vao) {\r\n        const newVao = vao || null;\r\n\r\n        if (this._vao !== newVao) {\r\n            if (newVao) {\r\n                newVao.bind();\r\n            }\r\n\r\n            if (this._vao) {\r\n                this._vao.unbind();\r\n            }\r\n\r\n            this._vao = newVao;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Renderer} renderer\r\n     * @returns {RenderManager}\r\n     */\r\n    setRenderer(renderer) {\r\n        const newRenderer = renderer || null;\r\n\r\n        if (this._renderer !== newRenderer) {\r\n            if (this._renderer) {\r\n                this._renderer.unbind();\r\n                this._renderer = null;\r\n            }\r\n\r\n            if (newRenderer) {\r\n                newRenderer.connect(this);\r\n                newRenderer.bind();\r\n            }\r\n\r\n            this._renderer = newRenderer;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {?Buffer} buffer\r\n     * @returns {RenderManager}\r\n     */\r\n    setBuffer(buffer) {\r\n        const newBuffer = buffer || null;\r\n\r\n        if (this._buffer !== newBuffer) {\r\n            if (this._buffer) {\r\n                this._buffer.unbindBuffers();\r\n                this._buffer = null;\r\n            }\r\n\r\n            if (newBuffer) {\r\n                newBuffer.connect(this._context);\r\n                newBuffer.bindBuffers();\r\n            }\r\n\r\n            this._buffer = newBuffer;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {?Shader} shader\r\n     * @returns {RenderManager}\r\n     */\r\n    setShader(shader) {\r\n        const newShader = shader || null;\r\n\r\n        if (this._shader !== newShader) {\r\n            if (this._shader) {\r\n                this._shader.unbindProgram();\r\n                this._shader = null;\r\n            }\r\n\r\n            if (newShader) {\r\n                newShader.connect(this._context);\r\n                newShader.bindProgram();\r\n            }\r\n\r\n            this._shader = newShader;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {?Texture|?RenderTexture} texture\r\n     * @param {Number} [unit]\r\n     * @returns {RenderManager}\r\n     */\r\n    setTexture(texture, unit) {\r\n        const newTexture = texture || null;\r\n\r\n        if (unit !== undefined) {\r\n            this.setTextureUnit(unit);\r\n        }\r\n\r\n        if (this._texture !== newTexture) {\r\n            if (this._texture) {\r\n                this._texture.unbindTexture();\r\n                this._texture = null;\r\n            }\r\n\r\n            if (newTexture) {\r\n                newTexture.connect(this._context);\r\n                newTexture.bindTexture();\r\n            }\r\n\r\n            this._texture = newTexture;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} blendMode\r\n     * @returns {RenderManager}\r\n     */\r\n    setBlendMode(blendMode) {\r\n        if (blendMode !== this._blendMode) {\r\n            const gl = this._context;\r\n\r\n            this._blendMode = blendMode;\r\n\r\n            switch (blendMode) {\r\n                case BLEND_MODES.ADD:\r\n                    gl.blendFunc(gl.ONE, gl.ONE);\r\n                    break;\r\n                case BLEND_MODES.SUBTRACT:\r\n                    gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\r\n                    break;\r\n                case BLEND_MODES.MULTIPLY:\r\n                    gl.blendFunc(gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA);\r\n                    break;\r\n                case BLEND_MODES.SCREEN:\r\n                    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_COLOR);\r\n                    break;\r\n                default:\r\n                    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} unit\r\n     * @returns {RenderManager}\r\n     */\r\n    setTextureUnit(unit) {\r\n        const textureUnit = unit | 0;\r\n\r\n        if (this._textureUnit !== textureUnit) {\r\n            const gl = this._context;\r\n\r\n            this._textureUnit = textureUnit;\r\n\r\n            gl.activeTexture(gl.TEXTURE0 + textureUnit);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Color} color\r\n     * @returns {RenderManager}\r\n     */\r\n    setClearColor(color) {\r\n        if (!this._clearColor.equals(color)) {\r\n            const gl = this._context;\r\n\r\n            this._clearColor.copy(color);\r\n\r\n            gl.clearColor(color.r / 255, color.g / 255, color.b / 255, color.a);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {String|HTMLImageElement|Texture} cursor\r\n     * @returns {RenderManager}\r\n     */\r\n    setCursor(cursor) {\r\n        if (cursor !== this._cursor) {\r\n            if (cursor instanceof Texture) {\r\n                cursor = cursor.source;\r\n            }\r\n\r\n            if (cursor instanceof HTMLImageElement) {\r\n                cursor = `url(${imageToBase64(cursor)})`;\r\n            }\r\n\r\n            this._canvas.style.cursor = this._cursor = cursor;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {String} name\r\n     * @param {SpriteRenderer|ParticleRenderer|Renderer} renderer\r\n     * @returns {RenderManager}\r\n     */\r\n    addRenderer(name, renderer) {\r\n        if (this._renderers.has(name)) {\r\n            throw new Error(`Renderer \"${name}\" was already added.`);\r\n        }\r\n\r\n        this._renderers.set(name, renderer);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {String} name\r\n     * @returns {Renderer}\r\n     */\r\n    getRenderer(name) {\r\n        if (!this._renderers.has(name)) {\r\n            throw new Error(`Could not find renderer \"${name}\".`);\r\n        }\r\n\r\n        return this._renderers.get(name);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Color} [color]\r\n     * @returns {RenderManager}\r\n     */\r\n    clear(color) {\r\n        const gl = this._context;\r\n\r\n        if (color) {\r\n            this.setClearColor(color);\r\n        }\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {RenderManager}\r\n     */\r\n    resize(width, height) {\r\n        this._canvas.width = width;\r\n        this._canvas.height = height;\r\n\r\n        this._rootRenderTarget.resize(width, height);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Drawable|*} drawable\r\n     * @returns {RenderManager}\r\n     */\r\n    draw(drawable) {\r\n        if (!this._contextLost) {\r\n            drawable.render(this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderManager}\r\n     */\r\n    display() {\r\n        if (this._renderer && !this._contextLost) {\r\n            this._renderer.flush();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} count\r\n     * @returns {RenderManager}\r\n     */\r\n    drawElements(count) {\r\n        const gl = this._context;\r\n\r\n        gl.drawElements(gl.TRIANGLES, count, gl.UNSIGNED_SHORT, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Drawable} drawable\r\n     * @param {View} [view=this._renderTarget.view]\r\n     * @returns {Boolean}\r\n     */\r\n    insideViewport(drawable, view = this._renderTarget.view) {\r\n        return view.getBounds().intersets(drawable.getBounds());\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._removeEvents();\r\n\r\n        this.setRenderTarget(null);\r\n        this.setRenderer(null);\r\n        this.setVAO(null);\r\n        this.setShader(null);\r\n        this.setBuffer(null);\r\n        this.setTexture(null);\r\n\r\n        for (const renderer of this._renderers.values()) {\r\n            renderer.destroy();\r\n        }\r\n\r\n        this._renderers.clear();\r\n        this._renderers = null;\r\n\r\n        this._clearColor.destroy();\r\n        this._clearColor = null;\r\n\r\n        this._rootRenderTarget.destroy();\r\n        this._rootRenderTarget = null;\r\n\r\n        this._vao = null;\r\n        this._canvas = null;\r\n        this._context = null;\r\n        this._contextLost = null;\r\n        this._renderTarget = null;\r\n        this._renderer = null;\r\n        this._buffer = null;\r\n        this._shader = null;\r\n        this._blendMode = null;\r\n        this._texture = null;\r\n        this._textureUnit = null;\r\n        this._cursor = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @returns {?WebGL2RenderingContext|?WebGL2RenderingContext}\r\n     */\r\n    _createContext(options = settings.CONTEXT_OPTIONS) {\r\n        try {\r\n            return this._canvas.getContext('webgl2', options) || this._canvas.getContext('webgl', options);\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _restoreContext() {\r\n        const gl = this._context;\r\n\r\n        if (gl.getExtension('WEBGL_lose_context')) {\r\n            gl.getExtension('WEBGL_lose_context').restoreContext();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setupContext() {\r\n        const gl = this._context,\r\n            { r, g, b, a } = this._clearColor;\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.CULL_FACE);\r\n\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n        gl.clearColor(r / 255, g / 255, b / 255, a);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _addEvents() {\r\n        this._onContextLostHandler = this._onContextLost.bind(this);\r\n        this._onContextRestoredHandler = this._onContextRestored.bind(this);\r\n\r\n        this._canvas.addEventListener('webglcontextlost', this._onContextLostHandler, false);\r\n        this._canvas.addEventListener('webglcontextrestored', this._onContextRestoredHandler, false);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _removeEvents() {\r\n        this._canvas.removeEventListener('webglcontextlost', this._onContextLostHandler, false);\r\n        this._canvas.removeEventListener('webglcontextrestored', this._onContextRestoredHandler, false);\r\n\r\n        this._onContextLostHandler = null;\r\n        this._onContextRestoredHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _onContextLost() {\r\n        this._contextLost = true;\r\n\r\n        this._restoreContext();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _onContextRestored() {\r\n        this._contextLost = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/RenderManager.js","import ObservableVector from '../math/ObservableVector';\r\nimport Rectangle from '../math/Rectangle';\r\nimport Matrix from '../math/Matrix';\r\nimport { degreesToRadians } from '../utils/math';\r\nimport ObservableSize from '../math/ObservableSize';\r\nimport Bounds from '../core/Bounds';\r\n\r\n/**\r\n * @class View\r\n */\r\nexport default class View {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} centerX\r\n     * @param {Number} centerY\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     */\r\n    constructor(centerX, centerY, width, height) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {ObservableVector}\r\n         */\r\n        this._center = new ObservableVector(this._setDirty, this, centerX, centerY);\r\n\r\n        /**\r\n         * @private\r\n         * @member {ObservableSize}\r\n         */\r\n        this._size = new ObservableSize(this._setDirty, this, width, height);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._rotation = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._sin = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._cos = 1;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Rectangle}\r\n         */\r\n        this._viewport = new Rectangle(0, 0, 1, 1);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Matrix}\r\n         */\r\n        this._transform = new Matrix();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Matrix}\r\n         */\r\n        this._inverseTransform = new Matrix();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Bounds}\r\n         */\r\n        this._bounds = new Bounds();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._updateTransform = true;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._updateInverseTransform = true;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._updateBounds = true;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._updateId = 0;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {ObservableVector}\r\n     */\r\n    get center() {\r\n        return this._center;\r\n    }\r\n\r\n    set center(center) {\r\n        this._center.copy(center);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {ObservableSize}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size) {\r\n        this._size.copy(size);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return this._size.width;\r\n    }\r\n\r\n    set width(width) {\r\n        this._size.width = width;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return this._size.height;\r\n    }\r\n\r\n    set height(height) {\r\n        this._size.height = height;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n\r\n    set rotation(rotation) {\r\n        this.setRotation(rotation);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Rectangle}\r\n     */\r\n    get viewport() {\r\n        return this._viewport;\r\n    }\r\n\r\n    set viewport(viewport) {\r\n        this._viewport.copy(viewport);\r\n        this._setDirty();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get updateId() {\r\n        return this._updateId;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {View}\r\n     */\r\n    setCenter(x, y) {\r\n        this._center.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {View}\r\n     */\r\n    resize(width, height) {\r\n        this._size.set(width, height);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} degrees\r\n     * @returns {View}\r\n     */\r\n    setRotation(degrees) {\r\n        const trimmed = degrees % 360,\r\n            rotation = trimmed < 0 ? trimmed + 360 : trimmed,\r\n            radians = degreesToRadians(rotation);\r\n\r\n        this._rotation = (rotation < 0) ? rotation + 360 : rotation;\r\n        this._cos = Math.cos(radians);\r\n        this._sin = Math.sin(radians);\r\n\r\n        this._setDirty();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {View}\r\n     */\r\n    move(x, y) {\r\n        this.setCenter(this._center.x + x, this._center.y + y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} factor\r\n     * @returns {View}\r\n     */\r\n    zoom(factor) {\r\n        this.resize(this._size.width * factor, this._size.height * factor);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} degrees\r\n     * @returns {View}\r\n     */\r\n    rotate(degrees) {\r\n        this.setRotation(this._rotation + degrees);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} centerX\r\n     * @param {Number} centerY\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {View}\r\n     */\r\n    reset(centerX, centerY, width, height) {\r\n        this._size.set(width, height);\r\n        this._center.set(centerX, centerY);\r\n        this._viewport.set(0, 0, 1, 1);\r\n        this._rotation = 0;\r\n        this._sin = 0;\r\n        this._cos = 1;\r\n\r\n        this._setDirty();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Matrix}\r\n     */\r\n    getTransform() {\r\n        if (this._updateTransform) {\r\n            this.updateTransform();\r\n            this._updateTransform = false;\r\n        }\r\n\r\n        return this._transform;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {View}\r\n     */\r\n    updateTransform() {\r\n        const transform = this._transform,\r\n            centerX = this._center.x,\r\n            centerY = this._center.y,\r\n            sin = this._sin,\r\n            cos = this._cos,\r\n            a =  2 / this._size.width,\r\n            b = -2 / this._size.height,\r\n            c = -a * centerX,\r\n            d = -b * centerY,\r\n            x = (-centerX * cos) - (centerY * sin) + centerX,\r\n            y = (centerX * sin) - (centerY * cos) + centerY;\r\n\r\n        transform.a = a * cos;\r\n        transform.b = a * sin;\r\n        transform.x = (a * x) + c;\r\n\r\n        transform.c = -b * sin;\r\n        transform.d =  b * cos;\r\n        transform.y = (b * y) + d;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Matrix}\r\n     */\r\n    getInverseTransform() {\r\n        if (this._updateInverseTransform) {\r\n            this.getTransform()\r\n                .getInverse(this._inverseTransform);\r\n\r\n            this._updateInverseTransform = false;\r\n        }\r\n\r\n        return this._inverseTransform;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Rectangle}\r\n     */\r\n    getBounds() {\r\n        if (this._updateBounds) {\r\n            this.updateBounds();\r\n            this._updateBounds = false;\r\n        }\r\n\r\n        return this._bounds.getRect();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {View}\r\n     */\r\n    updateBounds() {\r\n        const offsetX = this.width / 2,\r\n            offsetY = this.height / 2;\r\n\r\n        this._bounds.reset()\r\n            .addCoords(this._center.x - offsetX, this._center.y - offsetY)\r\n            .addCoords(this._center.x + offsetX, this._center.y + offsetY);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {View} view\r\n     * @returns {View}\r\n     */\r\n    copy(view) {\r\n        this.center = view.center;\r\n        this.size = view.size;\r\n        this.rotation = view.rotation;\r\n        this.viewport = view.viewport;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._center.destroy();\r\n        this._center = null;\r\n\r\n        this._size.destroy();\r\n        this._size = null;\r\n\r\n        this._viewport.destroy();\r\n        this._viewport = null;\r\n\r\n        this._transform.destroy();\r\n        this._transform = null;\r\n\r\n        this._inverseTransform.destroy();\r\n        this._inverseTransform = null;\r\n\r\n        this._bounds.destroy();\r\n        this._bounds = null;\r\n\r\n        this._rotation = null;\r\n        this._cos = null;\r\n        this._sin = null;\r\n\r\n        this._updateTransform = null;\r\n        this._updateInverseTransform = null;\r\n        this._updateBounds = null;\r\n        this._updateId = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setDirty() {\r\n        this._updateTransform = true;\r\n        this._updateInverseTransform = true;\r\n        this._updateBounds = true;\r\n        this._updateId++;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/View.js","import Size from './Size';\r\n\r\n/**\r\n * @class ObservableSize\r\n * @extends Size\r\n */\r\nexport default class ObservableSize extends Size {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Function} callback\r\n     * @param {*} scope\r\n     * @param {Number} [width=0]\r\n     * @param {Number} [height=0]\r\n     */\r\n    constructor(callback, scope, width = 0, height = 0) {\r\n        super(width, height);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Function}\r\n         */\r\n        this._callback = callback;\r\n\r\n        /**\r\n         * @private\r\n         * @member {*}\r\n         */\r\n        this._scope = scope || this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width) {\r\n        if (this._width !== width) {\r\n            this._width = width;\r\n            this._callback.call(this._scope);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height) {\r\n        if (this._height !== height) {\r\n            this._height = height;\r\n            this._callback.call(this._scope);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set(width = this._width, height = this._height) {\r\n        if (this._width !== width || this._height !== height) {\r\n            this._width = width;\r\n            this._height = height;\r\n            this._callback.call(this._scope);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    add(x, y = x) {\r\n        return this.set(this._width + x, this._height + y);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    subtract(x, y = x) {\r\n        return this.set(this._width - x, this._height - y);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    scale(x, y = x) {\r\n        return this.set(this._width * x, this._height * y);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    divide(x, y = x) {\r\n        return this.set(this._width / x, this._height / y);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    copy(size) {\r\n        return this.set(size.width, size.height);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    clone() {\r\n        return new ObservableSize(this._callback, this._scope, this._width, this._height);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._callback = null;\r\n        this._scope = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/ObservableSize.js","import Renderer from '../Renderer';\r\nimport SpriteShader from './SpriteShader';\r\nimport settings from '../../settings';\r\nimport VertexArray from '../VertexArray';\r\nimport Buffer from '../Buffer';\r\n\r\n/**\r\n * @class SpriteRenderer\r\n * @extends Renderer\r\n */\r\nexport default class SpriteRenderer extends Renderer {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._batchSize = settings.BATCH_SIZE_SPRITES;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._batchIndex = 0;\r\n\r\n        /**\r\n         * 4 x 4 Properties:\r\n         * 2 = position (x, y) +\r\n         * 1 = texCoord (packed uv) +\r\n         * 1 = color    (ARGB int)\r\n         *\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._attributeCount = 16;\r\n\r\n        /**\r\n         * @private\r\n         * @member {ArrayBuffer}\r\n         */\r\n        this._vertexData = new ArrayBuffer(this._batchSize * this._attributeCount * 4);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Uint16Array}\r\n         */\r\n        this._indexData = new Uint16Array(this._batchSize * 6);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Float32Array}\r\n         */\r\n        this._float32View = new Float32Array(this._vertexData);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Uint32Array}\r\n         */\r\n        this._uint32View = new Uint32Array(this._vertexData);\r\n\r\n        /**\r\n         * @private\r\n         * @member {SpriteShader}\r\n         */\r\n        this._shader = new SpriteShader();\r\n\r\n        /**\r\n         * @private\r\n         * @member {?RenderManager}\r\n         */\r\n        this._renderManager = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGL2RenderingContext}\r\n         */\r\n        this._context = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Texture}\r\n         */\r\n        this._currentTexture = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Number}\r\n         */\r\n        this._currentBlendMode = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?View}\r\n         */\r\n        this._currentView = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._viewId = -1;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?VertexArray}\r\n         */\r\n        this._vao = null;\r\n\r\n        this._fillIndexData(this._indexData);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    connect(renderManager) {\r\n        if (!this._context) {\r\n            const gl = renderManager.context;\r\n\r\n            this._context = gl;\r\n            this._renderManager = renderManager;\r\n\r\n            this._shader.connect(gl);\r\n            this._indexBuffer = Buffer.createIndexBuffer(gl, this._indexData, gl.STATIC_DRAW);\r\n            this._vertexBuffer = Buffer.createVertexBuffer(gl, this._vertexData, gl.DYNAMIC_DRAW);\r\n\r\n            this._vao = new VertexArray(gl)\r\n                .addIndex(this._indexBuffer)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_position'], gl.FLOAT, false, this._attributeCount, 0)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_texcoord'], gl.UNSIGNED_SHORT, true, this._attributeCount, 8)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_color'], gl.UNSIGNED_BYTE, true, this._attributeCount, 12);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    disconnect() {\r\n        if (this._context) {\r\n            this.unbind();\r\n\r\n            this._shader.disconnect();\r\n\r\n            this._vao.destroy();\r\n            this._vao = null;\r\n\r\n            this._renderManager = null;\r\n            this._context = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    bind() {\r\n        if (!this._context) {\r\n            throw new Error('Renderer has to be connected first!')\r\n        }\r\n\r\n        this._renderManager.setVAO(this._vao);\r\n        this._renderManager.setShader(this._shader);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    unbind() {\r\n        if (this._context) {\r\n            this.flush();\r\n\r\n            this._renderManager.setShader(null);\r\n            this._renderManager.setVAO(null);\r\n\r\n            this._currentTexture = null;\r\n            this._currentBlendMode = null;\r\n            this._currentView = null;\r\n            this._viewId = -1;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Sprite} sprite\r\n     */\r\n    render(sprite) {\r\n        const { texture, blendMode, tint, vertexData, texCoordData } = sprite,\r\n            batchFull = (this._batchIndex >= this._batchSize),\r\n            textureChanged = (texture !== this._currentTexture),\r\n            blendModeChanged = (blendMode !== this._currentBlendMode),\r\n            flush = (batchFull || textureChanged || blendModeChanged),\r\n            index = flush ? 0 : (this._batchIndex * this._attributeCount),\r\n            float32View = this._float32View,\r\n            uint32View = this._uint32View;\r\n\r\n        if (flush) {\r\n            this.flush();\r\n\r\n            if (textureChanged) {\r\n                this._currentTexture = texture;\r\n                this._renderManager.setTexture(texture);\r\n            }\r\n\r\n            if (blendModeChanged) {\r\n                this._currentBlendMode = blendMode;\r\n                this._renderManager.setBlendMode(blendMode);\r\n            }\r\n        }\r\n\r\n        texture.update();\r\n\r\n        // X / Y\r\n        float32View[index + 0] = vertexData[0];\r\n        float32View[index + 1] = vertexData[1];\r\n\r\n        // X / Y\r\n        float32View[index + 4] = vertexData[2];\r\n        float32View[index + 5] = vertexData[3];\r\n\r\n        // X / Y\r\n        float32View[index + 8] = vertexData[4];\r\n        float32View[index + 9] = vertexData[5];\r\n\r\n        // X / Y\r\n        float32View[index + 12] = vertexData[6];\r\n        float32View[index + 13] = vertexData[7];\r\n\r\n        // U / V\r\n        uint32View[index + 2] = texCoordData[0];\r\n        uint32View[index + 6] = texCoordData[1];\r\n\r\n        // U / V\r\n        uint32View[index + 10] = texCoordData[2];\r\n        uint32View[index + 14] = texCoordData[3];\r\n\r\n        // Tint\r\n        uint32View[index + 3]\r\n            = uint32View[index + 7]\r\n            = uint32View[index + 11]\r\n            = uint32View[index + 15]\r\n            = tint.getRGBA();\r\n\r\n        this._batchIndex++;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    flush() {\r\n        if (this._batchIndex > 0) {\r\n            const gl = this._context,\r\n                view = this._renderManager.renderTarget.view,\r\n                viewId = view.updateId;\r\n\r\n            if (this._currentView !== view || this._viewId !== viewId) {\r\n                this._currentView = view;\r\n                this._viewId = viewId;\r\n                this._shader.getUniform('u_projection')\r\n                    .setValue(view.getTransform().toArray(false));\r\n            }\r\n\r\n            this._renderManager.setVAO(this._vao);\r\n            this._vertexBuffer.upload(this._float32View.subarray(0, this._batchIndex * this._attributeCount));\r\n            this._vao.draw(gl.TRIANGLES, this._batchIndex * 6, 0);\r\n            this._batchIndex = 0;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        this.disconnect();\r\n\r\n        this._shader.destroy();\r\n        this._shader = null;\r\n\r\n        this._uint32View = null;\r\n        this._float32View = null;\r\n        this._viewId = null;\r\n        this._batchSize = null;\r\n        this._batchIndex = null;\r\n        this._attributeCount = null;\r\n        this._currentTexture = null;\r\n        this._currentBlendMode = null;\r\n        this._currentView = null;\r\n        this._renderManager = null;\r\n        this._context = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {Uint16Array} data\r\n     * @returns {SpriteRenderer}\r\n     */\r\n    _fillIndexData(data) {\r\n        const len = data.length;\r\n\r\n        for (let i = 0, offset = 0; i < len; i += 6, offset += 4) {\r\n            data[i + 0] = offset + 0;\r\n            data[i + 1] = offset + 1;\r\n            data[i + 2] = offset + 2;\r\n            data[i + 3] = offset + 0;\r\n            data[i + 4] = offset + 3;\r\n            data[i + 5] = offset + 2;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/sprite/SpriteRenderer.js","import Shader from '../shader/Shader';\r\nimport { readFileSync } from 'fs';\r\nimport { join } from 'path';\r\n\r\n/**\r\n * @class SpriteShader\r\n * @extends Shader\r\n */\r\nexport default class SpriteShader extends Shader {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super(\r\n            readFileSync(join(__dirname, './glsl/sprite.vert'), 'utf8'),\r\n            readFileSync(join(__dirname, './glsl/sprite.frag'), 'utf8')\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/sprite/SpriteShader.js","import { ATTRIBUTE_TYPE } from '../../const';\r\n\r\n/**\r\n * @class ShaderAttribute\r\n */\r\nexport default class ShaderAttribute {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} options\r\n     * @param {String} options.name\r\n     * @param {Number} options.type\r\n     * @param {Number} options.size\r\n     * @param {Boolean} [options.normalized=false]\r\n     * @param {Boolean} [options.enabled=true]\r\n     * @param {Number} [options.location=null]\r\n     */\r\n    constructor({ name, type, size, normalized = false, enabled = true, location = null } = {}) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._location = location;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._name = name;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._type = type;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._size = size;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._normalized = normalized;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._enabled = enabled;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get location() {\r\n        return this._location;\r\n    }\r\n\r\n    set location(location) {\r\n        this._location = location;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    set type(type) {\r\n        this._type = type;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size) {\r\n        this._size = size;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get normalized() {\r\n        return this._normalized;\r\n    }\r\n\r\n    set normalized(normalized) {\r\n        this._normalized = normalized;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(enabled) {\r\n        this._enabled = enabled;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get byteSize() {\r\n        return this.bytesType * this._size;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get bytesType() {\r\n        switch (this._type) {\r\n            case ATTRIBUTE_TYPE.BYTE:\r\n            case ATTRIBUTE_TYPE.UNSIGNED_BYTE:\r\n                return 1;\r\n            case ATTRIBUTE_TYPE.SHORT:\r\n            case ATTRIBUTE_TYPE.UNSIGNED_SHORT:\r\n                return 2;\r\n            case ATTRIBUTE_TYPE.INT:\r\n            case ATTRIBUTE_TYPE.UNSIGNED_INT:\r\n            case ATTRIBUTE_TYPE.FLOAT:\r\n                return 4;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._location = null;\r\n        this._name = null;\r\n        this._type = null;\r\n        this._size = null;\r\n        this._normalized = null;\r\n        this._enabled = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shader/ShaderAttribute.js","import { UNIFORM_TYPE } from '../../const';\r\n\r\n/**\r\n * @class ShaderUniform\r\n */\r\nexport default class ShaderUniform {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} options\r\n     * @param {WebGL2RenderingContext} options.context\r\n     * @param {Number} options.index\r\n     * @param {String} options.name\r\n     * @param {Number} options.type\r\n     * @param {Number} options.size\r\n     * @param {WebGLUniformLocation} options.location\r\n     * @param {Number} options.block\r\n     * @param {Number} options.offset\r\n     * @param {Number|Number[]|ArrayBufferView} [options.value]\r\n     */\r\n    constructor({ context, index, name, type, size, location, block, offset, value = this._getDefaultValue(type, size) } = {}) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {WebGL2RenderingContext}\r\n         */\r\n        this._context = context;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._index = index;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._name = name;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._type = type;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._size = size;\r\n\r\n        /**\r\n         * @private\r\n         * @member {WebGLUniformLocation}\r\n         */\r\n        this._location = location;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._block = block;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._offset = offset;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number|Number[]|Boolean|Boolean[]|ArrayBufferView}\r\n         */\r\n        this._value = value;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get index() {\r\n        return this._index;\r\n    }\r\n\r\n    set index(index) {\r\n        this._index = index;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    set type(type) {\r\n        this._type = type;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size) {\r\n        this._size = size;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {WebGLUniformLocation}\r\n     */\r\n    get location() {\r\n        return this._location;\r\n    }\r\n\r\n    set location(location) {\r\n        this._location = location;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get block() {\r\n        return this._block;\r\n    }\r\n\r\n    set block(block) {\r\n        this._block = block;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get offset() {\r\n        return this._offset;\r\n    }\r\n\r\n    set offset(offset) {\r\n        this._offset = offset;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number|Number[]|Boolean|Boolean[]|ArrayBufferView}\r\n     */\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value) {\r\n        this.setValue(value);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number|Number[]|Boolean|Boolean[]|ArrayBufferView} value\r\n     * @returns {ShaderUniform}\r\n     */\r\n    setValue(value) {\r\n        if (value === undefined) {\r\n            throw new Error(`Uniform value cannot be undefined!`);\r\n        }\r\n\r\n        const gl = this._context;\r\n\r\n        this._value = value;\r\n\r\n        switch (this._type) {\r\n            case UNIFORM_TYPE.FLOAT: gl.uniform1f(this._location, value); break;\r\n            case UNIFORM_TYPE.FLOAT_VEC2: gl.uniform2fv(this._location, value); break;\r\n            case UNIFORM_TYPE.FLOAT_VEC3: gl.uniform3fv(this._location, value); break;\r\n            case UNIFORM_TYPE.FLOAT_VEC4: gl.uniform4fv(this._location, value); break;\r\n\r\n            case UNIFORM_TYPE.INT: gl.uniform1i(this._location, value); break;\r\n            case UNIFORM_TYPE.INT_VEC2: gl.uniform2iv(this._location, value); break;\r\n            case UNIFORM_TYPE.INT_VEC3: gl.uniform3iv(this._location, value); break;\r\n            case UNIFORM_TYPE.INT_VEC4: gl.uniform4iv(this._location, value); break;\r\n\r\n            case UNIFORM_TYPE.BOOL: gl.uniform1i(this._location, value); break;\r\n            case UNIFORM_TYPE.BOOL_VEC2: gl.uniform2iv(this._location, value); break;\r\n            case UNIFORM_TYPE.BOOL_VEC3: gl.uniform3iv(this._location, value); break;\r\n            case UNIFORM_TYPE.BOOL_VEC4: gl.uniform4iv(this._location, value); break;\r\n\r\n            case UNIFORM_TYPE.FLOAT_MAT2: gl.uniformMatrix2fv(this._location, false, value); break;\r\n            case UNIFORM_TYPE.FLOAT_MAT3: gl.uniformMatrix3fv(this._location, false, value); break;\r\n            case UNIFORM_TYPE.FLOAT_MAT4: gl.uniformMatrix4fv(this._location, false, value); break;\r\n\r\n            case UNIFORM_TYPE.SAMPLER_2D: gl.uniform1i(this._location, value); break;\r\n\r\n            default:\r\n                throw new Error(`Unknown uniform type \"${this._type}\".`);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._index = null;\r\n        this._name = null;\r\n        this._type = null;\r\n        this._size = null;\r\n        this._location = null;\r\n        this._block = null;\r\n        this._offset = null;\r\n        this._value = null;\r\n        this._context = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {Number} type\r\n     * @param {Number} size\r\n     * @returns {Number|Number[]|Boolean|Boolean[]|ArrayBufferView}\r\n     */\r\n    _getDefaultValue(type, size) {\r\n        switch (type) {\r\n            case UNIFORM_TYPE.FLOAT: return 0;\r\n            case UNIFORM_TYPE.FLOAT_VEC2: return new Float32Array(2 * size);\r\n            case UNIFORM_TYPE.FLOAT_VEC3: return new Float32Array(3 * size);\r\n            case UNIFORM_TYPE.FLOAT_VEC4: return new Float32Array(4 * size);\r\n\r\n            case UNIFORM_TYPE.INT: return 0;\r\n            case UNIFORM_TYPE.INT_VEC2: return new Int32Array(2 * size);\r\n            case UNIFORM_TYPE.INT_VEC3: return new Int32Array(3 * size);\r\n            case UNIFORM_TYPE.INT_VEC4: return new Int32Array(4 * size);\r\n\r\n            case UNIFORM_TYPE.BOOL: return false;\r\n            case UNIFORM_TYPE.BOOL_VEC2: return [ false, false ];\r\n            case UNIFORM_TYPE.BOOL_VEC3: return [ false, false, false ];\r\n            case UNIFORM_TYPE.BOOL_VEC4: return [ false, false, false, false ];\r\n\r\n            case UNIFORM_TYPE.FLOAT_MAT2:\r\n                return new Float32Array([\r\n                    1, 0,\r\n                    0, 1\r\n                ]);\r\n\r\n            case UNIFORM_TYPE.FLOAT_MAT3:\r\n                return new Float32Array([\r\n                    1, 0, 0,\r\n                    0, 1, 0,\r\n                    0, 0, 1\r\n                ]);\r\n\r\n            case UNIFORM_TYPE.FLOAT_MAT4:\r\n                return new Float32Array([\r\n                    1, 0, 0, 0,\r\n                    0, 1, 0, 0,\r\n                    0, 0, 1, 0,\r\n                    0, 0, 0, 1\r\n                ]);\r\n\r\n            case UNIFORM_TYPE.SAMPLER_2D: return 0;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shader/ShaderUniform.js","\r\n\r\n/**\r\n * @class ShaderBlock\r\n */\r\nexport default class ShaderBlock {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} options\r\n     * @param {WebGL2RenderingContext} options.context\r\n     * @param {Number} options.index\r\n     * @param {String} options.name\r\n     * @param {Number} options.size\r\n     * @param {ArrayBuffer} [options.value=new ArrayBuffer(size)]\r\n     * @param {Boolean} [options.usedByVertexShader=false]\r\n     * @param {Boolean} [options.usedByFragmentShader=false]\r\n     */\r\n    constructor({ context, index, name, size, usedByVertexShader = false, usedByFragmentShader = false } = {}) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {WebGL2RenderingContext}\r\n         */\r\n        this._context = context;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._index = index;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._name = name;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._size = size;\r\n\r\n        /**\r\n         * @private\r\n         * @member {ArrayBuffer}\r\n         */\r\n        this._data = new ArrayBuffer(size);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Object<String, ShaderUniform>}\r\n         */\r\n        this._uniforms = {};\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._usedByVertexShader = usedByVertexShader;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._usedByFragmentShader = usedByFragmentShader;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get index() {\r\n        return this._index;\r\n    }\r\n\r\n    set index(index) {\r\n        this._index = index;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size) {\r\n        this._size = size;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get usedByVertexShader() {\r\n        return this._usedByVertexShader;\r\n    }\r\n\r\n    set usedByVertexShader(usedByVertexShader) {\r\n        this._usedByVertexShader = usedByVertexShader;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get usedByFragmentShader() {\r\n        return this._usedByFragmentShader;\r\n    }\r\n\r\n    set usedByFragmentShader(usedByFragmentShader) {\r\n        this._usedByFragmentShader = usedByFragmentShader;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {ArrayBuffer}\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    set data(data) {\r\n        this._data = data;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Object<String, ShaderUniform>}\r\n     */\r\n    get uniforms() {\r\n        return this._uniforms;\r\n    }\r\n\r\n    set uniforms(uniforms) {\r\n        this._uniforms = uniforms;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {ShaderUniform} uniform\r\n     */\r\n    addUniform(uniform) {\r\n        const prefix = `${this._name}.`.replace(/\\[\\d+\\]\\.$/, '.');\r\n\r\n        if (uniform.name.startsWith(prefix)) {\r\n            uniform.name = uniform.name.substr(prefix.length);\r\n        }\r\n\r\n        this._uniforms[uniform.name] = uniform;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {String} name\r\n     * @returns {ShaderUniform}\r\n     */\r\n    getUniform(name) {\r\n        if (!(name in this._uniforms)) {\r\n            throw new Error(`Uniform \"${name}\" is not available in uniform block \"${this._name}\".`);\r\n        }\r\n\r\n        return this._uniforms[name];\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {*} value\r\n     * @returns {ShaderBlock}\r\n     */\r\n    setValue(value) {\r\n        // todo\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        for (const name of Object.keys(this._uniforms)) {\r\n            this._uniforms[name].destroy();\r\n            delete this._uniforms[name];\r\n        }\r\n\r\n        this._index = null;\r\n        this._name = null;\r\n        this._size = null;\r\n        this._data = null;\r\n        this._uniforms = null;\r\n        this._usedByVertexShader = null;\r\n        this._usedByFragmentShader = null;\r\n        this._context = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shader/ShaderBlock.js","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/node-libs-browser/node_modules/path-browserify/index.js\n// module id = 64\n// module chunks = 0","/**\r\n * @class Buffer\r\n */\r\nimport { EMPTY_ARRAY_BUFFER } from '../const';\r\n\r\nexport default class Buffer {\r\n\r\n    /**\r\n     * Uploads the buffer to the GPU\r\n     * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data to upload\r\n     * @param offset {Number} if only a subset of the data should be uploaded, this is the amount of data to subtract\r\n     * @param dontBind {Boolean} whether to bind the buffer before uploading it\r\n     */\r\n    constructor(gl, type, data, drawType) {\r\n\r\n        /**\r\n         * The current WebGL rendering context\r\n         *\r\n         * @member {WebGL2RenderingContext}\r\n         */\r\n        this._context = gl;\r\n\r\n        /**\r\n         * The WebGL buffer, created upon instantiation\r\n         *\r\n         * @member {WebGLBuffer}\r\n         */\r\n        this._buffer = gl.createBuffer();\r\n\r\n        /**\r\n         * The type of the buffer\r\n         *\r\n         * @member {Number}\r\n         */\r\n        this._type = type || gl.ARRAY_BUFFER;\r\n\r\n        /**\r\n         * The draw type of the buffer\r\n         *\r\n         * @member {Number}\r\n         */\r\n        this.drawType = drawType || gl.STATIC_DRAW;\r\n\r\n        /**\r\n         * The data in the buffer, as a typed array\r\n         *\r\n         * @member {ArrayBuffer|SharedArrayBuffer|ArrayBufferView}\r\n         */\r\n        this._data = EMPTY_ARRAY_BUFFER;\r\n\r\n        if (data) {\r\n            this.upload(data);\r\n        }\r\n    }\r\n\r\n    upload(data, offset = 0) {\r\n        this.bind();\r\n\r\n        const gl = this._context;\r\n\r\n        if (this._data.byteLength >= data.byteLength) {\r\n            gl.bufferSubData(this._type, offset, data);\r\n        } else {\r\n            gl.bufferData(this._type, data, this.drawType);\r\n        }\r\n\r\n        this._data = data;\r\n    }\r\n\r\n    bind() {\r\n        this._context.bindBuffer(this._type, this._buffer);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._context.deleteBuffer(this._buffer);\r\n    }\r\n\r\n    static createVertexBuffer(gl, data, drawType) {\r\n        return new Buffer(gl, gl.ARRAY_BUFFER, data, drawType);\r\n    }\r\n\r\n    static createIndexBuffer(gl, data, drawType) {\r\n        return new Buffer(gl, gl.ELEMENT_ARRAY_BUFFER, data, drawType);\r\n    }\r\n\r\n    static create(gl, type, data, drawType) {\r\n        return new Buffer(gl, type, data, drawType);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/Buffer.js","import Renderer from '../graphics/Renderer';\r\nimport ParticleShader from './ParticleShader';\r\nimport { degreesToRadians } from '../utils/math';\r\nimport settings from '../settings';\r\nimport Buffer from '../graphics/Buffer';\r\nimport VertexArray from '../graphics/VertexArray';\r\n\r\n/**\r\n * @class ParticleRenderer\r\n * @extends Renderer\r\n */\r\nexport default class ParticleRenderer extends Renderer {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._batchSize = settings.BATCH_SIZE_PARTICLES;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._batchIndex = 0;\r\n\r\n        /**\r\n         * 4 x 9 Properties:\r\n         * 2 = vertexPos     (x, y) +\r\n         * 1 = texCoord (packed uv) +\r\n         * 2 = position      (x, y) +\r\n         * 2 = scale         (x, y) +\r\n         * 1 = rotation      (x, y) +\r\n         * 1 = color         (ARGB int)\r\n         *\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._attributeCount = 36;\r\n\r\n        /**\r\n         * @private\r\n         * @member {ArrayBuffer}\r\n         */\r\n        this._vertexData = new ArrayBuffer(this._batchSize * this._attributeCount * 4);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Uint16Array}\r\n         */\r\n        this._indexData = new Uint16Array(this._batchSize * 6);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Float32Array}\r\n         */\r\n        this._float32View = new Float32Array(this._vertexData);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Uint32Array}\r\n         */\r\n        this._uint32View = new Uint32Array(this._vertexData);\r\n\r\n        /**\r\n         * @private\r\n         * @member {ParticleShader}\r\n         */\r\n        this._shader = new ParticleShader();\r\n\r\n        /**\r\n         * @private\r\n         * @member {?RenderManager}\r\n         */\r\n        this._renderManager = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGL2RenderingContext}\r\n         */\r\n        this._context = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Texture}\r\n         */\r\n        this._currentTexture = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?Number}\r\n         */\r\n        this._currentBlendMode = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?View}\r\n         */\r\n        this._currentView = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._viewId = -1;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?VertexArray}\r\n         */\r\n        this._vao = null;\r\n\r\n        this._fillIndexData(this._indexData);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    connect(renderManager) {\r\n        if (!this._context) {\r\n            const gl = renderManager.context;\r\n\r\n            this._context = gl;\r\n            this._renderManager = renderManager;\r\n\r\n            this._shader.connect(gl);\r\n            this._indexBuffer = Buffer.createIndexBuffer(gl, this._indexData, gl.STATIC_DRAW);\r\n            this._vertexBuffer = Buffer.createVertexBuffer(gl, this._vertexData, gl.DYNAMIC_DRAW);\r\n\r\n            this._vao = new VertexArray(gl)\r\n                .addIndex(this._indexBuffer)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_position'], gl.FLOAT, false, this._attributeCount, 0)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_texcoord'], gl.UNSIGNED_SHORT, true, this._attributeCount, 8)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_translation'], gl.FLOAT, false, this._attributeCount, 12)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_scale'], gl.FLOAT, false, this._attributeCount, 20)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_rotation'], gl.FLOAT, false, this._attributeCount, 28)\r\n                .addAttribute(this._vertexBuffer, this._shader.attributes['a_color'], gl.UNSIGNED_BYTE, true, this._attributeCount, 32);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    disconnect() {\r\n        if (this._context) {\r\n            this.unbind();\r\n\r\n            this._shader.disconnect();\r\n\r\n            this._vao.destroy();\r\n            this._vao = null;\r\n\r\n            this._renderManager = null;\r\n            this._context = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    bind() {\r\n        if (!this._context) {\r\n            throw new Error('Renderer has to be connected first!')\r\n        }\r\n\r\n        this._renderManager.setVAO(this._vao);\r\n        this._renderManager.setShader(this._shader);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    unbind() {\r\n        if (this._context) {\r\n            this.flush();\r\n\r\n            this._renderManager.setShader(null);\r\n            this._renderManager.setVAO(null);\r\n\r\n            this._currentTexture = null;\r\n            this._currentBlendMode = null;\r\n            this._currentView = null;\r\n            this._viewId = -1;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {ParticleEmitter} emitter\r\n     */\r\n    render(emitter) {\r\n        const { texture, textureFrame, texCoordData, particles, blendMode } = emitter,\r\n            textureChanged = (texture !== this._currentTexture),\r\n            blendModeChanged = (blendMode !== this._currentBlendMode),\r\n            float32View = this._float32View,\r\n            uint32View = this._uint32View;\r\n\r\n        if (textureChanged || blendModeChanged) {\r\n            this.flush();\r\n\r\n            if (textureChanged) {\r\n                this._currentTexture = texture;\r\n                this._renderManager.setTexture(texture);\r\n            }\r\n\r\n            if (blendModeChanged) {\r\n                this._currentBlendMode = blendMode;\r\n                this._renderManager.setBlendMode(blendMode);\r\n            }\r\n        }\r\n\r\n        texture.update();\r\n\r\n        for (const particle of particles) {\r\n            if (this._batchIndex >= this._batchSize) {\r\n                this.flush();\r\n            }\r\n\r\n            const { position, scale, rotation, tint } = particle,\r\n                index = (this._batchIndex * this._attributeCount);\r\n\r\n            float32View[index + 0] = float32View[index + 27] = textureFrame.x;\r\n            float32View[index + 1] = float32View[index + 10] = textureFrame.y;\r\n            float32View[index + 9] = float32View[index + 18] = textureFrame.width;\r\n            float32View[index + 19] = float32View[index + 28] = textureFrame.height;\r\n\r\n            uint32View[index + 2] = texCoordData[0];\r\n            uint32View[index + 11] = texCoordData[1];\r\n            uint32View[index + 20] = texCoordData[2];\r\n            uint32View[index + 29] = texCoordData[3];\r\n\r\n            float32View[index + 3]\r\n                = float32View[index + 12]\r\n                = float32View[index + 21]\r\n                = float32View[index + 30]\r\n                = position.x;\r\n\r\n            float32View[index + 4]\r\n                = float32View[index + 13]\r\n                = float32View[index + 22]\r\n                = float32View[index + 31]\r\n                = position.y;\r\n\r\n            float32View[index + 5]\r\n                = float32View[index + 14]\r\n                = float32View[index + 23]\r\n                = float32View[index + 32]\r\n                = scale.x;\r\n\r\n            float32View[index + 6]\r\n                = float32View[index + 15]\r\n                = float32View[index + 24]\r\n                = float32View[index + 33]\r\n                = scale.y;\r\n\r\n            float32View[index + 7]\r\n                = float32View[index + 16]\r\n                = float32View[index + 25]\r\n                = float32View[index + 34]\r\n                = degreesToRadians(rotation);\r\n\r\n            uint32View[index + 8]\r\n                = uint32View[index + 17]\r\n                = uint32View[index + 26]\r\n                = uint32View[index + 35]\r\n                = tint.getRGBA();\r\n\r\n            this._batchIndex++;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    flush() {\r\n        if (this._batchIndex > 0) {\r\n            const gl = this._context,\r\n                view = this._renderManager.renderTarget.view,\r\n                viewId = view.updateId;\r\n\r\n            if (this._currentView !== view || this._viewId !== viewId) {\r\n                this._currentView = view;\r\n                this._viewId = viewId;\r\n                this._shader.getUniform('u_projection')\r\n                    .setValue(view.getTransform().toArray(false));\r\n            }\r\n\r\n            this._renderManager.setVAO(this._vao);\r\n            this._vertexBuffer.upload(this._float32View.subarray(0, this._batchIndex * this._attributeCount));\r\n            this._vao.draw(gl.TRIANGLES, this._batchIndex * 6, 0);\r\n            this._batchIndex = 0;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        this.disconnect();\r\n\r\n        this._shader.destroy();\r\n        this._shader = null;\r\n\r\n        this._uint32View = null;\r\n        this._float32View = null;\r\n        this._viewId = null;\r\n        this._batchSize = null;\r\n        this._batchIndex = null;\r\n        this._attributeCount = null;\r\n        this._currentTexture = null;\r\n        this._currentBlendMode = null;\r\n        this._currentView = null;\r\n        this._renderManager = null;\r\n        this._context = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {Uint16Array} data\r\n     * @returns {ParticleRenderer}\r\n     */\r\n    _fillIndexData(data) {\r\n        const len = data.length;\r\n\r\n        for (let i = 0, offset = 0; i < len; i += 6, offset += 4) {\r\n            data[i + 0] = offset + 0;\r\n            data[i + 1] = offset + 1;\r\n            data[i + 2] = offset + 2;\r\n            data[i + 3] = offset + 0;\r\n            data[i + 4] = offset + 3;\r\n            data[i + 5] = offset + 2;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/ParticleRenderer.js","import Shader from '../graphics/shader/Shader';\r\nimport { readFileSync } from 'fs';\r\nimport { join } from 'path';\r\n\r\n/**\r\n * @class ParticleShader\r\n * @extends Shader\r\n */\r\nexport default class ParticleShader extends Shader {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super(\r\n            readFileSync(join(__dirname, './glsl/particle.vert'), 'utf8'),\r\n            readFileSync(join(__dirname, './glsl/particle.frag'), 'utf8')\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/ParticleShader.js","import { CHANNEL_RANGE, CHANNEL_OFFSET } from '../const';\nimport Flags from '../math/Flags';\nimport support from '../support';\nimport { stopEvent } from '../utils/events';\nimport Vector from '../math/Vector';\nimport Pointer from './Pointer';\nimport EventEmitter from '../core/EventEmitter';\nimport Gamepad from './Gamepad';\n\nconst\n\n    /**\n     * @inner\n     * @type {Window}\n     */\n    global = (window.parent || window),\n\n    /**\n     * @inner\n     * @type {Object<String, Number>}\n     */\n    FLAGS = {\n        NONE:           0x000,\n        KEY_DOWN:       0x001,\n        KEY_UP:         0x002,\n        POINTER_ENTER:  0x004,\n        POINTER_LEAVE:  0x008,\n        POINTER_MOVE:   0x010,\n        POINTER_DOWN:   0x020,\n        POINTER_UP:     0x040,\n        POINTER_CANCEL: 0x080,\n        MOUSE_SCROLL:   0x100,\n    },\n\n    /**\n     * @inner\n     * @type {Object<String, Boolean>|Boolean}\n     */\n    passive = (support.eventOptions ? {\n        capture: true,\n        passive: true,\n    } : true),\n\n    /**\n     * @inner\n     * @type {Object<String, Boolean>|Boolean}\n     */\n    active = (support.eventOptions ? {\n        capture: true,\n        passive: false,\n    } : true),\n\n    /**\n     * @inner\n     * @type {Navigator}\n     */\n    navigator = global.navigator;\n\n/**\n * @typedef {MouseEvent} PointerEvent\n * @property {Number} pointerId\n * @property {Number} width\n * @property {Number} height\n * @property {Number} pressure\n * @property {Number} tiltX\n * @property {Number} tiltY\n * @property {Number} tangentialPressure\n * @property {Number} twist\n * @property {String} pointerType\n * @property {Boolean} isPrimary\n */\n\n/**\n * @class InputManager\n * @extends EventEmitter\n */\nexport default class InputManager extends EventEmitter {\n\n    /**\n     * @constructor\n     * @param {Application} app\n     */\n    constructor(app) {\n        super();\n\n        /**\n         * @private\n         * @member {Application}\n         */\n        this._app = app;\n\n        /**\n         * @private\n         * @member {Float32Array}\n         */\n        this._channels = new Float32Array(CHANNEL_RANGE.OVERALL);\n\n        /**\n         * @private\n         * @member {Set<Input>}\n         */\n        this._inputs = new Set();\n\n        /**\n         * @private\n         * @member {Number[]}\n         */\n        this._keyDownChannels = [];\n\n        /**\n         * @private\n         * @member {Number[]}\n         */\n        this._keyUpChannels = [];\n\n        /**\n         * @private\n         * @member {Map<Number, Pointer>}\n         */\n        this._pointers = new Map();\n\n        /**\n         * @private\n         * @member {Pointer[]}\n         */\n        this._pointersEntered = [];\n\n        /**\n         * @private\n         * @member {Pointer[]}\n         */\n        this._pointersLeft = [];\n\n        /**\n         * @private\n         * @member {Pointer[]}\n         */\n        this._pointersMoved = [];\n\n        /**\n         * @private\n         * @member {Pointer[]}\n         */\n        this._pointersDown = [];\n\n        /**\n         * @private\n         * @member {Pointer[]}\n         */\n        this._pointersUp = [];\n\n        /**\n         * @private\n         * @member {Pointer[]}\n         */\n        this._pointersCancelled = [];\n\n        /**\n         * @private\n         * @member {Vector}\n         */\n        this._scrollDelta = new Vector();\n\n        /**\n         * @private\n         * @member {Gamepad[]}\n         */\n        this._gamepads = [\n            new Gamepad(0, this._channels),\n            new Gamepad(1, this._channels),\n            new Gamepad(2, this._channels),\n            new Gamepad(3, this._channels),\n        ];\n\n        /**\n         * @private\n         * @member {Flags}\n         */\n        this._flags = new Flags();\n\n        this._addEventListeners();\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Float32Array}\n     */\n    get channels() {\n        return this._channels;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Map<Number, Pointer>}\n     */\n    get pointers() {\n        return this._pointers;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Gamepad[]}\n     */\n    get gamepads() {\n        return this._gamepads;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Input|Input[]} inputs\n     * @returns {InputManager}\n     */\n    add(inputs) {\n        if (Array.isArray(inputs)) {\n            inputs.forEach(this.add, this);\n\n            return this;\n        }\n\n        this._inputs.add(inputs);\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Input|Input[]} inputs\n     * @returns {InputManager}\n     */\n    remove(inputs) {\n        if (Array.isArray(inputs)) {\n            inputs.forEach(this.remove, this);\n\n            return this;\n        }\n\n        this._inputs.delete(inputs);\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Boolean} [destroyInputs=false]\n     * @returns {InputManager}\n     */\n    clear(destroyInputs = false) {\n        if (destroyInputs) {\n            for (const input of this._inputs) {\n                input.destroy();\n            }\n        }\n\n        this._inputs.clear();\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {InputManager}\n     */\n    update() {\n        this._updateGamepads();\n\n        for (const input of this._inputs) {\n            input.update(this._channels);\n        }\n\n        this._updateState();\n\n        for (const pointer of this._pointers.values()) {\n            pointer.update();\n        }\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        super.destroy();\n\n        this._removeEventListeners();\n\n        for (const pointer of this._pointers.values()) {\n            pointer.destroy();\n        }\n\n        for (const gamepad of this._gamepads) {\n            gamepad.destroy();\n        }\n\n        this._inputs.clear();\n        this._inputs = null;\n\n        this._keyDownChannels.length = 0;\n        this._keyDownChannels = null;\n\n        this._keyUpChannels.length = 0;\n        this._keyUpChannels = null;\n\n        this._pointers.clear();\n        this._pointers = null;\n\n        this._pointersEntered.length = 0;\n        this._pointersEntered = null;\n\n        this._pointersLeft.length = 0;\n        this._pointersLeft = null;\n\n        this._pointersDown.length = 0;\n        this._pointersDown = null;\n\n        this._pointersUp.length = 0;\n        this._pointersUp = null;\n\n        this._pointersCancelled.length = 0;\n        this._pointersCancelled = null;\n\n        this._scrollDelta.destroy();\n        this._scrollDelta = null;\n\n        this._gamepads.length = 0;\n        this._gamepads = null;\n\n        this._flags.destroy();\n        this._flags = null;\n\n        this._channels = null;\n        this._app = null;\n    }\n\n    /**\n     * @private\n     */\n    _addEventListeners() {\n        const canvas = this._app.canvas;\n\n        this._onKeyDownHandler = this._onKeyDown.bind(this);\n        this._onKeyUpHandler = this._onKeyUp.bind(this);\n        this._onPointerEnterHandler = this._onPointerEnter.bind(this);\n        this._onPointerLeaveHandler = this._onPointerLeave.bind(this);\n        this._onPointerMoveHandler = this._onPointerMove.bind(this);\n        this._onPointerDownHandler = this._onPointerDown.bind(this);\n        this._onPointerUpHandler = this._onPointerUp.bind(this);\n        this._onPointerCancelHandler = this._onPointerCancel.bind(this);\n        this._onMouseScrollHandler = this._onMouseScroll.bind(this);\n\n        global.addEventListener('keydown', this._onKeyDownHandler, true);\n        global.addEventListener('keyup', this._onKeyUpHandler, true);\n\n        canvas.addEventListener('pointerover', this._onPointerEnterHandler, passive);\n        canvas.addEventListener('pointerleave', this._onPointerLeaveHandler, passive);\n        canvas.addEventListener('pointercancel', this._onPointerCancelHandler, passive);\n        canvas.addEventListener('pointermove', this._onPointerMoveHandler, passive);\n        canvas.addEventListener('pointerdown', this._onPointerDownHandler, active);\n        canvas.addEventListener('pointerup', this._onPointerUpHandler, active);\n        canvas.addEventListener('wheel', this._onMouseScrollHandler, active);\n        canvas.addEventListener('contextmenu', stopEvent, active);\n        canvas.addEventListener('selectstart', stopEvent, active);\n    }\n\n    /**\n     * @private\n     */\n    _removeEventListeners() {\n        const canvas = this._app.canvas;\n\n        global.removeEventListener('keydown', this._onKeyDownHandler, true);\n        global.removeEventListener('keyup', this._onKeyUpHandler, true);\n\n        canvas.removeEventListener('pointerover', this._onPointerEnterHandler, passive);\n        canvas.removeEventListener('pointerleave', this._onPointerLeaveHandler, passive);\n        canvas.removeEventListener('pointercancel', this._onPointerCancelHandler, passive);\n        canvas.removeEventListener('pointermove', this._onPointerMoveHandler, passive);\n        canvas.removeEventListener('pointerdown', this._onPointerDownHandler, active);\n        canvas.removeEventListener('pointerup', this._onPointerUpHandler, active);\n        canvas.removeEventListener('wheel', this._onMouseScrollHandler, active);\n        canvas.removeEventListener('contextmenu', stopEvent, active);\n        canvas.removeEventListener('selectstart', stopEvent, active);\n\n        this._onKeyDownHandler = null;\n        this._onKeyUpHandler = null;\n        this._onPointerEnterHandler = null;\n        this._onPointerLeaveHandler = null;\n        this._onPointerMoveHandler = null;\n        this._onPointerDownHandler = null;\n        this._onPointerUpHandler = null;\n        this._onPointerCancelHandler = null;\n        this._onMouseScrollHandler = null;\n    }\n\n    /**\n     * @private\n     * @param {Event} event\n     */\n    _onKeyDown(event) {\n        const channel = (CHANNEL_OFFSET.KEYBOARD + event.keyCode);\n\n        this._channels[channel] = 1;\n        this._keyDownChannels.push(channel);\n        this._flags.add(FLAGS.KEY_DOWN);\n    }\n\n    /**\n     * @private\n     * @param {Event} event\n     */\n    _onKeyUp(event) {\n        const channel = (CHANNEL_OFFSET.KEYBOARD + event.keyCode);\n\n        this._channels[channel] = 0;\n        this._keyUpChannels.push(channel);\n        this._flags.add(FLAGS.KEY_UP);\n    }\n\n    /**\n     * @private\n     * @param {PointerEvent} event\n     */\n    _onPointerEnter(event) {\n        const pointer = new Pointer(event);\n\n        this._pointers.set(pointer.id, pointer);\n        this._pointersEntered.push(pointer);\n        this._flags.add(FLAGS.POINTER_ENTER);\n    }\n\n    /**\n     * @private\n     * @param {PointerEvent} event\n     */\n    _onPointerLeave(event) {\n        const pointer = this._pointers\n            .get(event.pointerId)\n            .setEventData(event);\n\n        this._pointers.delete(pointer.id);\n        this._pointersLeft.push(pointer);\n        this._flags.add(FLAGS.POINTER_LEAVE);\n    }\n\n    /**\n     * @private\n     * @param {PointerEvent} event\n     */\n    _onPointerDown(event) {\n        const pointer = this._pointers.get(event.pointerId);\n\n        pointer.setEventData(event);\n        pointer.downPosition.set(pointer.x, pointer.y);\n\n        this._pointersDown.push(pointer);\n        this._flags.add(FLAGS.POINTER_DOWN);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @private\n     * @param {PointerEvent} event\n     */\n    _onPointerUp(event) {\n        const pointer = this._pointers\n            .get(event.pointerId)\n            .setEventData(event);\n\n        this._pointersUp.push(pointer);\n        this._flags.add(FLAGS.POINTER_UP);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @private\n     * @param {PointerEvent} event\n     */\n    _onPointerCancel(event) {\n        const pointer = this._pointers\n            .get(event.pointerId)\n            .setEventData(event);\n\n        this._pointersCancelled.push(pointer);\n        this._flags.add(FLAGS.POINTER_CANCEL);\n    }\n\n    /**\n     * @private\n     * @param {PointerEvent} event\n     */\n    _onPointerMove(event) {\n        const pointer = this._pointers\n            .get(event.pointerId)\n            .setEventData(event);\n\n        this._pointersMoved.push(pointer);\n        this._flags.add(FLAGS.POINTER_MOVE);\n    }\n\n    /**\n     * @private\n     * @param {WheelEvent} event\n     */\n    _onMouseScroll(event) {\n        this._scrollDelta.push(event.deltaX, event.deltaY);\n        this._flags.add(FLAGS.MOUSE_SCROLL);\n    }\n\n    /**\n     * @private\n     * @param {String} event\n     * @param {Pointer[]} pointers\n     * @param {Object} [overrides]\n     * @param {String} [overrides.pointerEvent]\n     * @param {String} [overrides.mouseEvent]\n     * @param {String} [overrides.touchEvent]\n     * @param {String} [overrides.penEvent]\n     */\n    _triggerPointerEvents(event, pointers, overrides) {\n        for (const pointer of pointers) {\n            this._triggerPointerEvent(event, pointer, overrides);\n        }\n    }\n\n    /**\n     * @private\n     * @param {String} event\n     * @param {Pointer} pointer\n     * @param {Object} [overrides]\n     * @param {String} [overrides.pointerEvent]\n     * @param {String} [overrides.mouseEvent]\n     * @param {String} [overrides.touchEvent]\n     * @param {String} [overrides.penEvent]\n     */\n    _triggerPointerEvent(event, pointer, { pointerEvent, mouseEvent, touchEvent, penEvent } = {}) {\n        this.trigger(`pointer:${pointerEvent || event}`, pointer, this._pointers);\n\n        if (pointer.type === 'mouse') {\n            this.trigger(`mouse:${mouseEvent || event}`, pointer, this._pointers);\n        } else if (pointer.type === 'touch') {\n            this.trigger(`touch:${touchEvent || event}`, pointer, this._pointers);\n        } else if (pointer.type === 'pen') {\n            this.trigger(`pen:${penEvent || event}`, pointer, this._pointers);\n        }\n    }\n\n    /**\n     * @private\n     */\n    _updateGamepads() {\n        const activeGamepads = navigator.getGamepads();\n\n        for (const gamepad of this._gamepads) {\n            const activGamepad = activeGamepads[gamepad.index];\n\n            if (!!activGamepad !== gamepad.connected) {\n                if (activGamepad) {\n                    gamepad.connect(activGamepad);\n                    this.trigger('gamepad:connected', gamepad, this._gamepads);\n                } else {\n                    gamepad.disconnect();\n                    this.trigger('gamepad:disconnected', gamepad, this._gamepads);\n                }\n\n                this.trigger('gamepad:updated', gamepad, this._gamepads);\n            }\n\n            gamepad.update();\n        }\n    }\n\n    /**\n     * @private\n     */\n    _updateState() {\n        if (!this._flags.value) {\n            return;\n        }\n\n        if (this._flags.has(FLAGS.KEY_DOWN)) {\n            this.trigger('key:down', this._keyDownChannels, this);\n            this._keyDownChannels.length = 0;\n            this._flags.remove(FLAGS.KEY_DOWN);\n        }\n\n        if (this._flags.has(FLAGS.KEY_UP)) {\n            this.trigger('key:up', this._keyUpChannels, this);\n            this._keyUpChannels.length = 0;\n            this._flags.remove(FLAGS.KEY_UP);\n        }\n\n        if (this._flags.has(FLAGS.POINTER_ENTER)) {\n            this._triggerPointerEvents('enter', this._pointersEntered);\n            this._pointersEntered.length = 0;\n            this._flags.remove(FLAGS.POINTER_ENTER);\n        }\n\n        if (this._flags.has(FLAGS.POINTER_LEAVE)) {\n            this._triggerPointerEvents('leave', this._pointersLeft);\n            this._pointersLeft.length = 0;\n            this._flags.remove(FLAGS.POINTER_LEAVE);\n        }\n\n        if (this._flags.has(FLAGS.POINTER_MOVE)) {\n            this._triggerPointerEvents('move', this._pointersMoved);\n            this._pointersMoved.length = 0;\n            this._flags.remove(FLAGS.POINTER_MOVE);\n        }\n\n        if (this._flags.has(FLAGS.POINTER_DOWN)) {\n            this._triggerPointerEvents('down', this._pointersDown, { touchEvent: 'start' });\n            this._pointersDown.length = 0;\n            this._flags.remove(FLAGS.POINTER_DOWN);\n        }\n\n        if (this._flags.has(FLAGS.POINTER_UP)) {\n            for (const pointer of this._pointersUp) {\n                const { x, y } = pointer.downPosition;\n\n                this._triggerPointerEvent('up', pointer, { touchEvent: 'end' });\n\n                if (x > 0 && y > 0 && pointer.position.distanceTo(x, y) < 10) {\n                    this._triggerPointerEvent('tap', pointer, { mouseEvent: 'click' });\n                } else {\n                    this._triggerPointerEvent('tapoutside', pointer, { mouseEvent: 'clickoutside' });\n                }\n\n                pointer.downPosition.set(-1, -1);\n            }\n\n            this._pointersUp.length = 0;\n            this._flags.remove(FLAGS.POINTER_UP);\n        }\n\n        if (this._flags.has(FLAGS.POINTER_CANCEL)) {\n            this._triggerPointerEvents('cancel', this._pointersCancelled);\n            this._pointersCancelled.length = 0;\n            this._flags.remove(FLAGS.POINTER_CANCEL);\n        }\n\n        if (this._flags.has(FLAGS.MOUSE_SCROLL)) {\n            this.trigger('mouse:scroll', this._scrollDelta, this._pointers);\n            this._scrollDelta.set(0, 0);\n            this._flags.remove(FLAGS.MOUSE_SCROLL);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/input/InputManager.js","/**\n * @public\n * @constant\n * @type {Function}\n * @param {Event} event\n */\nconst stopEvent = (event) => {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n};\n\n/**\n * @namespace Exo\n */\nexport {\n    stopEvent,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/events.js","import Vector from '../math/Vector';\nimport Size from '../math/Size';\nimport Flags from '../math/Flags';\nimport EventEmitter from '../core/EventEmitter';\n\n/**\n * @private\n * @type {Object<String, Number>}\n * @property {Number} NONE\n * @property {Number} POSITION\n * @property {Number} SIZE\n * @property {Number} TILT\n * @property {Number} BUTTONS\n * @property {Number} PRESSURE\n * @property {Number} ROTATION\n */\nconst FLAGS = {\n    NONE: 0,\n    POSITION: 1 << 0,\n    SIZE: 1 << 1,\n    TILT: 1 << 2,\n    BUTTONS: 1 << 3,\n    PRESSURE: 1 << 4,\n    ROTATION: 1 << 5,\n};\n\n/**\n * @class Pointer\n * @extends EventEmitter\n */\nexport default class Pointer extends EventEmitter {\n\n    /**\n     * @constructor\n     * @param {PointerEvent} event\n     */\n    constructor(event) {\n        super();\n\n        const bounds = event.target.getBoundingClientRect();\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._id = event.pointerId;\n\n        /**\n         * @private\n         * @member {String}\n         */\n        this._type = event.pointerType;\n\n        /**\n         * @private\n         * @member {Vector}\n         */\n        this._position = new Vector(event.clientX - bounds.left, event.clientY - bounds.top);\n\n        /**\n         * @private\n         * @member {Vector}\n         */\n        this._downPosition = new Vector(-1, -1);\n\n        /**\n         * @private\n         * @member {Size}\n         */\n        this._size = new Size(event.width, event.height);\n\n        /**\n         * @private\n         * @member {Vector}\n         */\n        this._tilt = new Vector(event.tiltX, event.tiltY);\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._buttons = event.buttons;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._pressure = event.pressure;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._rotation = event.twist;\n\n        /**\n         * @private\n         * @member {Flags}\n         */\n        this._flags = new Flags();\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get id() {\n        return this._id;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {String}\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Vector}\n     */\n    get position() {\n        return this._position;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Vector}\n     */\n    get downPosition() {\n        return this._downPosition;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get x() {\n        return this._position.x;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get y() {\n        return this._position.y;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Size}\n     */\n    get size() {\n        return this._size;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get width() {\n        return this._size.width;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get height() {\n        return this._size.height;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Vector}\n     */\n    get tilt() {\n        return this._tilt;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get buttons() {\n        return this._buttons;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get pressure() {\n        return this._pressure;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get rotation() {\n        return this._rotation;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {PointerEvent} event\n     * @returns {Pointer}\n     */\n    setEventData(event) {\n        const bounds = event.target.getBoundingClientRect(),\n            x = event.clientX - bounds.left,\n            y = event.clientY - bounds.top;\n\n        if ((this._position.x !== x) || (this._position.y !== y)) {\n            this._position.set(x, y);\n            this._flags.add(FLAGS.POSITION);\n        }\n\n        if ((this._size.width !== event.width) || (this._size.height !== event.height)) {\n            this._size.set(event.width, event.height);\n            this._flags.add(FLAGS.SIZE);\n        }\n\n        if ((this._tilt.x !== event.tiltX) || (this._tilt.y !== event.tiltY)) {\n            this._tilt.set(event.tiltX, event.tiltY);\n            this._flags.add(FLAGS.TILT);\n        }\n\n        if (this._buttons !== event.buttons) {\n            this._buttons = event.buttons;\n            this._flags.add(FLAGS.BUTTONS);\n        }\n\n        if (this._pressure !== event.pressure) {\n            this._pressure = event.pressure;\n            this._flags.add(FLAGS.PRESSURE);\n        }\n\n        if (this._rotation !== event.twist) {\n            this._rotation = event.twist;\n            this._flags.add(FLAGS.ROTATION);\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {Pointer}\n     */\n    update() {\n        if (this._flags.value) {\n            if (this._flags.has(FLAGS.POSITION)) {\n                this.trigger('move', this._position, this);\n                this._flags.remove(FLAGS.POSITION);\n            }\n\n            if (this._flags.has(FLAGS.SIZE)) {\n                this.trigger('resize', this._size, this);\n                this._flags.remove(FLAGS.SIZE);\n            }\n\n            if (this._flags.has(FLAGS.TILT)) {\n                this.trigger('tilt', this._tilt, this);\n                this._flags.remove(FLAGS.TILT);\n            }\n\n            if (this._flags.has(FLAGS.ROTATION)) {\n                this.trigger('rotate', this._rotation, this);\n                this._flags.remove(FLAGS.ROTATION);\n            }\n\n            if (this._flags.has(FLAGS.BUTTONS)) {\n                this.trigger('buttonsChanged', this._buttons, this);\n                this._flags.remove(FLAGS.BUTTONS);\n            }\n\n            if (this._flags.has(FLAGS.PRESSURE)) {\n                this.trigger('pressureChanged', this._pressure, this);\n                this._flags.remove(FLAGS.PRESSURE);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        super.destroy();\n\n        this._position.destroy();\n        this._position = null;\n\n        this._downPosition.destroy();\n        this._downPosition = null;\n\n        this._size.destroy();\n        this._size = null;\n\n        this._tilt.destroy();\n        this._tilt = null;\n\n        this._flags.destroy();\n        this._flags = null;\n\n        this._id = null;\n        this._type = null;\n        this._buttons = null;\n        this._pressure = null;\n        this._rotation = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/input/Pointer.js","import settings from '../settings';\nimport EventEmitter from '../core/EventEmitter';\n\n/**\n * @class Gamepad\n * @extends EventEmitter\n */\nexport default class Gamepad extends EventEmitter {\n\n    /**\n     * @constructor\n     * @param {Number} index\n     * @param {Float32Array} channels\n     */\n    constructor(index, channels) {\n        super();\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._index = index;\n\n        /**\n         * @private\n         * @member {Float32Array}\n         */\n        this._channels = channels;\n\n        /**\n         * @private\n         * @member {Boolean}\n         */\n        this._connected = false;\n\n        /**\n         * @private\n         * @member {?Gamepad}\n         */\n        this._gamepad = null;\n\n        /**\n         * @private\n         * @member {GamepadMapping}\n         */\n        this._mapping = settings.GAMEPAD_MAPPING;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Float32Array}\n     */\n    get channels() {\n        return this._channels;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {?Gamepad}\n     */\n    get gamepad() {\n        return this._gamepad;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get index() {\n        return this._index;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Boolean}\n     */\n    get connected() {\n        return this._connected;\n    }\n\n    /**\n     * @public\n     * @member {GamepadMapping}\n     */\n    get mapping() {\n        return this._mapping;\n    }\n\n    set mapping(mapping) {\n        this._mapping = mapping;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Gamepad} gamepad\n     * @returns {Gamepad}\n     */\n    connect(gamepad) {\n        if (!this._connected) {\n            this._gamepad = gamepad;\n            this._connected = true;\n\n            this.trigger('connect', this);\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Gamepad} gamepad\n     * @returns {Gamepad}\n     */\n    disconnect() {\n        if (this._connected) {\n            this._gamepad = null;\n            this._connected = false;\n\n            this.trigger('disconnect', this);\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {Gamepad}\n     */\n    update() {\n        if (this._connected) {\n            const channels = this._channels,\n                gamepadButtons = this._gamepad.buttons,\n                mappingButtons = this._mapping.buttons,\n                gamepadAxes = this._gamepad.axes,\n                mappingAxes = this._mapping.axes;\n\n            for (const mapping of mappingButtons) {\n                const { index, channel } = mapping;\n\n                if (index in gamepadButtons) {\n                    const value = mapping.transformValue(gamepadButtons[index].value) || 0;\n\n                    if (channels[channel] !== value) {\n                        channels[channel] = value;\n\n                        this.trigger('update', channel, value, this);\n                    }\n                }\n            }\n\n            for (const mapping of mappingAxes) {\n                const { index, channel } = mapping;\n\n                if (index in gamepadAxes) {\n                    const value = mapping.transformValue(gamepadAxes[index]) || 0;\n\n                    if (channels[channel] !== value) {\n                        channels[channel] = value;\n\n                        this.trigger('update', channel, value, this);\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        super.destroy();\n\n        this.disconnect();\n\n        this._mapping.destroy();\n        this._mapping = null;\n\n        this._index = null;\n        this._channels = null;\n        this._connected = null;\n        this._gamepad = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/input/Gamepad.js","/**\r\n * @class TextStyle\r\n */\r\nexport default class TextStyle {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {TextStyle|Object} [style = {}]\r\n     * @param {String} [style.align='left']\r\n     * @param {String} [style.fill='black']\r\n     * @param {String} [style.stroke='black']\r\n     * @param {Number} [style.strokeThickness=0]\r\n     * @param {Number} [style.fontSize=20]\r\n     * @param {String} [style.fontWeight='bold']\r\n     * @param {String} [style.fontFamily='Arial']\r\n     * @param {Boolean} [style.wordWrap=false]\r\n     * @param {Number} [style.wordWrapWidth=100]\r\n     * @param {String} [style.baseline='alphabetic']\r\n     * @param {String} [style.lineJoin='miter']\r\n     * @param {Number} [style.miterLimit=10]\r\n     * @param {Number} [style.padding=0]\r\n     */\r\n    constructor({\r\n        align = 'left',\r\n        fill = 'black',\r\n        stroke = 'black',\r\n        strokeThickness = 0,\r\n        fontSize = 20,\r\n        fontWeight = 'bold',\r\n        fontFamily = 'Arial',\r\n        wordWrap = false,\r\n        wordWrapWidth = 100,\r\n        baseline = 'alphabetic',\r\n        lineJoin = 'miter',\r\n        miterLimit = 10,\r\n        padding = 0,\r\n    } = {}) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._align = align;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._fill = fill;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._stroke = stroke;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._strokeThickness = strokeThickness;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._fontSize = fontSize;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._fontWeight = fontWeight;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._fontFamily = fontFamily;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._wordWrap = wordWrap;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._wordWrapWidth = wordWrapWidth;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._baseline = baseline;\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._lineJoin = lineJoin;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._miterLimit = miterLimit;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._padding = padding;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._dirty = true;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get align() {\r\n        return this._align;\r\n    }\r\n\r\n    set align(align) {\r\n        if (this._align !== align) {\r\n            this._align = align;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get fill() {\r\n        return this._fill;\r\n    }\r\n\r\n    set fill(fill) {\r\n        if (this._fill !== fill) {\r\n            this._fill = fill;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n\r\n    set stroke(stroke) {\r\n        if (this._stroke !== stroke) {\r\n            this._stroke = stroke;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get strokeThickness() {\r\n        return this._strokeThickness;\r\n    }\r\n\r\n    set strokeThickness(strokeThickness) {\r\n        if (this._strokeThickness !== strokeThickness) {\r\n            this._strokeThickness = strokeThickness;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get fontSize() {\r\n        return this._fontSize;\r\n    }\r\n\r\n    set fontSize(fontSize) {\r\n        if (this._fontSize !== fontSize) {\r\n            this._fontSize = fontSize;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get fontWeight() {\r\n        return this._fontWeight;\r\n    }\r\n\r\n    set fontWeight(fontWeight) {\r\n        if (this._fontWeight !== fontWeight) {\r\n            this._fontWeight = fontWeight;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get fontFamily() {\r\n        return this._fontFamily;\r\n    }\r\n\r\n    set fontFamily(fontFamily) {\r\n        if (this._fontFamily !== fontFamily) {\r\n            this._fontFamily = fontFamily;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get wordWrap() {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(wordWrap) {\r\n        if (this._wordWrap !== wordWrap) {\r\n            this._wordWrap = wordWrap;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get wordWrapWidth() {\r\n        return this._wordWrapWidth;\r\n    }\r\n\r\n    set wordWrapWidth(wordWrapWidth) {\r\n        if (this._wordWrapWidth !== wordWrapWidth) {\r\n            this._wordWrapWidth = wordWrapWidth;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get baseline() {\r\n        return this._baseline;\r\n    }\r\n\r\n    set baseline(baseline) {\r\n        if (this._baseline !== baseline) {\r\n            this._baseline = baseline;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get lineJoin() {\r\n        return this._lineJoin;\r\n    }\r\n\r\n    set lineJoin(lineJoin) {\r\n        if (this._lineJoin !== lineJoin) {\r\n            this._lineJoin = lineJoin;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get miterLimit() {\r\n        return this._miterLimit;\r\n    }\r\n\r\n    set miterLimit(miterLimit) {\r\n        if (this._miterLimit !== miterLimit) {\r\n            this._miterLimit = miterLimit;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get padding() {\r\n        return this._padding;\r\n    }\r\n\r\n    set padding(padding) {\r\n        if (this._padding !== padding) {\r\n            this._padding = padding;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get dirty() {\r\n        return this._dirty;\r\n    }\r\n\r\n    set dirty(dirty) {\r\n        this._dirty = dirty;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {String}\r\n     */\r\n    get font() {\r\n        return `${this._fontWeight} ${this._fontSize}px ${this._fontFamily}`;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @returns {TextStyle}\r\n     */\r\n    apply(context) {\r\n        context.font = this.font;\r\n        context.fillStyle = this.fill;\r\n        context.strokeStyle = this.stroke;\r\n        context.lineWidth = this.strokeThickness;\r\n        context.textBaseline = this.baseline;\r\n        context.lineJoin = this.lineJoin;\r\n        context.miterLimit = this.miterLimit;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {TextStyle} style\r\n     * @returns {TextStyle}\r\n     */\r\n    copy(style) {\r\n        if (style !== this) {\r\n            this.align = style.align;\r\n            this.fill = style.fill;\r\n            this.stroke = style.stroke;\r\n            this.strokeThickness = style.strokeThickness;\r\n            this.fontSize = style.fontSize;\r\n            this.fontWeight = style.fontWeight;\r\n            this.fontFamily = style.fontFamily;\r\n            this.wordWrap = style.wordWrap;\r\n            this.wordWrapWidth = style.wordWrapWidth;\r\n            this.baseline = style.baseline;\r\n            this.lineJoin = style.lineJoin;\r\n            this.miterLimit = style.miterLimit;\r\n            this.padding = style.padding;\r\n            this.dirty = style.dirty;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {TextStyle}\r\n     */\r\n    clone() {\r\n        return new TextStyle().copy(this);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._align = null;\r\n        this._fill = null;\r\n        this._stroke = null;\r\n        this._strokeThickness = null;\r\n        this._fontSize = null;\r\n        this._fontWeight = null;\r\n        this._fontFamily = null;\r\n        this._wordWrap = null;\r\n        this._wordWrapWidth = null;\r\n        this._baseline = null;\r\n        this._lineJoin = null;\r\n        this._miterLimit = null;\r\n        this._padding = null;\r\n        this._dirty = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/text/TextStyle.js","import { TIME } from '../const';\r\nimport Vector from '../math/Vector';\r\nimport Color from '../core/Color';\r\nimport Time from '../core/time/Time';\r\n\r\n/**\r\n * @class Particle\r\n */\r\nexport default class Particle {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} [options]\r\n     * @param {Time} [options.totalLifetime]\r\n     * @param {Time} [options.elapsedLifetime]\r\n     * @param {Vector} [options.position]\r\n     * @param {Vector} [options.velocity]\r\n     * @param {Vector} [options.scale]\r\n     * @param {Number} [options.rotation]\r\n     * @param {Number} [options.rotationSpeed]\r\n     * @param {Color} [options.tint]\r\n     */\r\n    constructor(options) {\r\n\r\n        /**\r\n         * @private\r\n         * @member {Time}\r\n         */\r\n        this._totalLifetime = new Time(0, TIME.SECONDS);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Time}\r\n         */\r\n        this._elapsedLifetime = new Time(0, TIME.SECONDS);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._position = new Vector(0, 0);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._velocity = new Vector(0, 0);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._scale = new Vector(1, 1);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._rotation = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._rotationSpeed = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Color}\r\n         */\r\n        this._tint = new Color();\r\n\r\n        if (options !== undefined) {\r\n            this.copy(options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Time}\r\n     */\r\n    get totalLifetime() {\r\n        return this._totalLifetime;\r\n    }\r\n\r\n    set totalLifetime(totalLifetime) {\r\n        this._totalLifetime.copy(totalLifetime);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Time}\r\n     */\r\n    get elapsedLifetime() {\r\n        return this._elapsedLifetime;\r\n    }\r\n\r\n    set elapsedLifetime(elapsedLifetime) {\r\n        this._elapsedLifetime.copy(elapsedLifetime);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get position() {\r\n        return this._position;\r\n    }\r\n\r\n    set position(position) {\r\n        this._position.copy(position);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get velocity() {\r\n        return this._velocity;\r\n    }\r\n\r\n    set velocity(velocity) {\r\n        this._velocity.copy(velocity);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get scale() {\r\n        return this._scale;\r\n    }\r\n\r\n    set scale(scale) {\r\n        this._scale.copy(scale);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n\r\n    set rotation(degrees) {\r\n        const rotation = degrees % 360;\r\n\r\n        this._rotation = rotation < 0 ? rotation + 360 : rotation;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get rotationSpeed() {\r\n        return this._rotationSpeed;\r\n    }\r\n\r\n    set rotationSpeed(rotationSpeed) {\r\n        this._rotationSpeed = rotationSpeed;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get tint() {\r\n        return this._tint;\r\n    }\r\n\r\n    set tint(color) {\r\n        this._tint.copy(color);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Time}\r\n     */\r\n    get remainingLifetime() {\r\n        return Time.Temp.set(this._totalLifetime.milliseconds - this._elapsedLifetime.milliseconds);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Time}\r\n     */\r\n    get elapsedRatio() {\r\n        return this._elapsedLifetime.milliseconds / this._totalLifetime.milliseconds;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Time}\r\n     */\r\n    get remainingRatio() {\r\n        return this.remainingLifetime.milliseconds / this._totalLifetime.milliseconds;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Boolean}\r\n     */\r\n    get expired() {\r\n        return this._elapsedLifetime.greaterThan(this._totalLifetime);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Time} delta\r\n     * @returns {Particle}\r\n     */\r\n    update(delta) {\r\n        const seconds = delta.seconds;\r\n\r\n        this._elapsedLifetime.add(delta);\r\n        this._position.add(seconds * this._velocity.x, seconds * this._velocity.y);\r\n        this._rotation += (seconds * this._rotationSpeed);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Particle|Object} options\r\n     * @param {Time} options.totalLifetime\r\n     * @param {Time} options.elapsedLifetime\r\n     * @param {Vector} options.position\r\n     * @param {Vector} options.velocity\r\n     * @param {Vector} options.scale\r\n     * @param {Number} options.rotation\r\n     * @param {Number} options.rotationSpeed\r\n     * @param {Color} options.tint\r\n     * @returns {Particle}\r\n     */\r\n    copy({ totalLifetime, elapsedLifetime, position, velocity, scale, rotation, rotationSpeed, tint } = {}) {\r\n        this._totalLifetime.copy(totalLifetime);\r\n        this._elapsedLifetime.copy(elapsedLifetime);\r\n        this._position.copy(position);\r\n        this._velocity.copy(velocity);\r\n        this._scale.copy(scale);\r\n        this._rotation = rotation;\r\n        this._rotationSpeed = rotationSpeed;\r\n        this._tint.copy(tint);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Particle}\r\n     */\r\n    clone() {\r\n        return new Particle({\r\n            totalLifetime: this.totalLifetime,\r\n            elapsedLifetime: this.elapsedLifetime,\r\n            position: this.position,\r\n            velocity: this.velocity,\r\n            scale: this.scale,\r\n            rotation: this.rotation,\r\n            rotationSpeed: this.rotationSpeed,\r\n            tint: this.tint,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this._totalLifetime.destroy();\r\n        this._totalLifetime = null;\r\n\r\n        this._elapsedLifetime.destroy();\r\n        this._elapsedLifetime = null;\r\n\r\n        this._position.destroy();\r\n        this._position = null;\r\n\r\n        this._velocity.destroy();\r\n        this._velocity = null;\r\n\r\n        this._scale.destroy();\r\n        this._scale = null;\r\n\r\n        this._tint.destroy();\r\n        this._tint = null;\r\n\r\n        this._rotation = null;\r\n        this._rotationSpeed = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/Particle.js","/**\r\n * @namespace Exo\r\n */\r\nexport * from './const';\r\nexport * from './content';\r\nexport * from './core';\r\nexport * from './graphics';\r\nexport * from './particles';\r\nexport * from './input';\r\nexport * from './math';\r\nexport * from './media';\r\nexport * from './utils';\r\n\r\nimport * as support from './support';\r\nimport * as settings from './settings';\r\n\r\nexport {\r\n    support,\r\n    settings,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { DATABASE_TYPES } from '../const';\nimport support from '../support';\nimport Database from './Database';\n\n/**\n * @class IDBDatabase\n * @extends Database\n */\nexport default class IDBDatabase extends Database {\n\n    /**\n     * @constructor\n     * @param {String} name\n     * @param {Number} version\n     */\n    constructor(name, version) {\n        if (!support.indexedDB) {\n            throw new Error('This browser does not support indexedDB!');\n        }\n\n        super(name, version);\n\n        /**\n         * @private\n         * @member {?IDBDatabase}\n         */\n        this._database = null;\n\n        /**\n         * @private\n         * @member {?Promise}\n         */\n        this._connect = null;\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        this._onCloseHandler = this.disconnect.bind(this);\n    }\n\n    /**\n     * @public\n     * @param {String} type\n     * @param {String} [transactionMode='readonly']\n     * @returns {Promise}\n     */\n    getObjectStore(type, transactionMode = 'readonly') {\n        if (!DATABASE_TYPES.includes(type)) {\n            return Promise.reject(Error(`The object store named \"${type}\" could not be found.`));\n        }\n\n        return this.connect()\n            .then(() => this._database\n                .transaction([type], transactionMode)\n                .objectStore(type));\n    }\n\n    /**\n     * @override\n     */\n    connect() {\n        return this._connect || (this._connect = new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.name, this.version);\n\n            request.addEventListener('upgradeneeded', (event) => {\n                const database = event.target.result,\n                    transaction = event.target.transaction,\n                    currentStores = [...transaction.objectStoreNames];\n\n                database.addEventListener('error', (event) => reject(Error('An error occurred while opening the database.')));\n                database.addEventListener('abort', (event) => reject(Error('The database opening was aborted.')));\n\n                for (const store of currentStores) {\n                    if (!DATABASE_TYPES.includes(store)) {\n                        database.deleteObjectStore(store);\n                    }\n                }\n\n                for (const type of DATABASE_TYPES) {\n                    if (!currentStores.includes(type)) {\n                        database.createObjectStore(type, { keyPath: 'name' });\n                    }\n                }\n            });\n\n            request.addEventListener('success', (event) => {\n                this._database = event.target.result;\n                this._database.addEventListener('close', this._onCloseHandler);\n                this._database.addEventListener('versionchange', this._onCloseHandler);\n                this.connected = true;\n\n                resolve();\n            });\n\n            request.addEventListener('error', (event) => reject(Error('An error occurred while requesting the database connection.')));\n            request.addEventListener('blocked', (event) => reject(Error('The request for the database connection has been blocked.')));\n        }));\n    }\n\n    /**\n     * @override\n     */\n    disconnect() {\n        if (this._database) {\n            this._database.removeEventListener('close', this._onCloseHandler);\n            this._database.removeEventListener('versionchange', this._onCloseHandler);\n            this._database.close();\n            this._database = null;\n            this.connected = false;\n        }\n\n        this._connect = null;\n\n        return Promise.resolve();\n    }\n\n    /**\n     * @override\n     */\n    load(type, name) {\n        return this.getObjectStore(type)\n            .then((store) => new Promise((resolve, reject) => {\n                const request = store.get(name);\n\n                request.addEventListener('success', (event) => {\n                    const result = event.target.result,\n                        data = (result && result.data) || null;\n\n                    resolve({ type, name, data });\n                });\n\n                request.addEventListener('error', (event) => reject(Error('An error occurred while loading an item.')));\n            }));\n    }\n\n    /**\n     * @override\n     */\n    save(type, name, data) {\n        return this.getObjectStore(type, 'readwrite')\n            .then((store) => new Promise((resolve, reject) => {\n                const request = store.put({ name, data });\n\n                request.addEventListener('success', () => resolve({ type, name, data }));\n                request.addEventListener('error', (event) => reject(Error('An error occurred while saving an item.')));\n            }));\n    }\n\n    /**\n     * @override\n     */\n    delete(type, name) {\n        return this.getObjectStore(type, 'readwrite')\n            .then((store) => new Promise((resolve, reject) => {\n                const request = store.delete(name);\n\n                request.addEventListener('success', () => resolve({ type, name, data: null }));\n                request.addEventListener('error', (event) => reject(Error('An error occurred while deleting an item.')));\n            }));\n    }\n\n    /**\n     * @override\n     */\n    clearStorage(type = '*') {\n        if (type === '*') {\n            return DATABASE_TYPES.reduce((promise, type) => promise.then(() => this.clearStorage(type)), Promise.resolve());\n        }\n\n        return this.getObjectStore(type, 'readwrite')\n            .then((store) => new Promise((resolve, reject) => {\n                const request = store.clear();\n\n                request.addEventListener('success', (event) => resolve());\n                request.addEventListener('error', (event) => reject(Error('An error occurred while clearing a storage.')));\n            }));\n    }\n\n    /**\n     * @override\n     */\n    deleteStorage() {\n        return this.disconnect()\n            .then(() => new Promise((resolve, reject) => {\n                const request = indexedDB.deleteDatabase(this._name);\n\n                request.addEventListener('success', (event) => resolve(event));\n                request.addEventListener('error', (event) => reject(Error('An error occurred while deleting a storage.')));\n            }));\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        super.destroy();\n\n        this._onCloseHandler = null;\n        this._database = null;\n        this._connect = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/IDBDatabase.js","import Transformable from '../math/Transformable';\r\nimport Matrix from '../math/Matrix';\r\nimport Rectangle from '../math/Rectangle';\r\nimport Bounds from './Bounds';\r\nimport Collision from './Collision';\r\nimport Interval from '../math/Interval';\r\n\r\n/**\r\n * @class SceneNode\r\n * @extends Transformable\r\n */\r\nexport default class SceneNode extends Transformable {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {?SceneNode}\r\n         */\r\n        this._parent = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Matrix}\r\n         */\r\n        this._globalTransform = new Matrix();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Rectangle}\r\n         */\r\n        this._localBounds = new Rectangle();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Bounds}\r\n         */\r\n        this._bounds = new Bounds();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?Scene}\r\n     */\r\n    get scene() {\r\n        return this._scene;\r\n    }\r\n\r\n    set scene(scene) {\r\n        this._scene = scene;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?SceneNode}\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n\r\n    set parent(parent) {\r\n        this._parent = parent;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Matrix}\r\n     */\r\n    get globalTransform() {\r\n        return this.getGlobalTransform();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Rectangle}\r\n     */\r\n    get localBounds() {\r\n        return this.getLocalBounds();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Rectangle}\r\n     */\r\n    get bounds() {\r\n        return this.getBounds();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Rectangle}\r\n     */\r\n    getLocalBounds() {\r\n        return this._localBounds;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Rectangle}\r\n     */\r\n    getBounds() {\r\n        this.updateParentTransforms();\r\n        this.updateBounds();\r\n\r\n        return this._bounds.getRect();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {SceneNode}\r\n     */\r\n    updateBounds() {\r\n        this._bounds.reset()\r\n            .addRect(this.getLocalBounds(), this.getGlobalTransform());\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {SceneNode}\r\n     */\r\n    updateParentTransforms() {\r\n        if (this._parent) {\r\n            this._parent.updateParentTransforms();\r\n        }\r\n\r\n        if (this._updateTransform) {\r\n            this.updateTransform();\r\n            this._updateTransform = false;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Matrix}\r\n     */\r\n    getGlobalTransform() {\r\n        this._globalTransform.copy(this.getTransform());\r\n\r\n        if (this._parent) {\r\n            this._globalTransform.combine(this._parent.getGlobalTransform());\r\n        }\r\n\r\n        return this._globalTransform;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Vector[]}\r\n     */\r\n    getNormals() {\r\n        return this.getBounds().getNormals();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Vector} axis\r\n     * @param {Interval} [result=new Interval()]\r\n     * @returns {Interval}\r\n     */\r\n    project(axis, result = new Interval()) {\r\n        return this.getBounds().project(axis, result);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Boolean}\r\n     */\r\n    contains(x, y) {\r\n        return this.getBounds().contains(x, y);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {SceneNode} node\r\n     * @returns {Boolean}\r\n     */\r\n    intersects(node) {\r\n        if ((this.rotation % 90 === 0) && (node.rotation % 90 === 0)) {\r\n            return Collision.intersectionRectRect(this.getBounds(), node.getBounds());\r\n        }\r\n\r\n        return Collision.intersectionSAT(this, node);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {SceneNode} node\r\n     * @returns {?Collision}\r\n     */\r\n    getCollision(node) {\r\n        if ((this.rotation % 90 === 0) && (node.rotation % 90 === 0)) {\r\n            return Collision.collisionRectRect(this.getBounds(), node.getBounds());\r\n        }\r\n\r\n        return Collision.collisionSAT(this, node);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    setOrigin(x, y = x, relative = true) {\r\n        if (relative) {\r\n            const bounds = this.getBounds();\r\n\r\n            x *= bounds.width;\r\n            y *= bounds.height;\r\n        }\r\n\r\n        this.origin.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._globalTransform.destroy();\r\n        this._globalTransform = null;\r\n\r\n        this._localBounds.destroy();\r\n        this._localBounds = null;\r\n\r\n        this._bounds.destroy();\r\n        this._bounds = null;\r\n\r\n        this._parent = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/SceneNode.js","import EventEmitter from './EventEmitter';\r\nimport Clock from './time/Clock';\r\nimport SceneManager from './SceneManager';\r\nimport RenderManager from '../graphics/RenderManager';\r\nimport InputManager from '../input/InputManager';\r\nimport Loader from '../content/Loader';\r\nimport settings from '../settings';\r\n\r\n/**\r\n * @class Application\r\n * @extends EventEmitter\r\n */\r\nexport default class Application extends EventEmitter {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} [options]\r\n     * @param {String} [options.resourcePath='']\r\n     * @param {Number} [options.width=800]\r\n     * @param {Number} [options.height=600]\r\n     * @param {?HTMLCanvasElement} [options.canvas=null]\r\n     * @param {?HTMLElement} [options.canvasParent=null]\r\n     * @param {Color} [options.clearColor=Color.Black]\r\n     * @param {?Database} [options.database=null]\r\n     */\r\n    constructor(options) {\r\n        super();\r\n\r\n        const config = Object.assign({}, settings.APP_OPTIONS, options);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Object}\r\n         */\r\n        this._config = config;\r\n\r\n        /**\r\n         * @private\r\n         * @member {HTMLCanvasElement}\r\n         */\r\n        this._canvas = (config.canvas instanceof HTMLCanvasElement) ? config.canvas : document.createElement('canvas');\r\n\r\n        /**\r\n         * @private\r\n         * @member {HTMLElement}\r\n         */\r\n        this._canvasParent = (config.canvasParent instanceof HTMLElement) ? config.canvasParent : null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Loader}\r\n         */\r\n        this._loader = new Loader({\r\n            resourcePath: config.resourcePath,\r\n            database: config.database,\r\n        });\r\n\r\n        /**\r\n         * @private\r\n         * @member {RenderManager}\r\n         */\r\n        this._renderManager = new RenderManager(this);\r\n\r\n        /**\r\n         * @private\r\n         * @member {InputManager}\r\n         */\r\n        this._inputManager = new InputManager(this);\r\n\r\n        /**\r\n         * @private\r\n         * @member {SceneManager}\r\n         */\r\n        this._sceneManager = new SceneManager(this);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Function}\r\n         */\r\n        this._updateHandler = this.update.bind(this);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._updateId = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Clock}\r\n         */\r\n        this._delta = new Clock(false);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._running = false;\r\n\r\n        if (this._canvasParent) {\r\n            this._canvasParent.appendChild(this._canvas);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {HTMLCanvasElement}\r\n     */\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Object}\r\n     */\r\n    get config() {\r\n        return this._config;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Loader}\r\n     */\r\n    get loader() {\r\n        return this._loader;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {RenderManager}\r\n     */\r\n    get renderManager() {\r\n        return this._renderManager;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {InputManager}\r\n     */\r\n    get inputManager() {\r\n        return this._inputManager;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {SceneManager}\r\n     */\r\n    get sceneManager() {\r\n        return this._sceneManager;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Boolean}\r\n     */\r\n    get running() {\r\n        return this._running;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get FPS() {\r\n        return (1000 / this._delta.elapsedTime.milliseconds);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Scene} scene\r\n     * @returns {Application}\r\n     */\r\n    start(scene) {\r\n        if (!this._running) {\r\n            this._running = true;\r\n            this._sceneManager.setScene(scene);\r\n            this._updateId = requestAnimationFrame(this._updateHandler);\r\n            this._delta.restart();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Application}\r\n     */\r\n    update() {\r\n        if (this._running) {\r\n            this._inputManager.update();\r\n            this._sceneManager.update(this._delta.elapsedTime);\r\n\r\n            this._updateId = requestAnimationFrame(this._updateHandler);\r\n            this._delta.restart();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Application}\r\n     */\r\n    stop() {\r\n        if (this._running) {\r\n            cancelAnimationFrame(this._updateId);\r\n\r\n            this._sceneManager.setScene(null);\r\n            this._delta.stop();\r\n            this._running = false;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {Application}\r\n     */\r\n    resize(width, height) {\r\n        this._renderManager.resize(width, height);\r\n\r\n        this.trigger('resize', width, height, this);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this.stop();\r\n\r\n        if (this._canvasParent) {\r\n            this._canvasParent.removeChild(this._canvas);\r\n        }\r\n\r\n        this._loader.destroy();\r\n        this._loader = null;\r\n\r\n        this._inputManager.destroy();\r\n        this._inputManager = null;\r\n\r\n        this._renderManager.destroy();\r\n        this._renderManager = null;\r\n\r\n        this._sceneManager.destroy();\r\n        this._sceneManager = null;\r\n\r\n        this._delta.destroy();\r\n        this._delta = null;\r\n\r\n        this._config = null;\r\n        this._canvas = null;\r\n        this._canvasParent = null;\r\n        this._updateHandler = null;\r\n        this._updateId = null;\r\n        this._running = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Application.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/node-libs-browser/node_modules/process/browser.js\n// module id = 80\n// module chunks = 0","import Rectangle from '../math/Rectangle';\nimport settings from '../settings';\n\n/**\n * @class Quadtree\n */\nexport default class Quadtree {\n\n    /**\n     * @constructor\n     * @param {Rectangle} bounds\n     * @param {Number} [level=0]\n     */\n    constructor(bounds = Rectangle.Empty, level = 0) {\n\n        /**\n         * @private\n         * @member {Rectangle}\n         */\n        this._bounds = bounds.clone();\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._level = level;\n\n        /**\n         * @private\n         * @member {Map<Number, Quadtree>}\n         */\n        this._nodes = new Map();\n\n        /**\n         * @private\n         * @member {Set<SceneNode>}\n         */\n        this._children = new Set();\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Rectangle}\n     */\n    get bounds() {\n        return this._bounds;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get level() {\n        return this._level;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Map<Number, Quadtree>}\n     */\n    get nodes() {\n        return this._nodes;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Set<SceneNode>}\n     */\n    get children() {\n        return this._children;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {Quadtree}\n     */\n    clear() {\n        for (const node of this._nodes.values()) {\n            node.clear();\n        }\n\n        this._nodes.clear();\n        this._children.clear();\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {SceneNode} child\n     * @returns {Quadtree}\n     */\n    insert(child) {\n        const children = this._children,\n            node = this._getNode(child);\n\n        if (node) {\n            node.insert(child);\n\n            return this;\n        }\n\n        children.add(child);\n\n        if ((children.size > settings.QUAD_TREE_MAX_OBJECTS) && (this._level < settings.QUAD_TREE_MAX_LEVEL)) {\n            this._split();\n\n            for (const child of children) {\n                const node = this._getNode(child);\n\n                if (node) {\n                    children.delete(child);\n                    node.insert(child);\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @param {SceneNode} child\n     * @returns {SceneNode[]}\n     */\n    getRelatedChildren(child) {\n        const node = this._getNode(child);\n\n        return node ? [...node.getRelatedChildren(child), ...this._children] : [...this._children];\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        this._bounds.destroy();\n        this._bounds = null;\n\n        this._nodes.clear();\n        this._nodes = null;\n\n        this._children.clear();\n        this._children = null;\n\n        this._level = null;\n    }\n\n    /**\n     * @private\n     */\n    _split() {\n        if (!this._nodes.size) {\n            return;\n        }\n\n        const rect = Rectangle.Temp,\n            nodeLevel = this._level + 1,\n            bounds = this._bounds,\n            width = (bounds.width / 2) | 0,\n            height = (bounds.height / 2) | 0,\n            left = bounds.left,\n            top = bounds.top,\n            right = left + width,\n            bottom = top + height;\n\n        this._nodes\n            .set(0, new Quadtree(rect.set(left, top, width, height), nodeLevel))\n            .set(1, new Quadtree(rect.set(right, top, width, height), nodeLevel))\n            .set(2, new Quadtree(rect.set(left, bottom, width, height), nodeLevel))\n            .set(3, new Quadtree(rect.set(right, bottom, width, height), nodeLevel));\n    }\n\n    /**\n     * @private\n     * @param {SceneNode} child\n     * @returns {?Quadtree}\n     */\n    _getNode(child) {\n        const bounds = child.getBounds();\n\n        for (const node of this._nodes.values()) {\n            if (bounds.containsRect(node.getBounds())) {\n                return node;\n            }\n        }\n\n        return null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Quadtree.js","import EventEmitter from './EventEmitter';\r\n\r\n/**\r\n * @class Scene\r\n * @extends EventEmitter\r\n */\r\nexport default class Scene extends EventEmitter {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} [prototype]\r\n     * @param {Function} [prototype.load]\r\n     * @param {Function} [prototype.init]\r\n     * @param {Function} [prototype.update]\r\n     * @param {Function} [prototype.draw]\r\n     * @param {Function} [prototype.unload]\r\n     * @param {Function} [prototype.destroy]\r\n     */\r\n    constructor(prototype) {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Application}\r\n         */\r\n        this._app = null;\r\n\r\n        if (prototype) {\r\n            Object.assign(this, prototype);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Application}\r\n     */\r\n    get app() {\r\n        return this._app;\r\n    }\r\n\r\n    set app(app) {\r\n        this._app = app;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Loader} loader\r\n     */\r\n    load(loader) { // eslint-disable-line\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {ResourceContainer} resources\r\n     */\r\n    init(resources) { // eslint-disable-line\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Time} delta\r\n     */\r\n    update(delta) { // eslint-disable-line\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {RenderManager} renderManager\r\n     */\r\n    draw(renderManager) { // eslint-disable-line\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    unload() {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._app = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Scene.js","import { TIME } from '../../const';\r\nimport Clock from './Clock';\r\nimport Time from './Time';\r\n\r\n/**\r\n * @class Timer\r\n * @extends Clock\r\n */\r\nexport default class Timer extends Clock {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Boolean} autoStart\r\n     * @param {Number} [timeLimit=0]\r\n     * @param {Number} [factor=TIME.MILLISECONDS]\r\n     */\r\n    constructor(autoStart, timeLimit = 0, factor = TIME.MILLISECONDS) {\r\n        super(false);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._limit = timeLimit;\r\n\r\n        if (autoStart) {\r\n            this.restart(timeLimit, factor);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get running() {\r\n        return this._running && !this.expired;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Boolean}\r\n     */\r\n    get expired() {\r\n        return this.elapsedMilliseconds >= this._limit;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get remainingMilliseconds() {\r\n        return Math.max(0, this._limit - this.elapsedMilliseconds);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get remainingSeconds() {\r\n        return this.remainingMilliseconds / TIME.SECONDS;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get remainingMinutes() {\r\n        return this.remainingMilliseconds / TIME.MINUTES;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Number}\r\n     */\r\n    get remainingHours() {\r\n        return this.remainingMilliseconds / TIME.HOURS;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} [timeLimit=this._limit]\r\n     * @param {Number} [factor=TIME.MILLISECONDS]\r\n     * @returns {Timer}\r\n     */\r\n    reset(timeLimit = this._limit, factor = TIME.MILLISECONDS) {\r\n        this._limit = (timeLimit * factor);\r\n        this._timeBuffer = 0;\r\n        this._running = false;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} [timeLimit=this._limit]\r\n     * @param {Number} [factor=TIME.MILLISECONDS]\r\n     * @returns {Timer}\r\n     */\r\n    restart(timeLimit = this._limit, factor = TIME.MILLISECONDS) {\r\n        this.reset(timeLimit, factor);\r\n        this.start();\r\n\r\n        return this;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/time/Timer.js","import { SCALE_MODES, WRAP_MODES, TEXTURE_FLAGS } from '../const';\r\nimport settings from '../settings';\r\nimport { isPowerOfTwo } from '../utils/math';\r\nimport RenderTarget from './RenderTarget';\r\nimport Flags from '../math/Flags';\r\n\r\n/**\r\n * @class RenderTexture\r\n * @extends RenderTarget\r\n */\r\nexport default class RenderTexture extends RenderTarget {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Object} [options]\r\n     * @param {Number} [options.scaleMode=settings.SCALE_MODE]\r\n     * @param {Number} [options.wrapMode=settings.WRAP_MODE]\r\n     * @param {Boolean} [options.premultiplyAlpha=settings.PREMULTIPLY_ALPHA]\r\n     * @param {Boolean} [options.generateMipMap=settings.GENERATE_MIPMAP]\r\n     */\r\n    constructor(width, height, {\r\n        scaleMode = settings.SCALE_MODE,\r\n        wrapMode = settings.WRAP_MODE,\r\n        premultiplyAlpha = settings.PREMULTIPLY_ALPHA,\r\n        generateMipMap = settings.GENERATE_MIPMAP,\r\n    } = {}) {\r\n        super(width, height, false);\r\n\r\n        /**\r\n         * @private\r\n         * @member {?DataView}\r\n         */\r\n        this._source = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {?WebGLTexture}\r\n         */\r\n        this._texture = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._scaleMode = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._wrapMode = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._premultiplyAlpha = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._generateMipMap = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._flipY = true;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Flags}\r\n         */\r\n        this._flags = new Flags(TEXTURE_FLAGS.SOURCE, TEXTURE_FLAGS.SIZE);\r\n\r\n        this.setScaleMode(scaleMode);\r\n        this.setWrapMode(wrapMode);\r\n        this.premultiplyAlpha = premultiplyAlpha;\r\n        this.generateMipMap = generateMipMap;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {?DataView}\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    set source(source) {\r\n        this.setSource(source);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get scaleMode() {\r\n        return this._scaleMode;\r\n    }\r\n\r\n    set scaleMode(scaleMode) {\r\n        this.setScaleMode(scaleMode);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get wrapMode() {\r\n        return this._wrapMode;\r\n    }\r\n\r\n    set wrapMode(wrapMode) {\r\n        this.setWrapMode(wrapMode);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get premultiplyAlpha() {\r\n        return this._premultiplyAlpha;\r\n    }\r\n\r\n    set premultiplyAlpha(premultiplyAlpha) {\r\n        this.setPremultiplyAlpha(premultiplyAlpha);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get generateMipMap() {\r\n        return this._generateMipMap;\r\n    }\r\n\r\n    set generateMipMap(generateMipMap) {\r\n        this._generateMipMap = generateMipMap;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Boolean}\r\n     */\r\n    get flipY() {\r\n        return this._flipY;\r\n    }\r\n\r\n    set flipY(flipY) {\r\n        this._flipY = flipY;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Boolean}\r\n     */\r\n    get powerOfTwo() {\r\n        return isPowerOfTwo(this.width) && isPowerOfTwo(this.height);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    connect(gl) {\r\n        if (!this._context) {\r\n            this._context = gl;\r\n            this._texture = gl.createTexture();\r\n            this._framebuffer = gl.createFramebuffer();\r\n\r\n            this.bindTexture();\r\n            this.bindFramebuffer();\r\n\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture, 0);\r\n\r\n            this.unbindTexture();\r\n            this.unbindFramebuffer();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    disconnect() {\r\n        this.unbindFramebuffer();\r\n        this.unbindTexture();\r\n\r\n        if (this._context) {\r\n            this._context.deleteFramebuffer(this._framebuffer);\r\n            this._context.deleteTexture(this._texture);\r\n\r\n            this._context = null;\r\n            this._texture = null;\r\n            this._framebuffer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderTarget}\r\n     */\r\n    bindTexture(unit) {\r\n        if (!this._context) {\r\n            throw new Error('Texture has to be connected first!')\r\n        }\r\n\r\n        const gl = this._context;\r\n\r\n        if (unit !== undefined) {\r\n            gl.activeTexture(gl.TEXTURE0 + unit);\r\n        }\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n\r\n        this.update();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderTexture}\r\n     */\r\n    unbindTexture() {\r\n        if (this._context) {\r\n            const gl = this._context;\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} scaleMode\r\n     * @returns {RenderTexture}\r\n     */\r\n    setScaleMode(scaleMode) {\r\n        if (this._scaleMode !== scaleMode) {\r\n            this._scaleMode = scaleMode;\r\n            this._flags.add(TEXTURE_FLAGS.SCALE_MODE);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} wrapMode\r\n     * @returns {RenderTexture}\r\n     */\r\n    setWrapMode(wrapMode) {\r\n        if (this._wrapMode !== wrapMode) {\r\n            this._wrapMode = wrapMode;\r\n            this._flags.add(TEXTURE_FLAGS.WRAP_MODE);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Boolean} premultiplyAlpha\r\n     * @returns {RenderTexture}\r\n     */\r\n    setPremultiplyAlpha(premultiplyAlpha) {\r\n        if (this._premultiplyAlpha !== premultiplyAlpha) {\r\n            this._premultiplyAlpha = premultiplyAlpha;\r\n            this._flags.add(TEXTURE_FLAGS.PREMULTIPLY_ALPHA);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {?DataView} source\r\n     * @returns {RenderTexture}\r\n     */\r\n    setSource(source) {\r\n        if (this._source !== source) {\r\n            this._source = source;\r\n            this.updateSource();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderTexture}\r\n     */\r\n    updateSource() {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    setSize(width, height) {\r\n        if (!this._size.equals({ width, height })) {\r\n            this._size.set(width, height);\r\n            this._defaultView.resize(width, height);\r\n            this.updateViewport();\r\n\r\n            this._flags.add(TEXTURE_FLAGS.SIZE);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {RenderTexture}\r\n     */\r\n    update() {\r\n        if (this._flags.value && this._context) {\r\n            const gl = this._context;\r\n\r\n            if (this._flags.has(TEXTURE_FLAGS.SCALE_MODE)) {\r\n                const scaleMode = (this._scaleMode === SCALE_MODES.LINEAR) ? gl.LINEAR : gl.NEAREST;\r\n\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, scaleMode);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, scaleMode);\r\n\r\n                this._flags.remove(TEXTURE_FLAGS.SCALE_MODE);\r\n            }\r\n\r\n            if (this._flags.has(TEXTURE_FLAGS.WRAP_MODE)) {\r\n                const clamp = (this._wrapMode === WRAP_MODES.CLAMP_TO_EDGE) && gl.CLAMP_TO_EDGE,\r\n                    repeat = (this._wrapMode === WRAP_MODES.REPEAT) && gl.REPEAT,\r\n                    wrapMode = clamp || repeat || gl.MIRRORED_REPEAT;\r\n\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapMode);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapMode);\r\n\r\n                this._flags.remove(TEXTURE_FLAGS.WRAP_MODE);\r\n            }\r\n\r\n            if (this._flags.has(TEXTURE_FLAGS.PREMULTIPLY_ALPHA)) {\r\n                gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiplyAlpha);\r\n\r\n                this._flags.remove(TEXTURE_FLAGS.PREMULTIPLY_ALPHA);\r\n            }\r\n\r\n            if (this._flags.has(TEXTURE_FLAGS.SOURCE)) {\r\n                if (this._flags.has(TEXTURE_FLAGS.SIZE) || !this._source) {\r\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this._source);\r\n                } else {\r\n                    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this._source);\r\n                }\r\n\r\n                if (this._generateMipMap) {\r\n                    gl.generateMipmap(gl.TEXTURE_2D);\r\n                }\r\n\r\n                this._flags.remove(TEXTURE_FLAGS.SOURCE, TEXTURE_FLAGS.SIZE);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._flags.destroy();\r\n        this._flags = null;\r\n\r\n        this._source = null;\r\n        this._texture = null;\r\n        this._scaleMode = null;\r\n        this._wrapMode = null;\r\n        this._premultiplyAlpha = null;\r\n        this._flipY = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/RenderTexture.js","import Container from '../Container';\r\nimport Color from '../../core/Color';\r\n\r\n/**\r\n * @class Drawing\r\n * @extends Container\r\n */\r\nexport default class Drawing extends Container {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @type {Number}\r\n         */\r\n        this._lineWidth = 0;\r\n\r\n        /**\r\n         * @private\r\n         * @type {Color}\r\n         */\r\n        this._lineColor = Color.Black.clone();\r\n\r\n        /**\r\n         * @private\r\n         * @type {Color}\r\n         */\r\n        this._fillColor = Color.Black.clone();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get lineWidth() {\r\n        return this._lineWidth;\r\n    }\r\n\r\n    set lineWidth(lineWidth) {\r\n        this._lineWidth = lineWidth;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get lineColor() {\r\n        return this._lineColor;\r\n    }\r\n\r\n    set lineColor(lineColor) {\r\n        this._lineColor.copy(lineColor);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get fillColor() {\r\n        return this._fillColor;\r\n    }\r\n\r\n    set fillColor(fillColor) {\r\n        this._fillColor.copy(fillColor);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Drawing}\r\n     */\r\n    closePath() {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Drawing}\r\n     */\r\n    moveTo(x, y) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Drawing}\r\n     */\r\n    lineTo(x, y) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} cp1x\r\n     * @param {Number} cp1y\r\n     * @param {Number} cp2x\r\n     * @param {Number} cp2y\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Drawing}\r\n     */\r\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} cpx\r\n     * @param {Number} cpy\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Drawing}\r\n     */\r\n    quadraticCurveTo(cpx, cpy, x, y) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} radius\r\n     * @param {Number} startAngle\r\n     * @param {Number} endAngle\r\n     * @param {Boolean} [anticlockwise=false]\r\n     * @returns {Drawing}\r\n     */\r\n    arc(x, y, radius, startAngle, endAngle, anticlockwise = false) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x1\r\n     * @param {Number} y1\r\n     * @param {Number} x2\r\n     * @param {Number} y2\r\n     * @param {Number} radius\r\n     * @returns {Drawing}\r\n     */\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} radiusX\r\n     * @param {Number} radiusY\r\n     * @param {Number} rotation\r\n     * @param {Number} startAngle\r\n     * @param {Number} endAngle\r\n     * @param {Boolean} [anticlockwise=false]\r\n     * @returns {Drawing}\r\n     */\r\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise = false) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {Drawing}\r\n     */\r\n    rect(x, y, width, height) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object|Rectangle} rect\r\n     * @param {Number} rect.x\r\n     * @param {Number} rect.y\r\n     * @param {Number} rect.width\r\n     * @param {Number} rect.height\r\n     * @returns {Drawing}\r\n     */\r\n    drawRect({ x, y, width, height } = {}) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object|Circle} circle\r\n     * @param {Number} rect.x\r\n     * @param {Number} rect.y\r\n     * @param {Number} rect.radius\r\n     * @returns {Drawing}\r\n     */\r\n    drawCirlce({ x, y, radius } = {}) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object|Polygon} polygon\r\n     * @param {Number} rect.x\r\n     * @param {Number} rect.y\r\n     * @param {Vector[]} rect.points\r\n     * @returns {Drawing}\r\n     */\r\n    drawPolygon({ x, y, points } = {}) {\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object} style\r\n     * @param {Number} [style.width]\r\n     * @param {Color} [style.color]\r\n     * @returns {Drawing}\r\n     */\r\n    setLineStyle({ width, color } = {}) {\r\n        if (width !== undefined) {\r\n            this.lineWidth = width;\r\n        }\r\n\r\n        if (color !== undefined) {\r\n            this.lineColor = color;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    render(renderManager) {\r\n        if (this.visible && renderManager.insideViewport(this)) {\r\n            const renderer = renderManager.getRenderer('primitive');\r\n\r\n            renderManager.setRenderer(renderer);\r\n\r\n            renderer.render(this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._lineColor.destroy();\r\n        this._lineColor = null;\r\n\r\n        this._fillColor.destroy();\r\n        this._fillColor = null;\r\n\r\n        this._lineWidth = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/primitive/Drawing.js","import Sprite from '../sprite/Sprite';\r\nimport Texture from '../Texture';\r\nimport TextStyle from './TextStyle';\r\nimport Rectangle from '../../math/Rectangle';\r\n\r\nconst\r\n\r\n    /**\r\n     * @inner\r\n     * @type {Map<String, Number>}\r\n     */\r\n    heightCache = new Map(),\r\n\r\n    /**\r\n     * @inner\r\n     * @type {RegExp}\r\n     */\r\n    NEWLINE = /(?:\\r\\n|\\r|\\n)/;\r\n\r\n/**\r\n * @class Text\r\n * @extends Sprite\r\n */\r\nexport default class Text extends Sprite {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {String} text\r\n     * @param {TextStyle|Object} [style]\r\n     * @param {Object} [options]\r\n     * @param {Number} [options.scaleMode]\r\n     * @param {Number} [options.wrapMode]\r\n     * @param {Boolean} [options.premultiplyAlpha]\r\n     * @param {Boolean} [options.generateMipMap]\r\n     * @param {HTMLCanvasElement} [canvas=document.createElement('canvas')]\r\n     */\r\n    constructor(text, style, options, canvas = document.createElement('canvas')) {\r\n        super(new Texture(canvas, options));\r\n\r\n        /**\r\n         * @private\r\n         * @member {String}\r\n         */\r\n        this._text = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {TextStyle}\r\n         */\r\n        this._style = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {HTMLCanvasElement}\r\n         */\r\n        this._canvas = canvas;\r\n\r\n        /**\r\n         * @private\r\n         * @member {CanvasRenderingContext2D}\r\n         */\r\n        this._context = canvas.getContext('2d');\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._dirty = true;\r\n\r\n        this.setText(text)\r\n            .setStyle(style)\r\n            .updateTexture();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {String}\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    set text(text) {\r\n        this.setText(text);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {TextStyle}\r\n     */\r\n    get style() {\r\n        return this._style;\r\n    }\r\n\r\n    set style(style) {\r\n        this.setStyle(style);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {HTMLCanvasElement}\r\n     */\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    set canvas(canvas) {\r\n        this.setCanvas(canvas);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {String} text\r\n     * @returns {Text}\r\n     */\r\n    setText(text) {\r\n        if (this._text !== text) {\r\n            this._text = text;\r\n            this._dirty = true;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {TextStyle|Object} style\r\n     * @returns {Text}\r\n     */\r\n    setStyle(style) {\r\n        this._style = (style instanceof TextStyle) ? style : new TextStyle(style);\r\n        this._dirty = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {HTMLCanvasElement} canvas\r\n     * @returns {Text}\r\n     */\r\n    setCanvas(canvas) {\r\n        if (this._canvas !== canvas) {\r\n            this._canvas = canvas;\r\n            this._context = canvas.getContext('2d');\r\n            this._dirty = true;\r\n\r\n            this.setTextureFrame(Rectangle.Temp.set(0, 0, canvas.width, canvas.height));\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    updateTexture() {\r\n        if (this._style && (this._dirty || this._style.dirty)) {\r\n            const canvas = this._canvas,\r\n                context = this._context,\r\n                style = this._style.apply(context),\r\n                text = style.wordWrap ? this.getWordWrappedText() : this._text,\r\n                lineHeight = Text.determineFontHeight(context.font) + style.strokeThickness,\r\n                lines = text.split(NEWLINE),\r\n                lineMetrics = lines.map((line) => context.measureText(line)),\r\n                maxLineWidth = lineMetrics.reduce((max, measure) => Math.max(max, measure.width), 0),\r\n                canvasWidth = Math.ceil((maxLineWidth + style.strokeThickness) + (style.padding * 2)),\r\n                canvasHeight = Math.ceil((lineHeight * lines.length) + (style.padding * 2));\r\n\r\n            if (canvasWidth !== canvas.width || canvasHeight !== canvas.height) {\r\n                canvas.width = canvasWidth;\r\n                canvas.height = canvasHeight;\r\n\r\n                this.setTextureFrame(Rectangle.Temp.set(0, 0, canvasWidth, canvasHeight));\r\n            } else {\r\n                context.clearRect(0, 0, canvasWidth, canvasHeight);\r\n            }\r\n\r\n            style.apply(context);\r\n\r\n            for (let i = 0; i < lines.length; i++) {\r\n                const metrics = lineMetrics[i],\r\n                    lineWidth = (maxLineWidth - metrics.width),\r\n                    offset = (style.align === 'right') ? lineWidth : lineWidth / 2,\r\n                    padding = style.padding + (style.strokeThickness / 2),\r\n                    lineX = metrics.actualBoundingBoxLeft + (style.align === 'left' ? 0 : offset) + padding,\r\n                    lineY = metrics.fontBoundingBoxAscent + (lineHeight * i) + padding;\r\n\r\n                if (style.stroke && style.strokeThickness) {\r\n                    context.strokeText(lines[i], lineX, lineY);\r\n                }\r\n\r\n                if (style.fill) {\r\n                    context.fillText(lines[i], lineX, lineY);\r\n                }\r\n            }\r\n\r\n            this.texture.updateSource();\r\n\r\n            this._dirty = false;\r\n            this._style.dirty = false;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {String}\r\n     */\r\n    getWordWrappedText() {\r\n        const context = this._context,\r\n            wrapWidth = this._style.wordWrapWidth,\r\n            lines = this._text.split('\\n'),\r\n            spaceWidth = context.measureText(' ').width;\r\n\r\n        let spaceLeft = wrapWidth,\r\n            result = '';\r\n\r\n        for (let y = 0; y < lines.length; y++) {\r\n            const words = lines[y].split(' ');\r\n\r\n            if (y > 0) {\r\n                result += '\\n';\r\n            }\r\n\r\n            for (let x = 0; x < words.length; x++) {\r\n                const word = words[x],\r\n                    wordWidth = context.measureText(word).width,\r\n                    pairWidth = wordWidth + spaceWidth;\r\n\r\n                if (pairWidth > spaceLeft) {\r\n                    if (x > 0) {\r\n                        result += '\\n';\r\n                    }\r\n\r\n                    spaceLeft = wrapWidth;\r\n                } else {\r\n                    spaceLeft -= pairWidth;\r\n                }\r\n\r\n                result += `${word} `;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    render(renderManager) {\r\n        if (this.visible) {\r\n            this.updateTexture();\r\n\r\n            super.render(renderManager);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this._text = null;\r\n        this._style = null;\r\n        this._canvas = null;\r\n        this._context = null;\r\n        this._dirty = null;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @static\r\n     * @param {String} font\r\n     * @returns {Number}\r\n     */\r\n    static determineFontHeight(font) {\r\n        if (!heightCache.has(font)) {\r\n            const body = document.body,\r\n                dummy = document.createElement('div');\r\n\r\n            dummy.appendChild(document.createTextNode('M'));\r\n            dummy.setAttribute('style', `font: ${font};position:absolute;top:0;left:0`);\r\n\r\n            body.appendChild(dummy);\r\n            heightCache.set(font, dummy.offsetHeight);\r\n            body.removeChild(dummy);\r\n        }\r\n\r\n        return heightCache.get(font);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/text/Text.js","import Texture from '../Texture';\r\nimport Rectangle from '../../math/Rectangle';\r\nimport Sprite from './Sprite';\r\nimport { removeArrayItems } from '../../utils/array';\r\n\r\n/**\r\n * @class Spritesheet\r\n * @extends Sprite\r\n */\r\nexport default class Spritesheet extends Sprite {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {?Texture|?RenderTexture} texture\r\n     * @param {Object<String, Object>[]} frames\r\n     * @param {String} [startFrame]\r\n     */\r\n    constructor(texture, frames, startFrame) {\r\n        super(texture);\r\n\r\n        /**\r\n         * @private\r\n         * @type {Map<String, Rectangle>}\r\n         */\r\n        this._frames = new Map();\r\n\r\n        /**\r\n         * @private\r\n         * @type {String[]}\r\n         */\r\n        this._frameNames = [];\r\n\r\n        /**\r\n         * @private\r\n         * @type {String}\r\n         */\r\n        this._currentFrame = null;\r\n\r\n        this.parse(frames);\r\n\r\n        if (startFrame !== undefined) {\r\n            this.setFrame(startFrame);\r\n        } else {\r\n            this.setFrame(this._frameNames[0]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Object<String, Object>[]} frames\r\n     * @param {Boolean} [clearOldFrames=true]\r\n     * @return {Spritesheet}\r\n     */\r\n    parse(frames, clearOldFrames = true) {\r\n        if (clearOldFrames) {\r\n            this.clearFrames();\r\n        }\r\n\r\n        for (const name of Object.keys(frames)) {\r\n            this.addFrame(name, frames[name]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {String} name\r\n     * @param {Object} frame\r\n     * @param {Number} [frame.x]\r\n     * @param {Number} [frame.y]\r\n     * @param {Number} [frame.width]\r\n     * @param {Number} [frame.height]\r\n     * @return {Spritesheet}\r\n     */\r\n    addFrame(name, { x, y, width, height } = {}) {\r\n        this._frames.set(name, new Rectangle(x, y, width, height));\r\n        this._frameNames.push(name);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {String} name\r\n     * @returns {Spritesheet}\r\n     */\r\n    removeFrame(name) {\r\n        const frame = this.getFrame(name),\r\n            index = this._frameNames.indexOf(name);\r\n\r\n        this._frames.delete(name);\r\n        removeArrayItems(this._frameNames, index, 1);\r\n        frame.destroy();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {String} name\r\n     * @returns {Rectangle}\r\n     */\r\n    getFrame(name) {\r\n        if (!this._frames.has(name)) {\r\n            throw new Error(`Spritesheet could not find frame \"${name}\".`);\r\n        }\r\n\r\n        return this._frames.get(name);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {String} name\r\n     * @returns {Spritesheet}\r\n     */\r\n    setFrame(name) {\r\n        if (this._currentFrame !== name) {\r\n            this._currentFrame = name;\r\n            this.setTextureFrame(this.getFrame(name));\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {Spritesheet}\r\n     */\r\n    clearFrames() {\r\n        for (const frame of this._frames.values()) {\r\n            frame.destroy();\r\n        }\r\n\r\n        this._frames.clear();\r\n        this._frameNames.length = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this.clearFrames();\r\n\r\n        this._frames = null;\r\n        this._frameNames = null;\r\n        this._currentFrame = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/sprite/Spritesheet.js","import { TIME } from '../const';\r\nimport Drawable from '../graphics/Drawable';\r\nimport Particle from './Particle';\r\nimport Rectangle from '../math/Rectangle';\r\nimport Time from '../core/time/Time';\r\nimport Vector from '../math/Vector';\r\nimport Color from '../core/Color';\r\n\r\n/**\r\n * @class ParticleEmitter\r\n * @extends Drawable\r\n */\r\nexport default class ParticleEmitter extends Drawable {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Texture} texture\r\n     * @param {Object} [options]\r\n     * @param {Time} [options.totalLifetime]\r\n     * @param {Time} [options.elapsedLifetime]\r\n     * @param {Vector} [options.position]\r\n     * @param {Vector} [options.velocity]\r\n     * @param {Vector} [options.scale]\r\n     * @param {Number} [options.rotation]\r\n     * @param {Number} [options.rotationSpeed]\r\n     * @param {Color} [options.tint]\r\n     */\r\n    constructor(texture, { totalLifetime, elapsedLifetime, position, velocity, scale, rotation, rotationSpeed, tint } = {}) {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Time}\r\n         */\r\n        this._particleTotalLifetime = (totalLifetime && totalLifetime.clone()) || new Time(1, TIME.SECONDS);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Time}\r\n         */\r\n        this._particleElapsedLifetime = (elapsedLifetime && elapsedLifetime.clone()) || new Time(0, TIME.SECONDS);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._particlePosition = (position && position.clone()) || new Vector(0, 0);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._particleVelocity = (velocity && velocity.clone()) || new Vector(0, 0);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._particleScale = (scale && scale.clone()) || new Vector(1, 1);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._particleRotation = rotation || 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._particleRotationSpeed = rotationSpeed || 0;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Color}\r\n         */\r\n        this._particleTint = (tint && tint.clone()) || new Color(255, 255, 255);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Particle[]}\r\n         */\r\n        this._particles = [];\r\n\r\n        /**\r\n         * @private\r\n         * @member {Particle[]}\r\n         */\r\n        this._graveyard = [];\r\n\r\n        /**\r\n         * @private\r\n         * @member {ParticleModifier[]}\r\n         */\r\n        this._modifiers = [];\r\n\r\n        /**\r\n         * @private\r\n         * @member {Texture}\r\n         */\r\n        this._texture = null;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Rectangle}\r\n         */\r\n        this._textureFrame = new Rectangle();\r\n\r\n        /**\r\n         * @private\r\n         * @type {Uint32Array}\r\n         */\r\n        this._texCoordData = new Uint32Array(4);\r\n\r\n        /**\r\n         * @private\r\n         * @member {Boolean}\r\n         */\r\n        this._updateTexCoords = true;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._emissionRate = 1;\r\n\r\n        /**\r\n         * @private\r\n         * @member {Number}\r\n         */\r\n        this._emissionDelta = 0;\r\n\r\n        if (texture) {\r\n            this.setTexture(texture);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Time}\r\n     */\r\n    get particleTotalLifetime() {\r\n        return this._particleTotalLifetime;\r\n    }\r\n\r\n    set particleTotalLifetime(time) {\r\n        this._particleTotalLifetime.copy(time);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Time}\r\n     */\r\n    get particleElapsedLifetime() {\r\n        return this._particleElapsedLifetime;\r\n    }\r\n\r\n    set particleElapsedLifetime(time) {\r\n        this._particleElapsedLifetime.copy(time);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get particlePosition() {\r\n        return this._particlePosition;\r\n    }\r\n\r\n    set particlePosition(position) {\r\n        this._particlePosition.copy(position);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get particleVelocity() {\r\n        return this._particleVelocity;\r\n    }\r\n\r\n    set particleVelocity(velocity) {\r\n        this._particleVelocity.copy(velocity);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get particleScale() {\r\n        return this._particleScale;\r\n    }\r\n\r\n    set particleScale(scale) {\r\n        this._particleScale.copy(scale);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get particleRotation() {\r\n        return this._particleRotation;\r\n    }\r\n\r\n    set particleRotation(degrees) {\r\n        const rotation = degrees % 360;\r\n\r\n        this._particleRotation = rotation < 0 ? rotation + 360 : rotation;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get particleRotationSpeed() {\r\n        return this._particleRotationSpeed;\r\n    }\r\n\r\n    set particleRotationSpeed(rotationSpeed) {\r\n        this._particleRotationSpeed = rotationSpeed;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get particleTint() {\r\n        return this._particleTint;\r\n    }\r\n\r\n    set particleTint(color) {\r\n        this._particleTint.copy(color);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Particle[]}\r\n     */\r\n    get particles() {\r\n        return this._particles;\r\n    }\r\n\r\n    set particles(particles) {\r\n        const graveyard = this._graveyard,\r\n            particlesA = this._particles,\r\n            particlesB = particles,\r\n            lenA = particlesA.length,\r\n            lenB = particlesB.length,\r\n            diff = (lenA - lenB);\r\n\r\n        for (let i = 0; i < lenA; i++) {\r\n            particlesA[i].copy(particlesB[i]);\r\n        }\r\n\r\n        if (diff > 0) {\r\n            for (let i = lenB; i < lenA; i++) {\r\n                graveyard.push(particlesA.pop());\r\n            }\r\n        } else if (diff < 0) {\r\n            for (let i = lenA; i < lenB; i++) {\r\n                const particle = (graveyard.pop() || new Particle());\r\n\r\n                particles.push(particle.copy(particlesB[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Object}\r\n     */\r\n    get particleOptions() {\r\n        return {\r\n            totalLifetime: this.particleTotalLifetime,\r\n            elapsedLifetime: this.particleElapsedLifetime,\r\n            position: this.particlePosition,\r\n            velocity: this.particleVelocity,\r\n            scale: this.particleScale,\r\n            rotation: this.particleRotation,\r\n            rotationSpeed: this.particleRotationSpeed,\r\n            tint: this.particleTint,\r\n        };\r\n    }\r\n\r\n    set particleOptions(options) {\r\n        this.setParticleOptions(options);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {ParticleModifier[]}\r\n     */\r\n    get modifiers() {\r\n        return this._modifiers;\r\n    }\r\n\r\n    set modifiers(newModifiers) {\r\n        for (const modifier of this._modifiers) {\r\n            modifier.destroy();\r\n        }\r\n\r\n        this._modifiers.length = 0;\r\n\r\n        for (const modifier of newModifiers) {\r\n            this._modifiers.push(modifier.clone());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Texture}\r\n     */\r\n    get texture() {\r\n        return this._texture;\r\n    }\r\n\r\n    set texture(texture) {\r\n        this.setTexture(texture);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Rectangle}\r\n     */\r\n    get textureFrame() {\r\n        return this._textureFrame;\r\n    }\r\n\r\n    set textureFrame(frame) {\r\n        this.setTextureFrame(frame);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @readonly\r\n     * @member {Uint32Array}\r\n     */\r\n    get texCoordData() {\r\n        if (this._updateTexCoords) {\r\n            const { width, height } = this._texture,\r\n                { left, top, right, bottom } = this._textureFrame,\r\n                minX = ((left / width) * 65535 & 65535),\r\n                minY = ((top / height) * 65535 & 65535) << 16,\r\n                maxX = ((right / width) * 65535 & 65535),\r\n                maxY = ((bottom / height) * 65535 & 65535) << 16;\r\n\r\n            if (this._texture.flipY) {\r\n                this._texCoordData[0] = (maxY | minX);\r\n                this._texCoordData[1] = (maxY | maxX);\r\n                this._texCoordData[2] = (minY | maxX);\r\n                this._texCoordData[3] = (minY | minX);\r\n            } else {\r\n                this._texCoordData[0] = (minY | minX);\r\n                this._texCoordData[1] = (minY | maxX);\r\n                this._texCoordData[2] = (maxY | maxX);\r\n                this._texCoordData[3] = (maxY | minX);\r\n            }\r\n\r\n            this._updateTexCoords = false;\r\n        }\r\n\r\n        return this._texCoordData;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get emissionRate() {\r\n        return this._emissionRate;\r\n    }\r\n\r\n    set emissionRate(particlesPerSecond) {\r\n        this.setEmissionRate(particlesPerSecond);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get width() {\r\n        return Math.abs(this.scale.x) * this._textureFrame.width;\r\n    }\r\n\r\n    set width(value) {\r\n        this.scale.x = value / this._textureFrame.width;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Number}\r\n     */\r\n    get height() {\r\n        return Math.abs(this.scale.y) * this._textureFrame.height;\r\n    }\r\n\r\n    set height(value) {\r\n        this.scale.y = value / this._textureFrame.height;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Object} [options]\r\n     * @param {Time} [options.totalLifetime]\r\n     * @param {Time} [options.elapsedLifetime]\r\n     * @param {Vector} [options.position]\r\n     * @param {Vector} [options.velocity]\r\n     * @param {Vector} [options.scale]\r\n     * @param {Number} [options.rotation]\r\n     * @param {Number} [options.rotationSpeed]\r\n     * @param {Color} [options.tint]\r\n     * @returns {Drawable}\r\n     */\r\n    setParticleOptions({ totalLifetime, elapsedLifetime, position, velocity, scale, rotation, rotationSpeed, tint } = {}) {\r\n        if (totalLifetime !== undefined) {\r\n            this.particleTotalLifetime = totalLifetime;\r\n        }\r\n\r\n        if (elapsedLifetime !== undefined) {\r\n            this.particleElapsedLifetime = elapsedLifetime;\r\n        }\r\n\r\n        if (position !== undefined) {\r\n            this.particlePosition = position;\r\n        }\r\n\r\n        if (velocity !== undefined) {\r\n            this.particleVelocity = velocity;\r\n        }\r\n\r\n        if (scale !== undefined) {\r\n            this.particleScale = scale;\r\n        }\r\n\r\n        if (rotation !== undefined) {\r\n            this.particleRotation = rotation;\r\n        }\r\n\r\n        if (rotationSpeed !== undefined) {\r\n            this.particleRotationSpeed = rotationSpeed;\r\n        }\r\n\r\n        if (tint !== undefined) {\r\n            this.particleTint = tint;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Texture} texture\r\n     * @returns {ParticleEmitter}\r\n     */\r\n    setTexture(texture) {\r\n        if (this._texture !== texture) {\r\n            this._texture = texture;\r\n            this.resetTextureFrame();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Rectangle} frame\r\n     * @returns {ParticleEmitter}\r\n     */\r\n    setTextureFrame(frame) {\r\n        this._textureFrame.copy(frame);\r\n        this._updateTexCoords = true;\r\n\r\n        this.localBounds.set(0, 0, frame.width, frame.height);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @returns {ParticleEmitter}\r\n     */\r\n    resetTextureFrame() {\r\n        return this.setTextureFrame(Rectangle.Temp.set(0, 0, this._texture.width, this._texture.height));\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Number} particlesPerSecond\r\n     * @returns {ParticleEmitter}\r\n     */\r\n    setEmissionRate(particlesPerSecond) {\r\n        this._emissionRate = particlesPerSecond;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {ParticleModifier} modifier\r\n     * @returns {ParticleEmitter}\r\n     */\r\n    addModifier(modifier) {\r\n        this._modifiers.push(modifier);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Time} time\r\n     * @returns {Number}\r\n     */\r\n    getParticleCount(time) {\r\n        const particleAmount = (this._emissionRate * time.seconds) + this._emissionDelta,\r\n            particles = particleAmount | 0;\r\n\r\n        this._emissionDelta = (particleAmount - particles);\r\n\r\n        return particles;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Time} delta\r\n     * @returns {ParticleEmitter}\r\n     */\r\n    update(delta) {\r\n        const count = this.getParticleCount(delta),\r\n            options = this.particleOptions,\r\n            particles = this._particles,\r\n            graveyard = this._graveyard,\r\n            modifiers = this._modifiers;\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            const particle = (graveyard.pop() || new Particle());\r\n\r\n            particles.push(particle.copy(options));\r\n        }\r\n\r\n        for (let i = particles.length - 1; i >= 0; i--) {\r\n            const particle = particles[i].update(delta);\r\n\r\n            if (particle.expired) {\r\n                graveyard.push(particles.splice(i, 1)[0]);\r\n\r\n                continue;\r\n            }\r\n\r\n            for (const modifier of modifiers) {\r\n                modifier.apply(particle, delta);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    render(renderManager) {\r\n        if (this.visible && renderManager.insideViewport(this)) {\r\n            const renderer = renderManager.getRenderer('particle');\r\n\r\n            renderManager.setRenderer(renderer);\r\n            renderer.render(this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {ParticleEmitter} emitter\r\n     * @returns {ParticleEmitter}\r\n     */\r\n    copy(emitter) {\r\n        this.particleOptions = emitter.particleOptions;\r\n        this.particles = emitter.particles;\r\n        this.texture = emitter.texture;\r\n        this.textureFrame = emitter.textureFrame;\r\n        this.emissionRate = emitter.emissionRate;\r\n        this.modifiers = emitter.modifiers;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {ParticleEmitter}\r\n     */\r\n    clone() {\r\n        const emitter = new ParticleEmitter(this.texture, this.particleOptions);\r\n\r\n        emitter.particles = this.particles;\r\n        emitter.textureFrame = this.textureFrame;\r\n        emitter.emissionRate = this.emissionRate;\r\n        emitter.modifiers = this.modifiers;\r\n\r\n        return emitter;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        for (const particle of this._particles) {\r\n            particle.destroy();\r\n        }\r\n\r\n        for (const particle of this._graveyard) {\r\n            particle.destroy();\r\n        }\r\n\r\n        this._particleTotalLifetime.destroy();\r\n        this._particleTotalLifetime = null;\r\n\r\n        this._particleElapsedLifetime.destroy();\r\n        this._particleElapsedLifetime = null;\r\n\r\n        this._particlePosition.destroy();\r\n        this._particlePosition = null;\r\n\r\n        this._particleVelocity.destroy();\r\n        this._particleVelocity = null;\r\n\r\n        this._particleScale.destroy();\r\n        this._particleScale = null;\r\n\r\n        this._particleTint.destroy();\r\n        this._particleTint = null;\r\n\r\n        this._particles.length = 0;\r\n        this._particles = null;\r\n\r\n        this._graveyard.length = 0;\r\n        this._graveyard = null;\r\n\r\n        this._modifiers.length = 0;\r\n        this._modifiers = null;\r\n\r\n        this._textureFrame.destroy();\r\n        this._textureFrame = null;\r\n\r\n        this._texture = null;\r\n        this._texCoordData = null;\r\n        this._blendMode = null;\r\n        this._emissionRate = null;\r\n        this._emissionDelta = null;\r\n        this._updateTexCoords = null;\r\n        this._particleRotation = null;\r\n        this._particleRotationSpeed = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/ParticleEmitter.js","import ParticleModifier from '../ParticleModifier';\r\nimport Vector from '../../math/Vector';\r\n\r\n/**\r\n * @class ForceModifier\r\n * @extends ParticleModifier\r\n */\r\nexport default class ForceModifier extends ParticleModifier {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Number} velocityX\r\n     * @param {Number} velocityY\r\n     */\r\n    constructor(velocityX, velocityY) {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Vector}\r\n         */\r\n        this._velocity = new Vector(velocityX, velocityY);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Vector}\r\n     */\r\n    get velocity() {\r\n        return this._velocity;\r\n    }\r\n\r\n    set velocity(velocity) {\r\n        this.setVelocity(velocity);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Vector} velocity\r\n     * @returns {ForceModifier}\r\n     */\r\n    setVelocity(velocity) {\r\n        this._velocity.copy(velocity);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    apply(particle, delta) {\r\n        const { x, y } = this._velocity,\r\n            { seconds } = delta;\r\n\r\n        particle.velocity.add(x * seconds, y * seconds);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    clone() {\r\n        return new ForceModifier(this._velocity.x, this._velocity.y);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        this._velocity.destroy();\r\n        this._velocity = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/modifiers/ForceModifier.js","import ParticleModifier from '../ParticleModifier';\nimport Vector from '../../math/Vector';\n\n/**\n * @class ScaleModifier\n * @extends ParticleModifier\n */\nexport default class ScaleModifier extends ParticleModifier {\n\n    /**\n     * @constructor\n     * @param {Number} factorX\n     * @param {Number} factorY\n     */\n    constructor(factorX, factorY) {\n        super();\n\n        /**\n         * @private\n         * @member {Vector}\n         */\n        this._scaleFactor = new Vector(factorX, factorY);\n    }\n\n    /**\n     * @public\n     * @member {Vector}\n     */\n    get scaleFactor() {\n        return this._scaleFactor;\n    }\n\n    set scaleFactor(scaleFactor) {\n        this.setScaleFactor(scaleFactor);\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Vector} scaleFactor\n     * @returns {ScaleModifier}\n     */\n    setScaleFactor(scaleFactor) {\n        this._scaleFactor.copy(scaleFactor);\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    apply(particle, delta) {\n        const { x, y } = this._scaleFactor,\n            { seconds } = delta;\n\n        particle.scale.add(x * seconds, y * seconds);\n    }\n\n    /**\n     * @override\n     */\n    clone() {\n        return new ScaleModifier(this._scaleFactor.x, this._scaleFactor.y);\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        this._scaleFactor.destroy();\n        this._scaleFactor = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/modifiers/ScaleModifier.js","import ParticleModifier from '../ParticleModifier';\n\n/**\n * @class TorqueModifier\n * @extends ParticleModifier\n */\nexport default class TorqueModifier extends ParticleModifier {\n\n    /**\n     * @constructor\n     * @param {Number} angularAcceleration=0\n     */\n    constructor(angularAcceleration = 0) {\n        super();\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._angularAcceleration = angularAcceleration;\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get angularAcceleration() {\n        return this._angularAcceleration;\n    }\n\n    set angularAcceleration(angularAcceleration) {\n        this.setAngularAcceleration(angularAcceleration);\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Number} angularAcceleration\n     * @returns {TorqueModifier}\n     */\n    setAngularAcceleration(angularAcceleration) {\n        this._angularAcceleration = angularAcceleration;\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    apply(particle, delta) {\n        particle.rotationSpeed = particle.rotationSpeed + (this._angularAcceleration * delta.seconds);\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    clone() {\n        return new TorqueModifier(this._angularAcceleration);\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        this._angularAcceleration = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/modifiers/TorqueModifier.js","import ParticleModifier from '../ParticleModifier';\r\nimport Vector from '../../math/Vector';\r\nimport Color from '../../core/Color';\r\n\r\n/**\r\n * @class ColorModifier\r\n * @extends ParticleModifier\r\n */\r\nexport default class ColorModifier extends ParticleModifier {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Color} fromColor\r\n     * @param {Color} toColor\r\n     */\r\n    constructor(fromColor, toColor) {\r\n        super();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Color}\r\n         */\r\n        this._fromColor = (fromColor && fromColor.clone()) || new Color();\r\n\r\n        /**\r\n         * @private\r\n         * @member {Color}\r\n         */\r\n        this._toColor = (toColor && toColor.clone()) || new Color();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get fromColor() {\r\n        return this._fromColor;\r\n    }\r\n\r\n    set fromColor(color) {\r\n        this.setFromColor(color);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @member {Color}\r\n     */\r\n    get toColor() {\r\n        return this._toColor;\r\n    }\r\n\r\n    set toColor(color) {\r\n        this.setToColor(color);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Color} color\r\n     * @returns {ColorModifier}\r\n     */\r\n    setFromColor(color) {\r\n        this._fromColor.copy(color);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @chainable\r\n     * @param {Color} color\r\n     * @returns {ColorModifier}\r\n     */\r\n    setToColor(color) {\r\n        this._toColor.copy(color);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    apply(particle, delta) {\r\n        const ratio = particle.elapsedRatio,\r\n            { r: rA, g: gA, b: bA, a: aA } = this._fromColor,\r\n            { r: rB, g: gB, b: bB, a: aB } = this._toColor;\r\n\r\n        particle.tint.set(\r\n            ((rB - rA) * ratio) + rA,\r\n            ((gB - gA) * ratio) + gA,\r\n            ((bB - bA) * ratio) + bA,\r\n            ((aB - aA) * ratio) + aA\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    clone() {\r\n        return new ColorModifier(this._fromColor, this._toColor);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    destroy() {\r\n        this._fromColor.destroy();\r\n        this._fromColor = null;\r\n\r\n        this._toColor.destroy();\r\n        this._toColor = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles/modifiers/ColorModifier.js","import settings from '../settings';\nimport EventEmitter from '../core/EventEmitter';\n\n/**\n * @class Input\n * @extends EventEmitter\n */\nexport default class Input extends EventEmitter {\n\n    /**\n     * @constructor\n     * @param {Set<Number>|Number[]|Number} channels\n     * @param {Object} [options]\n     * @param {Function} [options.start]\n     * @param {Function} [options.stop]\n     * @param {Function} [options.active]\n     * @param {Function} [options.trigger]\n     * @param {*} [options.context]\n     * @param {Number} [options.threshold=settings.INPUT_THRESHOLD]\n     */\n    constructor(channels, { start, stop, active, trigger, context, threshold = settings.INPUT_THRESHOLD } = {}) {\n        super();\n\n        /**\n         * @private\n         * @member {Set<Number>}\n         */\n        this._channels = new Set((typeof channels === 'number') ? [channels] : channels);\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._threshold = threshold;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._triggered = 0;\n\n        /**\n         * @private\n         * @member {Number}\n         */\n        this._value = 0;\n\n        if (start) {\n            this.on('start', start, context);\n        }\n\n        if (stop) {\n            this.on('stop', stop, context);\n        }\n\n        if (active) {\n            this.on('active', active, context);\n        }\n\n        if (trigger) {\n            this.on('trigger', trigger, context);\n        }\n    }\n\n    /**\n     * @public\n     * @member {Set<Number>}\n     */\n    get channels() {\n        return this._channels;\n    }\n\n    set channels(channels) {\n        this._channels.clear();\n\n        for (const channel of channels) {\n            this._channels.add(channel);\n        }\n    }\n\n    /**\n     * @public\n     * @member {Number}\n     */\n    get threshold() {\n        return this._threshold;\n    }\n\n    set threshold(threshold) {\n        this._threshold = threshold;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Number}\n     */\n    get value() {\n        return this._value;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @param {Float32Array} channels\n     * @returns {Input}\n     */\n    update(channels) {\n        this._value = 0;\n\n        for (const channel of this._channels) {\n            this._value = Math.max(channels[channel], this._value);\n        }\n\n        if (this._value) {\n            if (!this._triggered) {\n                this._triggered = Date.now();\n                this.trigger('start', this._value);\n            }\n\n            this.trigger('active', this._value);\n        } else if (this._triggered) {\n            this.trigger('stop', this._value);\n\n            if ((Date.now() - this._triggered) < this._threshold) {\n                this.trigger('trigger', this._value);\n            }\n\n            this._triggered = 0;\n        }\n\n        return this;\n    }\n\n    /**\n     * @override\n     */\n    destroy() {\n        super.destroy();\n\n        this._channels.clear();\n        this._channels = null;\n\n        this._threshold = null;\n        this._triggered = null;\n        this._value = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/input/Input.js","import support from '../support';\nimport { audioContext } from '../utils/media';\n\n/**\n * @class AudioAnalyser\n */\nexport default class AudioAnalyser {\n\n    /**\n     * @constructor\n     * @param {Media|Sound|Music|Video} media\n     * @param {Object} [options]\n     * @param {Number} [options.fftSize=2048]\n     * @param {Number} [options.minDecibels=-100]\n     * @param {Number} [options.maxDecibels=-30]\n     * @param {Number} [options.smoothingTimeConstant=0.8]\n     */\n    constructor(media, {\n        fftSize = 2048,\n        minDecibels = -100,\n        maxDecibels = -30,\n        smoothingTimeConstant = 0.8,\n    } = {}) {\n        if (!support.webAudio) {\n            throw new Error('Web Audio API should be enabled when using the audio analyzer.');\n        }\n\n        /**\n         * @private\n         * @member {?AnalyserNode}\n         */\n        this._analyser = audioContext.createAnalyser();\n        this._analyser.fftSize = fftSize;\n        this._analyser.minDecibels = minDecibels;\n        this._analyser.maxDecibels = maxDecibels;\n        this._analyser.smoothingTimeConstant = smoothingTimeConstant;\n\n        /**\n         * @private\n         * @member {?AudioNode}\n         */\n        this._analyserTarget = null;\n\n        /**\n         * @private\n         * @member {Media|Sound|Music|Video}\n         */\n        this._media = media;\n\n        /**\n         * @private\n         * @member {?Uint8Array}\n         */\n        this._timeDomainData = null;\n\n        /**\n         * @private\n         * @member {?Uint8Array}\n         */\n        this._frequencyData = null;\n\n        /**\n         * @private\n         * @member {?Float32Array}\n         */\n        this._preciseTimeDomainData = null;\n\n        /**\n         * @private\n         * @member {?Float32Array}\n         */\n        this._preciseFrequencyData = null;\n    }\n\n    /**\n     * @public\n     * @chainable\n     * @returns {AudioAnalyser}\n     */\n    connect() {\n        if (support.webAudio && !this._analyserTarget) {\n            if (!this._media.analyserTarget) {\n                throw new Error('No AudioNode on property analyserTarget.');\n            }\n\n            this._analyserTarget = this._media.analyserTarget;\n            this._analyserTarget.connect(this._analyser);\n        }\n\n        return this;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Uint8Array}\n     */\n    get timeDomainData() {\n        this.connect();\n\n        if (!this._timeDomainData) {\n            this._timeDomainData = new Uint8Array(this._analyser.frequencyBinCount);\n        }\n\n        this._analyser.getByteTimeDomainData(this._timeDomainData);\n\n        return this._timeDomainData;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Uint8Array}\n     */\n    get frequencyData() {\n        this.connect();\n\n        if (!this._frequencyData) {\n            this._frequencyData = new Uint8Array(this._analyser.frequencyBinCount);\n        }\n\n        this._analyser.getByteFrequencyData(this._frequencyData);\n\n        return this._frequencyData;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Float32Array}\n     */\n    get preciseTimeDomainData() {\n        this.connect();\n\n        if (!this._preciseTimeDomainData) {\n            this._preciseTimeDomainData = new Float32Array(this._analyser.frequencyBinCount);\n        }\n\n        this._analyser.getFloatTimeDomainData(this._preciseTimeDomainData);\n\n        return this._preciseTimeDomainData;\n    }\n\n    /**\n     * @public\n     * @readonly\n     * @member {Float32Array}\n     */\n    get preciseFrequencyData() {\n        this.connect();\n\n        if (!this._preciseFrequencyData) {\n            this._preciseFrequencyData = new Float32Array(this._analyser.frequencyBinCount);\n        }\n\n        this._analyser.getFloatFrequencyData(this._preciseFrequencyData);\n\n        return this._preciseFrequencyData;\n    }\n\n    /**\n     * @public\n     */\n    destroy() {\n        if (this._analyserTarget) {\n            this._analyserTarget.disconnect();\n            this._analyserTarget = null;\n        }\n\n        this._analyser.disconnect();\n        this._analyser = null;\n\n        this._media = null;\n        this._timeDomainData = null;\n        this._frequencyData = null;\n        this._preciseTimeDomainData = null;\n        this._preciseFrequencyData = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/media/AudioAnalyser.js","export * from './events';\nexport * from './math';\nexport * from './mime';\nexport * from './media';\nexport * from './array';\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js"],"sourceRoot":""}